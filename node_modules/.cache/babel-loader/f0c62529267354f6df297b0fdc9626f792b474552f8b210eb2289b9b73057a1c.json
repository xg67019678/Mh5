{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport \"vant/es/uploader/style\";\nimport _Uploader from \"vant/es/uploader\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _FormItem2 from \"element-ui/lib/theme-chalk/form-item.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _FormItem from \"element-ui/lib/form-item\";\nimport _Form2 from \"element-ui/lib/theme-chalk/form.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Form from \"element-ui/lib/form\";\nimport \"vant/es/button/style\";\nimport _Button from \"vant/es/button\";\nimport \"vant/es/checkbox/style\";\nimport _Checkbox from \"vant/es/checkbox\";\nimport _Dropdown2 from \"element-ui/lib/theme-chalk/dropdown.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Dropdown from \"element-ui/lib/dropdown\";\nimport _DropdownItem2 from \"element-ui/lib/theme-chalk/dropdown-item.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DropdownItem from \"element-ui/lib/dropdown-item\";\nimport _DropdownMenu2 from \"element-ui/lib/theme-chalk/dropdown-menu.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DropdownMenu from \"element-ui/lib/dropdown-menu\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { uploadimg } from \"@/API/commodity\";\nimport { apiApplyLoan, apiApplyLoanConfig, apiBeforereApply, apiListCountry } from '@/API/loan';\nimport { priceFormat, getStorage, isAlphanumeric } from '@/utils/utis';\nexport default {\n  data() {\n    return {\n      mainColor: process.env.VUE_APP_MAIN_COLOR,\n      isAlphanumeric,\n      creditPeriodList: [],\n      lendableDays: [],\n      defaultRate: [],\n      amountMax: '',\n      amountMin: '',\n      rate: '',\n      //\n      priceFormat,\n      getStorage,\n      isCutting: false,\n      // 是否裁剪\n      imgFile: '',\n      ratioWidth: 1,\n      // 裁剪比例：长 自由比例设置为: 0 即可\n      ratioHeight: 1,\n      // 裁剪比例：宽 自由比例设置为: 0 即可\n      step: 1,\n      checked: false,\n      screenWidth: document.body.clientWidth,\n      type: 'Email',\n      //Email/Moblie\n      uploadCheckIndex: 1,\n      areaCode: 1,\n      isAgree: false,\n      countryName: '',\n      ruleForm: {\n        // loanMethod: this.$t('账户余额'),\n        creditPeriod: '',\n        realName: '',\n        imgCertificateFace: '',\n        imgCertificateBack: '',\n        imgCertificateHand: '',\n        // interestRate: '2%',\n        countryId: '',\n        applyAmount: '',\n        identification: ''\n      },\n      labelPosition: 'top',\n      isCode: true,\n      rules: {\n        identification: [{\n          required: true,\n          message: this.$t('请输入证件号码或者护照号'),\n          trigger: 'blur'\n        }],\n        imgCertificateFace: [{\n          required: true,\n          message: this.$t('请上传身份证正面'),\n          trigger: 'blur'\n        }],\n        imgCertificateBack: [{\n          required: true,\n          message: this.$t('请上传身份证反面'),\n          trigger: 'blur'\n        }],\n        imgCertificateHand: [{\n          required: true,\n          message: this.$t('请上传手持身份证'),\n          trigger: 'blur'\n        }],\n        realName: [{\n          required: true,\n          message: this.$t('请输入真实姓名'),\n          trigger: 'blur'\n        }, {\n          pattern: /^\\S.*\\S$|(^\\S{0,1}\\S$)/,\n          message: this.$t('首尾不能为空格'),\n          trigger: 'blur'\n        }],\n        applyAmount: [{\n          required: true,\n          message: this.$t('请输入金额'),\n          trigger: 'blur'\n        }],\n        creditPeriod: [{\n          required: true,\n          message: this.$t('请选择贷款期限'),\n          trigger: 'change'\n        }],\n        countryId: [{\n          required: true,\n          message: this.$t('请选择国家'),\n          trigger: 'change'\n        }]\n      },\n      options: [{\n        label: this.$t('身份证'),\n        value: '身份证'\n      }, {\n        label: this.$t('护照'),\n        value: '护照'\n      }],\n      fileList1: [],\n      fileList2: [],\n      fileList3: [],\n      fileList4: [],\n      tabList: [this.$t('电子邮箱'), this.$t('手机号')],\n      tabIndex: 0,\n      lang: [{\n        title: '简体中文',\n        key: 'cn',\n        icon: require('@/assets/image/language/cn.png')\n      }, {\n        title: 'English',\n        key: 'en',\n        icon: require('@/assets/image/language/usa.png')\n      }, {\n        title: '繁体中文',\n        key: 'tw',\n        icon: require('@/assets/image/language/tw.png')\n      }],\n      countryList: [],\n      pageDiaCode: true,\n      creditId: this.$route.query?.creditId || null\n    };\n  },\n  components: {\n    // NationalityList,\n    [_DropdownMenu.name]: _DropdownMenu,\n    [_DropdownItem.name]: _DropdownItem,\n    [_Dropdown.name]: _Dropdown,\n    [_Checkbox.name]: _Checkbox,\n    [_Button.name]: _Button,\n    [_Form.name]: _Form,\n    [_FormItem.name]: _FormItem,\n    [_Input.name]: _Input,\n    [_Uploader.name]: _Uploader,\n    [_Select.name]: _Select,\n    [_Option.name]: _Option,\n    [_Toast.name]: _Toast\n  },\n  created() {\n    this.requireApplyLoanConfig();\n    this?.creditId && this.requireBeforereApply(this.creditId);\n    this.requestGetCountryList();\n  },\n  methods: {\n    // 获取国家\n    async requestGetCountryList() {\n      const {\n        data\n      } = await apiListCountry();\n      this.countryList = data;\n    },\n    onCountryChange(id) {\n      this.ruleForm.countryId = id;\n    },\n    async requireApplyLoanConfig() {\n      const res = await apiApplyLoanConfig();\n      res.allLendableDays.forEach(x => {\n        res.lendableDays.forEach(y => {\n          this.creditPeriodList.push({\n            label: x + this.$t('天'),\n            value: x,\n            dis: x !== y\n          });\n        });\n      });\n      this.creditPeriodList = this.deduplication(this.creditPeriodList, 'value');\n      this.creditPeriodList.forEach(x => {\n        res.lendableDays.forEach(y => {\n          if (x.value == y) {\n            x.dis = false;\n          }\n        });\n      });\n      this.lendableDays = res.lendableDays;\n      this.amountMax = res.amountMax;\n      this.amountMin = res.amountMin;\n      this.rate = res.rate;\n    },\n    async requireBeforereApply(creditId) {\n      const res = await apiBeforereApply({\n        creditId\n      });\n      this.ruleForm.realName = res.realName;\n      this.ruleForm.applyAmount = res.applyAmount;\n      this.ruleForm.creditPeriod = res.creditPeriod + '';\n      this.handleSelectChange(res.creditPeriod + '');\n      this.rate = res.creditRate;\n      this.ruleForm.countryId = res.countryId;\n      this.ruleForm.identification = res.identification;\n      this.ruleForm.imgCertificateFace = res.imgCertificateFace;\n      this.ruleForm.imgCertificateBack = res.imgCertificateBack;\n      this.ruleForm.imgCertificateHand = res.imgCertificateHand;\n    },\n    deduplication(arr, name) {\n      const obj = {};\n      return arr.reduce((prev, cur) => {\n        obj[cur[name]] ? '' : obj[cur[name]] = true && prev.push(cur);\n        return prev;\n      }, []);\n    },\n    handleJump() {\n      if (window.plus) {\n        window.plus.runtime.openURL(encodeURI(`${window.origin}/promote/#/contract?lang=${getStorage('lang')}&wt=app`));\n      } else {\n        window.open(`${window.origin}/promote/#/contract?lang=${getStorage('lang')}`);\n      }\n    },\n    idCartChange() {\n      if (!this.isAlphanumeric(this.ruleForm.identification)) {\n        this.$notify(this.$t('证件号码/护照号码验证未通过'));\n        this.ruleForm.identification = '';\n      }\n    },\n    handleDelete(index) {\n      this[`fileList${index}`] = [];\n    },\n    // 提交申请贷款\n    requireSellerRegister() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          if (!this.ruleForm.imgCertificateFace || !this.ruleForm.imgCertificateBack || !this.ruleForm.imgCertificateHand) {\n            // Toast(this.$t('请上传证件照片'))\n            this.$notify(this.$t('请上传证件照片'));\n          } else {\n            if (!this.isAgree) return this.$notify(this.$t('请阅读并同意借款协议'));\n            this.creditId && (this.ruleForm.creditId = this.creditId);\n            apiApplyLoan(this.ruleForm).then(res => {\n              this.$notify(this.$t('申请成功'), 'success');\n              this.$router.replace('/loan/my');\n            }).catch(err => {\n              console.log(`err ::->`, err);\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    handleSelectChange(val) {\n      let day = this.lendableDays.find(x => x == val);\n      !day && this.$notify(this.$t('未满足资质条件'));\n      !day && (this.ruleForm.creditPeriod = '');\n    },\n    // 申请金额不能大于最大值\n    handleInput() {\n      if (this.ruleForm.applyAmount > this.amountMax) {\n        this.ruleForm.applyAmount = this.amountMax;\n      } else if (this.ruleForm.applyAmount < 1) {\n        this.ruleForm.applyAmount = '';\n      }\n    },\n    // 申请金额不能小于最小值\n    handleChange() {\n      if (this.ruleForm.applyAmount < this.amountMin) {\n        this.ruleForm.applyAmount = '';\n        this.$notify(`${this.$t('申请金额不能小于')}${this.amountMin}`);\n      }\n    },\n    openNationality(index) {\n      if (index === 1) {\n        this.isCode = true;\n      } else {\n        this.isCode = false;\n      }\n      this.$refs.controlChild.open();\n    },\n    //文件上传\n    afterRead2(file) {\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('上传中'),\n        forbidClick: true\n      });\n      let formData = new FormData(); //通过formdata上传\n      formData.append('file', file.file);\n      formData.append('moduleName', 'selle');\n      uploadimg(formData).then(data => {\n        this.ruleForm.imgCertificateFace = data;\n      }).catch(error => {\n        this.fileList2 = [];\n        _Toast.fail(this.$t('上传失败'));\n      }).finally(() => {\n        _Toast.clear();\n      });\n    },\n    //文件上传\n    afterRead3(file) {\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('上传中'),\n        forbidClick: true\n      });\n      let formData = new FormData(); //通过formdata上传\n      formData.append('file', file.file);\n      formData.append('moduleName', 'selle');\n      uploadimg(formData).then(data => {\n        this.ruleForm.imgCertificateBack = data;\n      }).catch(error => {\n        this.fileList3 = [];\n        _Toast.fail(this.$t('上传失败'));\n      }).finally(() => {\n        _Toast.clear();\n      });\n    },\n    //文件上传\n    afterRead4(file) {\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('上传中'),\n        forbidClick: true\n      });\n      let formData = new FormData(); //通过formdata上传\n      formData.append('file', file.file);\n      formData.append('moduleName', 'selle');\n      uploadimg(formData).then(data => {\n        this.ruleForm.imgCertificateHand = data;\n      }).catch(error => {\n        this.fileList4 = [];\n        _Toast.fail(this.$t('上传失败'));\n      }).finally(() => {\n        _Toast.clear();\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}