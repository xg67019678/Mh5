{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"core-js/modules/es.array.push.js\";\nimport Vcode from \"vue-puzzle-vcode\";\nimport { getIdcode } from '@/API/common';\nimport { saveEmail } from '@/API/user';\nexport default {\n  name: 'BindEmail',\n  components: {\n    Vcode\n  },\n  data() {\n    return {\n      img1: require('@/assets/image/slider/1.png'),\n      img2: require('@/assets/image/slider/2.png'),\n      img3: require('@/assets/image/slider/3.png'),\n      img4: require('@/assets/image/slider/4.png'),\n      img5: require('@/assets/image/slider/5.png'),\n      triangleDown: require('@/assets/image/me/triangle_down.png'),\n      show: false,\n      codeBtnTxt: this.$t('收取验证码'),\n      count: 60,\n      interval: null,\n      btnDisabled: false,\n      formData: {\n        email: '',\n        verifcode: ''\n      }\n    };\n  },\n  methods: {\n    onClickLeft() {\n      this.$router.push({\n        path: '/Setting',\n        dir: 'left'\n      });\n    },\n    onSuccess() {\n      this.submitHandle();\n      this.show = false;\n    },\n    getCode() {\n      if (this.formData.email === '') {\n        _Toast(this.$t('请输入邮箱'));\n        return;\n      } else {\n        const reg = /^([A-Za-z0-9_\\-\\.\\w{3,}])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n        if (!reg.test(this.formData.email)) {\n          _Toast(this.$t('邮箱格式有误'));\n          return;\n        }\n      }\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('发送中'),\n        forbidClick: true\n      });\n      const params = {\n        target: this.formData.email\n      };\n      getIdcode(params).then(() => {\n        _Toast.clear();\n        _Toast.success(this.$t('发送成功'));\n        this.timerFn();\n      }).catch(err => {\n        _Toast.clear();\n        // Toast.fail(err.msg)\n      });\n    },\n    timerFn() {\n      this.codeBtnTxt = `${this.$t('再次获取')} ${this.count} s`;\n      this.btnDisabled = true;\n      this.interval = setInterval(() => {\n        if (this.count === 1) {\n          this.count = 60;\n          this.codeBtnTxt = this.$t('再次获取');\n          this.btnDisabled = false;\n          clearInterval(this.interval);\n        } else {\n          this.count -= 1;\n          this.codeBtnTxt = `${this.$t('再次获取')} ${this.count} s`;\n        }\n      }, 1000);\n    },\n    submitVertify() {\n      if (this.formData.email === '') {\n        _Toast(this.$t('请输入邮箱'));\n        return;\n      } else {\n        const reg = /^([A-Za-z0-9_\\-\\.\\w{3,}])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n        if (!reg.test(this.formData.email)) {\n          _Toast(this.$t('邮箱格式有误'));\n          return;\n        }\n      }\n      if (this.formData.verifcode === '') {\n        _Toast(this.$t('请输入验证码'));\n        return;\n      }\n      this.show = true;\n    },\n    submitHandle() {\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('提交中'),\n        forbidClick: true\n      });\n      const params = {\n        ...this.formData\n      };\n      saveEmail(params).then(async () => {\n        _Toast.success(this.$t('绑定成功'));\n        await this.$store.dispatch('getUserInfo');\n        this.onClickLeft();\n      }).catch(err => {\n        _Toast.clear();\n        // Toast.fail(err.msg)\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}