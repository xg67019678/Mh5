{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/dialog/style\";\nimport _Dialog from \"vant/es/dialog\";\nimport \"vant/es/stepper/style\";\nimport _Stepper from \"vant/es/stepper\";\nimport \"vant/es/checkbox-group/style\";\nimport _CheckboxGroup from \"vant/es/checkbox-group\";\nimport \"vant/es/checkbox/style\";\nimport _Checkbox from \"vant/es/checkbox\";\nimport \"vant/es/pull-refresh/style\";\nimport _PullRefresh from \"vant/es/pull-refresh\";\nimport \"vant/es/list/style\";\nimport _List from \"vant/es/list\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { apiCartList, apiUpdateCart } from '@/API/commodity';\nimport {\n// goods_list_action_post,\ngoods_points_action_post\n// project_listProject_action_post,\n} from \"@/API/user\";\nimport { ref } from \"vue\";\nimport { priceFormat, isLogin, getStorage } from '@/utils/utis';\nexport default {\n  setup() {\n    const checked = ref([\"a\", \"b\"]);\n    const checkedAll = ref(false);\n    const checkedAllTotol = ref(true);\n    const checkboxGroup = ref(null);\n    const checkAll = () => {\n      checkboxGroup.value.toggleAll(true);\n    };\n    return {\n      checked,\n      checkedAll,\n      checkAll,\n      checkedAllTotol,\n      checkboxGroup\n    };\n  },\n  data() {\n    return {\n      priceFormat,\n      refreshing: false,\n      loop: 0,\n      list: [],\n      total: {},\n      //金额计算数据\n      lang: getStorage('lang'),\n      isNewLine: ['it', 'de', 'ms', 'pt', 'es', 'ru', 'el', 'tr', 'fr'].includes(getStorage('lang')),\n      maxBuyNum: localStorage.getItem('maxBuyNum') || 500,\n      pageNum: 1,\n      isChristmas: process.env?.VUE_APP_IS_CHRISTMAS\n    };\n  },\n  components: {\n    [_List.name]: _List,\n    [_PullRefresh.name]: _PullRefresh,\n    [_Checkbox.name]: _Checkbox,\n    [_CheckboxGroup.name]: _CheckboxGroup,\n    [_Stepper.name]: _Stepper,\n    [_Dialog.Component.name]: _Dialog.Component\n  },\n  created() {\n    //获取购物车列表\n    isLogin() && this.getCartlist();\n    //计算总金额\n    this.mathMoney();\n  },\n  methods: {\n    handlerTouchstart(index, n, {\n      id,\n      skuId,\n      count\n    }) {\n      let productList = this.$ls.get(\"productList\") || [];\n      this.loop = setTimeout(() => {\n        this.loop = 0;\n        // 执行长按要执行的内容\n        _Dialog.confirm({\n          title: this.$t(\"提示\"),\n          message: this.$t(\"确认移除商品吗?\"),\n          confirmButtonText: this.$t(\"确认\"),\n          cancelButtonText: this.$t(\"取消\")\n        }).then(async () => {\n          this.$toast.loading();\n          await apiUpdateCart({\n            skuId: skuId,\n            sellerGoodsId: id,\n            buyNum: count,\n            isMove: 1\n          });\n          this.$toast.clear();\n          // if (this.list[index].child.length == 1) {\n          //     this.list.splice(index, 1);\n          // } else {\n          //     this.list[index].child.splice(n, 1);\n          // }\n          // productList.forEach((item, index) => {\n          //     if (item.id == id) {\n          //         productList.splice(index, 1);\n          //     }\n          // });\n          // if (this.list.length == 0) {\n          //     this.$store.state.qiangdan.count = 0;\n          //     localStorage.setItem('CART_NUM', 0)\n          // }\n          this.$store.state.qiangdan.count = productList.length;\n          this.$ls.set(\"productList\", productList);\n          this.list = [];\n          this.pageNum = 1;\n          this.getCartlist();\n          // location.reload()\n        });\n      }, 500); // 定时的时间\n      // return false\n    },\n    handleClearInterval() {\n      // 清除定时器\n      clearTimeout(this.loop);\n      this.loop = 0;\n    },\n    async handleStepper(val, item) {\n      let n = this.total.piece;\n      val == \"add\" ? n += 1 : n -= 1;\n      this.$store.state.qiangdan.count = n;\n      await apiUpdateCart({\n        skuId: item.skuId,\n        sellerGoodsId: item.id,\n        buyNum: item.count + (val == \"add\" ? 1 : -1)\n      });\n    },\n    mathMoney() {\n      // apiUpdateCart\n      let productList = this.$ls.get(\"productList\") || [];\n      this.total = {\n        money: 0,\n        piece: 0\n      };\n      this.list.forEach(item => {\n        this.total.piece = this.total.piece += item.checkedValue.length;\n        item.child.length > 0 && item.child.forEach(child => {\n          productList.forEach(x => {\n            if (x.id == child.id) x.count = child.count;\n          });\n          //num<item.moreNum&&\n          if (item.checkedValue.includes(child.tempId)) {\n            this.total.money += child.price.toFixed(2) * child.count;\n            // this.total.piece += child.count;\n          }\n        });\n      });\n      this.total.money = this.total.money.toFixed(2);\n      this.$ls.set(\"productList\", productList);\n      // this.list.length == this.total.piece && this.handleCheckAll()\n    },\n    async getCartlist() {\n      // console.log(`this.$ls.get('cartList') ::->`, this.$ls.get('cartList'));\n      const {\n        pageList,\n        pageInfo\n      } = await apiCartList({\n        pageNum: this.pageNum,\n        pageSize: 20\n      });\n      localStorage.setItem('CART_NUM', pageInfo.totalElements);\n      this.$store.state.qiangdan.count = pageInfo.totalElements;\n      //初始list为空\n      // this.list = [];\n      let productList = pageList || [];\n      if (productList && productList.length > 0) {\n        productList.forEach(item => {\n          if (this.list.length > 0) {\n            this.list.forEach(c => {\n              let attributes = [];\n              if (item.attributes) {\n                attributes = item.attributes;\n              }\n              if (c.sort == item.sellerName) {\n                let attributes = [];\n                if (item.attributes) {\n                  attributes = item.attributes;\n                }\n                //同商铺添加子集合里\n                let childObj = {\n                  coverImg: item.goodsIcon,\n                  skuId: item.skuId,\n                  img: item.imgUrl1 || this.$defaultGoodsImage,\n                  price: item.discountPrice ? item.discountPrice : item.sellingPrice,\n                  describe: item.goodsName,\n                  count: item.goodsNum,\n                  id: `${item.goodsId}`,\n                  tempId: item.tempId,\n                  attributes,\n                  freightAmount: item.freightAmount || 0,\n                  goodsTax: item.goodsTax || 0,\n                  selected: true,\n                  isShelf: item.isShelf\n                };\n                c.child.unshift(childObj);\n              } else {\n                // if (item.canSelectAttributes) {\n                //   attributes = item.canSelectAttributes.skus.filter(\n                //     (i) => i.skuId == item.skuId\n                //   )[0];\n                // }\n                // console.log(\"attributes ->\", attributes);\n\n                let obj = {\n                  // skuId: item.skuId,\n                  key: item.sellerId,\n                  sort: item.sellerName,\n                  checkedAll: true,\n                  checkedValue: [],\n                  moreNum: 2,\n                  child: []\n                };\n                let childObj = {\n                  coverImg: item.goodsIcon,\n                  skuId: item.skuId,\n                  img: item.imgUrl1 || this.$defaultGoodsImage,\n                  price: item.discountPrice ? item.discountPrice : item.sellingPrice,\n                  describe: item.goodsName,\n                  count: item.goodsNum,\n                  id: `${item.goodsId}`,\n                  tempId: item.tempId,\n                  freightAmount: item.freightAmount || 0,\n                  goodsTax: item.goodsTax || 0,\n                  selected: true,\n                  isShelf: item.isShelf,\n                  attributes\n                };\n                obj.child.unshift(childObj);\n                this.list.push(obj);\n              }\n            });\n          } else {\n            let attributes = [];\n            if (item.attributes) {\n              attributes = item.attributes;\n            }\n            let obj = {\n              // skuId: item.skuId,\n              key: item.sellerId,\n              sort: item.sellerName,\n              checkedAll: true,\n              checkedValue: [],\n              moreNum: 2,\n              child: []\n            };\n            let childObj = {\n              coverImg: item.goodsIcon,\n              skuId: item.skuId,\n              img: item.imgUrl1 || this.$defaultGoodsImage,\n              price: item.discountPrice ? item.discountPrice : item.sellingPrice,\n              describe: item.goodsName,\n              count: item.goodsNum,\n              id: item.goodsId,\n              freightAmount: item.freightAmount || 0,\n              goodsTax: item.goodsTax || 0,\n              selected: true,\n              isShelf: item.isShelf,\n              attributes\n            };\n            obj.child.unshift(childObj);\n            this.list.unshift(obj);\n          }\n        });\n        for (var i = 0; i < this.list.length - 1; i++) {\n          for (var j = i + 1; j < this.list.length; j++) {\n            if (this.list[i].sort == this.list[j].sort) {\n              this.list.splice(j, 1);\n              j--;\n            }\n          }\n        }\n      }\n      if (pageList.length == 20) {\n        this.pageNum++;\n        this.getCartlist();\n      } else {\n        this.$ls.set(\"cartList\", this.list);\n      }\n      //全选\n      setTimeout(() => {\n        this.handleCheckAll();\n      }, 100);\n    },\n    //跳转确认页,购买\n    toBuy() {\n      const tempList = this.list.map(item => ({\n        ...item,\n        child: item.child.filter(sub => sub.isShelf !== 0)\n      })).filter(item => item.child.length > 0);\n      const notSelected = tempList.find(item => item.child.find(sub => sub.selected));\n      if (!notSelected) return _Toast(this.$t(\"未选中任何商品\"));\n      const tempArr = [];\n      tempList.forEach(item => {\n        if (item.checkedAll) {\n          item.child = item.child.filter(sub => sub.selected);\n          tempArr.push(item);\n        }\n      });\n      // let productList = this.$ls.get(\"productList\");\n      // productList.map(item => {\n      //     console.log('item.id ::>> ', item.id)\n      // })\n      // 清除productList\n      this.$ls.set(\"cartList\", tempArr);\n      this.list = [];\n      this.$router.push(\"/orderComnfirmation?isCart=1\");\n      // this.$router.push(\"/commodity\");\n    },\n    // 单选\n    handlecheckItemClick(item, index, n) {\n      this.list[index].child[n].selected = !this.list[index].child[n].selected;\n      let count = 0;\n      let num = 0;\n      let len = this.list[index].child.length;\n      this.list[index].child.forEach(item => {\n        if (item.selected) count += 1;else num += 1;\n        if (count != 0) this.list[index].checkedAll = true;\n        if (num == len) this.list[index].checkedAll = false;\n      });\n    },\n    //类全选\n    handleCheckItemAll(value, index) {\n      this.list[index].checkedValue = [];\n      this.$nextTick(() => {\n        this.list[index].child.forEach((item, num) => {\n          item.selected = value;\n          value && this.list[index].checkedValue.push(item.tempId);\n        });\n      });\n      // if (value) {\n      // if (num < this.list[index].moreNum) {\n      //     this.list[index].checkedValue.push(item.id);\n      // }\n      // }\n    },\n    //全选\n    handleCheckAll() {\n      this.list.forEach(i => {\n        i.checkedValue = [];\n        i.checkedAll = this.checkedAllTotol;\n        i.child?.forEach(j => {\n          j.selected = this.checkedAllTotol;\n          this.checkedAllTotol && i.checkedValue.push(j.tempId);\n        });\n      });\n    },\n    onRefresh() {\n      // 清空列表数据\n      this.finished = false;\n      this.list = [];\n      this.loading = true;\n      this.onLoad();\n    },\n    onLoad() {\n      if (this.refreshing) {\n        this.list = [];\n        this.refreshing = false;\n      }\n      this.getCartlist();\n    },\n    // tuanduimingxi_post() {\n    //   this.page_no++\n    //   var data = {\n    //     'pageNum': this.page_no,\n    //     'pageSize': 10,\n    //   }\n    //   goods_list_action_post(data).then(res => {\n\n    //   })\n    // },\n    qiehuan() {\n      this.list = [];\n      this.loading = false;\n      this.finished = false;\n      this.refreshing = false;\n      this.page_no = 0;\n      // this.onLoad()\n    },\n    goods_points_action() {\n      this.show = true;\n      goods_points_action_post({}).then(res => {\n        this.show = false;\n        this.goods_points_action_data = res.points;\n      });\n    },\n    touzi(e) {\n      this.$router.push(\"/InvestmentDetails?goodsId=\" + e);\n    },\n    onClickLeft() {\n      this.$router.push(\"/me\");\n    }\n  },\n  watch: {\n    list: {\n      handler(val) {\n        this.checkedAllTotol = val.every(item => item.child.every(sub => sub.selected));\n      },\n      deep: true\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}