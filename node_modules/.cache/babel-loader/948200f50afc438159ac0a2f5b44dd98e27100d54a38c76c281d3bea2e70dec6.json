{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/icon/style\";\nimport _Icon from \"vant/es/icon\";\nimport \"vant/es/loading/style\";\nimport _Loading from \"vant/es/loading\";\nimport \"vant/es/uploader/style\";\nimport _Uploader from \"vant/es/uploader\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { mapGetters } from 'vuex';\nimport { apiSellerComplain } from '@/API/common';\nimport { uploadimg } from '@/API/commodity';\nimport { isLogin } from \"@/utils/utis\";\nexport default {\n  components: {\n    [_Uploader.name]: _Uploader,\n    [_Loading.name]: _Loading,\n    [_Icon.name]: _Icon\n  },\n  data() {\n    return {\n      itemName: process.env.VUE_APP_ITEM_NAME,\n      formData: {\n        reason: '',\n        images: [],\n        type: ''\n      },\n      complaintType: [{\n        label: '长时间不发货',\n        value: 1\n      }, {\n        label: '卖家服务态度恶劣',\n        value: 2\n      }, {\n        label: '卖家交易欺诈',\n        value: 3\n      }, {\n        label: '卖家承诺不履行',\n        value: 4\n      }, {\n        label: '其他',\n        value: 0\n      }],\n      pwtStatus: false,\n      rules: {\n        type: [{\n          required: true,\n          message: this.$t('请选择投诉类型'),\n          trigger: 'change'\n        }],\n        reason: [{\n          required: true,\n          message: this.$t('请输入投诉原因'),\n          trigger: 'blur'\n        }],\n        images: [{\n          required: true,\n          message: this.$t('请上传截图、凭证'),\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  created() {\n    if (!isLogin()) {\n      // Dialog.confirm({\n      //     title: this.$t(\"您还未登录\"),\n      //     message: this.$t(\"是否跳转到登录页面\"),\n      //     confirmButtonText: this.$t(\"确认\"),\n      //     cancelButtonText: this.$t(\"取消\"),\n      // }).then(() => {\n      //     this.$router.push('/login')\n      // });\n      this.$notifyWarn(this.$t(\"请先登录\"));\n      this.$router.push(\"/login\");\n      return false;\n    }\n  },\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo'\n    })\n  },\n  methods: {\n    onClickLeft() {\n      this.$router.go(-1);\n    },\n    handleUpload(data) {\n      if (Array.isArray(data)) {\n        data = data[0];\n      }\n      if (data.size > 4000 * 1024) {\n        _Toast(this.$t(\"图片大小不能超过{num}\", {\n          num: '4MB'\n        }));\n        return false;\n      }\n      _Toast.loading({\n        duration: 0,\n        message: this.$t(\"上传中\"),\n        forbidClick: true\n      });\n      let formData = new FormData(); //通过formdata上传\n      formData.append(\"file\", data);\n      formData.append(\"moduleName\", \"selle\");\n      uploadimg(formData).then(data => {\n        _Toast.clear();\n        this.formData.images.push(data);\n      }).catch(() => {\n        _Toast.clear();\n        _Toast(this.$t(\"失败\"));\n        this.formData.images = [];\n      });\n    },\n    // 提交\n    submitForm() {\n      if (this.formData.reason.trim().length == 0) {\n        this.$notify(this.$t('请输入投诉原因'));\n        return;\n      }\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          _Toast.loading({\n            duration: 0,\n            forbidClick: true\n          });\n          const params = {\n            sellerId: this.$route.query.sellerId,\n            complaintStatus: this.formData.type,\n            content: this.formData.reason\n          };\n          this.formData.images.forEach((item, index) => {\n            params[`imgUrl${index + 1}`] = item;\n          });\n          apiSellerComplain(params).then(res => {\n            this.formData.reason = '';\n            this.formData.type = '';\n            this.formData.images = [];\n            this.$notify(this.$t('提交成功'), 'success');\n            setTimeout(() => {\n              this.$router.back();\n            }, 1000);\n            _Toast.clear();\n          }).catch(err => {\n            console.log(`err ::->`, err);\n            _Toast.clear();\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    // 删除图片\n    deteleImage(index) {\n      this.formData.images.splice(index, 1);\n    },\n    // 限制表情输入\n    limitEmoji(val) {\n      this.formData.reason = val.replace(/\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F]/g, '');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}