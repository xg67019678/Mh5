{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * router扩展，页面切换动画\n */\n// 负责SessionStorage存储路由历史。\nconst SessionStorage_key_Router_Extend_History = 'SessionStorage_key_Router_Extend_History';\nfunction transitionExtend(orgin) {\n  // 通过原路由对象创建一个新的对象\n  let router = Object.create(orgin);\n\n  // 扩展对象，保存当前栈数组和过渡动画名称\n  router.customRouterData = {\n    transitionName: '',\n    history: []\n  };\n\n  // 路由位置字符串在数组中的位置\n  router.indexOf = function (path) {\n    let arrLen = router.customRouterData.history.length;\n    for (let i = arrLen - 1; i >= 0; i--) {\n      if (router.customRouterData.history[i] == path) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  // 添加历史路由去路由数组\n  router.addRouterPath = function (path) {\n    router.customRouterData.history.push(path);\n    sessionStorage.setItem(SessionStorage_key_Router_Extend_History, JSON.stringify(router.customRouterData.history));\n  };\n\n  // 历史路由数组移除某个路由，n为参数可以移除多个\n  router.removeLastRouterPath = function (n = 1) {\n    if (n > 0) {\n      for (let i = 0; i < n; i++) {\n        router.customRouterData.history.pop();\n      }\n      sessionStorage.setItem(SessionStorage_key_Router_Extend_History, JSON.stringify(router.customRouterData.history));\n    }\n  };\n\n  // 初始化，为了页面刷新能恢复路由记录等\n  router.initRouterPaths = function (toPath) {\n    // 当存储了 router paths 时候，读取并赋值\n    let arrStr;\n    arrStr = sessionStorage.getItem(SessionStorage_key_Router_Extend_History);\n    if (arrStr && arrStr != undefined) {\n      let arr = JSON.parse(arrStr);\n      if (Array.isArray(arr) && arr.length > 0) {\n        // 进入页面\n        router.customRouterData.history = arr;\n      } else {\n        // 新进入页面\n        router.customRouterData.history = [];\n        router.customRouterData.history.push(toPath);\n      }\n    } else {\n      // 新进入页面\n      router.customRouterData.history = [];\n      router.customRouterData.history.push(toPath);\n    }\n\n    // 存储为了恢复\n    sessionStorage.setItem(SessionStorage_key_Router_Extend_History, JSON.stringify(router.customRouterData.history));\n  };\n\n  // push 修改路由历史，并设置动画\n  router.push = function () {\n    let location = arguments[0];\n    if (typeof location == 'string') {\n      router.addRouterPath(location);\n    } else {\n      router.addRouterPath(location.path);\n    }\n    router.customRouterData.transitionName = 'van-slide-' + (location.dir || 'right');\n    router.__proto__.push.call(this, ...arguments);\n  };\n\n  // replace 修改路由历史，并设置动画\n  router.replace = function () {\n    router.removeLastRouterPath();\n    let location = arguments[0];\n    if (typeof location == 'string') {\n      router.addRouterPath(location);\n    } else {\n      router.addRouterPath(location.path);\n    }\n    router.customRouterData.transitionName = 'van-slide-right';\n    router.__proto__.replace.call(this, ...arguments);\n  };\n\n  // go 修改路由历史，并设置动画\n  router.go = function (n) {\n    if (n > 0) {\n      // 禁止使用，这种情况比较复杂，使用较少，先忽略\n      console.error('router.go 暂不支持 前进 ！');\n      return;\n    }\n    router.removeLastRouterPath(-n);\n    router.customRouterData.transitionName = 'van-slide-left';\n    router.__proto__.go.call(this, n);\n  };\n\n  // back 修改路由历史，并设置动画\n  router.back = function () {\n    router.removeLastRouterPath();\n    router.customRouterData.transitionName = 'van-slide-left';\n    router.__proto__.go.call(this, -1);\n  };\n  router.forward = function () {\n    // 禁止使用，这种情况比较复杂，使用较少，先忽略\n    console.error('router.forward 暂不支持 ！');\n    return;\n  };\n\n  /**\n   * 按钮前进后退处理处理\n   * 返回：测滑返回，微信返回按钮，web返回按钮，以及android物理返回，android测滑返回\n   * 前进：微信上的前进按钮，web前进\n   * // 前进这里有个坑，待解决，先忽略\n   **/\n  router.otherEventTransitionName = function (toPath, fromPath) {\n    if (router.customRouterData.transitionName != '') {\n      // 没有数据意味着从，其他操作方式得到的路由变化\n      return;\n    }\n    let toIndex = router.indexOf(toPath);\n    if (toIndex == -1 || router.customRouterData.history.length - toIndex != 2) {\n      // 不存在，并且历史\n      router.addRouterPath(toPath);\n      router.customRouterData.transitionName = 'van-slide-right';\n    } else {\n      router.removeLastRouterPath();\n      router.customRouterData.transitionName = 'van-slide-left';\n    }\n  };\n\n  // 是否已经初始化\n  let isInit = false;\n\n  // 跳转之前\n  router.beforeEach((to, from, next) => {\n    if (isInit) {\n      router.otherEventTransitionName(to.path, from.path);\n    } else {\n      isInit = true;\n      router.initRouterPaths(to.path);\n    }\n    next();\n  });\n\n  // 跳转之后\n  router.afterEach((to, from) => {\n    setTimeout(() => {\n      // 使用动画之后立即移除\n      router.customRouterData.transitionName = '';\n    }, 300);\n  });\n  return router;\n}\nexport default transitionExtend;","map":{"version":3,"names":["SessionStorage_key_Router_Extend_History","transitionExtend","orgin","router","Object","create","customRouterData","transitionName","history","indexOf","path","arrLen","length","i","addRouterPath","push","sessionStorage","setItem","JSON","stringify","removeLastRouterPath","n","pop","initRouterPaths","toPath","arrStr","getItem","undefined","arr","parse","Array","isArray","location","arguments","dir","__proto__","call","replace","go","console","error","back","forward","otherEventTransitionName","fromPath","toIndex","isInit","beforeEach","to","from","next","afterEach","setTimeout"],"sources":["C:/Users/xg670/Desktop/运行/mmh5/src/utils/transition-extend.js"],"sourcesContent":["/**\n * router扩展，页面切换动画\n */\n// 负责SessionStorage存储路由历史。\nconst SessionStorage_key_Router_Extend_History = 'SessionStorage_key_Router_Extend_History'\n\nfunction transitionExtend(orgin) {\n  // 通过原路由对象创建一个新的对象\n  let router = Object.create(orgin)\n\n  // 扩展对象，保存当前栈数组和过渡动画名称\n  router.customRouterData = {\n    transitionName: '',\n    history: []\n  }\n\n  // 路由位置字符串在数组中的位置\n  router.indexOf = function (path) {\n    let arrLen = router.customRouterData.history.length\n    for (let i = arrLen - 1; i >= 0; i--) {\n      if (router.customRouterData.history[i] == path) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  // 添加历史路由去路由数组\n  router.addRouterPath = function(path) {\n    router.customRouterData.history.push(path)\n\n    sessionStorage.setItem(SessionStorage_key_Router_Extend_History, JSON.stringify(router.customRouterData.history));\n  }\n\n  // 历史路由数组移除某个路由，n为参数可以移除多个\n  router.removeLastRouterPath = function (n = 1) {\n    if (n > 0) {\n      for (let i = 0; i < n; i++) {\n        router.customRouterData.history.pop()\n      }\n\n      sessionStorage.setItem(SessionStorage_key_Router_Extend_History, JSON.stringify(router.customRouterData.history));\n    }\n  }\n\n  // 初始化，为了页面刷新能恢复路由记录等\n  router.initRouterPaths = function (toPath) {\n    // 当存储了 router paths 时候，读取并赋值\n    let arrStr\n    arrStr = sessionStorage.getItem(SessionStorage_key_Router_Extend_History);\n\n    if (arrStr && arrStr != undefined) {\n      let arr = JSON.parse(arrStr)\n      if (Array.isArray(arr) && arr.length > 0) {\n        // 进入页面\n        router.customRouterData.history = arr;\n      } else {\n        // 新进入页面\n        router.customRouterData.history = []\n        router.customRouterData.history.push(toPath)\n      }\n    } else {\n      // 新进入页面\n      router.customRouterData.history = []\n      router.customRouterData.history.push(toPath)\n    }\n\n    // 存储为了恢复\n    sessionStorage.setItem(SessionStorage_key_Router_Extend_History, JSON.stringify(router.customRouterData.history));\n  }\n\n  // push 修改路由历史，并设置动画\n  router.push = function () {\n\n    let location = arguments[0]\n    if (typeof location == 'string') {\n      router.addRouterPath(location)\n    } else {\n      router.addRouterPath(location.path)\n    }\n    \n    router.customRouterData.transitionName = 'van-slide-' + (location.dir || 'right')\n\n    router.__proto__.push.call(this, ...arguments)\n  };\n\n  // replace 修改路由历史，并设置动画\n  router.replace = function () {\n\n    router.removeLastRouterPath()\n    let location = arguments[0]\n    if (typeof location == 'string') {\n      router.addRouterPath(location)\n    } else {\n      router.addRouterPath(location.path)\n    }\n\n    router.customRouterData.transitionName = 'van-slide-right'\n\n    router.__proto__.replace.call(this, ...arguments)\n  };\n\n  // go 修改路由历史，并设置动画\n  router.go = function (n) {\n    if (n > 0) {\n      // 禁止使用，这种情况比较复杂，使用较少，先忽略\n      console.error('router.go 暂不支持 前进 ！');\n      return;\n    }\n    router.removeLastRouterPath(-n)\n\n    router.customRouterData.transitionName = 'van-slide-left'\n\n    router.__proto__.go.call(this, n)\n  };\n\n  // back 修改路由历史，并设置动画\n  router.back = function () {\n\n    router.removeLastRouterPath()\n\n    router.customRouterData.transitionName = 'van-slide-left'\n\n    router.__proto__.go.call(this, -1)\n  };\n\n  router.forward = function () {\n    // 禁止使用，这种情况比较复杂，使用较少，先忽略\n    console.error('router.forward 暂不支持 ！');\n    return ;\n  };\n\n  /**\n   * 按钮前进后退处理处理\n   * 返回：测滑返回，微信返回按钮，web返回按钮，以及android物理返回，android测滑返回\n   * 前进：微信上的前进按钮，web前进\n   * // 前进这里有个坑，待解决，先忽略\n   **/\n  router.otherEventTransitionName = function (toPath, fromPath) {\n    if (router.customRouterData.transitionName != '') {\n      // 没有数据意味着从，其他操作方式得到的路由变化\n      return;\n    }\n\n    let toIndex = router.indexOf(toPath)\n    if (toIndex == -1 || router.customRouterData.history.length - toIndex != 2) {\n      // 不存在，并且历史\n      router.addRouterPath(toPath)\n      router.customRouterData.transitionName = 'van-slide-right'\n    } else {\n      router.removeLastRouterPath()\n      router.customRouterData.transitionName = 'van-slide-left'\n    }\n  }\n\n  // 是否已经初始化\n  let isInit = false;\n\n  // 跳转之前\n  router.beforeEach((to, from, next) => {\n    if (isInit) {\n      router.otherEventTransitionName(to.path, from.path)\n    } else {\n      isInit = true;\n      router.initRouterPaths(to.path)\n    }\n    next();\n  })\n\n  // 跳转之后\n  router.afterEach((to, from) => {\n    setTimeout(() => {\n      // 使用动画之后立即移除\n      router.customRouterData.transitionName = ''\n    }, 300)\n  })\n\n  return router\n}\n\nexport default transitionExtend\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}