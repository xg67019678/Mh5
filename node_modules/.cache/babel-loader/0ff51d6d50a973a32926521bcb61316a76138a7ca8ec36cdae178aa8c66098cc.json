{"ast":null,"code":"import \"vant/es/uploader/style\";\nimport _Uploader from \"vant/es/uploader\";\nimport \"vant/es/rate/style\";\nimport _Rate from \"vant/es/rate\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/nav-bar/style\";\nimport _NavBar from \"vant/es/nav-bar\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { orderListGoods, orderEvaluationAdd } from '@/API/user';\nimport { priceFormat } from '@/utils/utis';\nimport { uploadimg } from \"@/API/commodity\";\nexport default {\n  name: 'OrderEvaluate',\n  components: {\n    [_NavBar.name]: _NavBar,\n    [_Toast.name]: _Toast,\n    [_Rate.name]: _Rate,\n    [_Uploader.name]: _Uploader\n  },\n  data() {\n    return {\n      mainColor: process.env.VUE_APP_MAIN_COLOR,\n      fileList: [],\n      cancelShow: false,\n      remindShow: false,\n      currentData: null,\n      orderId: null,\n      goodsData: []\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      const {\n        id\n      } = this.$route.query;\n      if (id) {\n        this.orderId = id;\n        this.getOrderGoods();\n      } else {\n        _Toast(this.$t('订单号不存在'));\n        setTimeout(() => {\n          this.$router.back();\n        }, 1500);\n      }\n    });\n  },\n  methods: {\n    afterRead(file, {\n      name\n    }) {\n      // if('[object Array]' == Object.prototype.toString.call(file)) {\n\n      // }\n      let index = this.goodsData[name].fileList.length; // 图片的索引\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('上传中'),\n        forbidClick: true\n      });\n      let formData = new FormData(); //通过formdata上传\n      formData.append('file', file.file);\n      formData.append('moduleName', 'selle');\n      let goodsId = '';\n      uploadimg(formData).then(data => {\n        console.log('图片上传成功', data);\n        // this.ruleForm.idimg_2 = data\n        this.goodsData[name][`imgUrl${index}`] = data; //待提交图片的索引\n      }).catch(error => {\n        this.fileList = [];\n        // Toast.fail(this.$t('上传失败'));\n        this.$notify(this.$t('上传失败'));\n      }).finally(() => {\n        _Toast.clear();\n      });\n    },\n    priceFormat(num) {\n      return priceFormat(num);\n    },\n    getOrderGoods() {\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('请求中'),\n        forbidClick: true\n      });\n      orderListGoods({\n        orderId: this.orderId\n      }).then(res => {\n        const data = res.pageList || [];\n        data.forEach(item => {\n          item.rating = 5;\n          item.content = '';\n        });\n        this.goodsData = data;\n        _Toast.clear();\n      }).catch(() => {\n        _Toast.clear();\n      });\n    },\n    async submitHandle() {\n      const dataArr = this.goodsData.map(item => {\n        const {\n          rating,\n          content,\n          goodsId\n        } = item;\n        let evaluationType = '1';\n        if (rating < 2) {\n          evaluationType = '3';\n        } else if (rating < 4) {\n          evaluationType = '2';\n        } else {\n          evaluationType = '1';\n        }\n        let obj = {\n          orderId: this.orderId,\n          sellerGoodsId: goodsId,\n          rating,\n          content,\n          evaluationType\n        };\n        Object.keys(item).forEach(key => {\n          if (key.indexOf('imgUrl') !== -1) {\n            obj[key] = item[key];\n          }\n        });\n        return obj;\n      });\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('提交中'),\n        forbidClick: true\n      });\n      for (let i = 0; i < dataArr.length; i++) {\n        await orderEvaluationAdd(dataArr[i]);\n      }\n      _Toast.success(this.$t('成功'));\n      setTimeout(() => {\n        this.$router.back();\n      }, 1000);\n    }\n  }\n};","map":{"version":3,"names":["orderListGoods","orderEvaluationAdd","priceFormat","uploadimg","name","components","_NavBar","_Toast","_Rate","_Uploader","data","mainColor","process","env","VUE_APP_MAIN_COLOR","fileList","cancelShow","remindShow","currentData","orderId","goodsData","mounted","$nextTick","id","$route","query","getOrderGoods","$t","setTimeout","$router","back","methods","afterRead","file","index","length","loading","duration","message","forbidClick","formData","FormData","append","goodsId","then","console","log","catch","error","$notify","finally","clear","num","res","pageList","forEach","item","rating","content","submitHandle","dataArr","map","evaluationType","obj","sellerGoodsId","Object","keys","key","indexOf","i","success"],"sources":["src/page/Order/Evaluate/index.vue"],"sourcesContent":["<template>\n    <div class=\"page-content\">\n        <van-nav-bar safe-area-inset-top fixed :title=\"$t('评价')\" left-arrow @click-left=\"() => $router.back()\" />\n        <div style=\"width: 100%; height: 46px;\" />\n\n        <div v-if=\"goodsData.length\" class=\"evaluate-content\">\n            <div v-for=\"(item, index) in goodsData\" :key=\"index\" class=\"item\">\n                <div class=\"goods-info\">\n                    <div class=\"poster\">\n                        <img :src=\"item.goodsIcon\" alt=\"\">\n                    </div>\n                    <div class=\"info\">\n                        <p class=\"name\">{{ item.goodsName?.length > 27 ? (item.goodsName.slice(0, 27) + '...') :\n                            item.goodsName }}</p>\n                        <p class=\"price\">$ {{ priceFormat(item.goodsReal) }}</p>\n                        <van-rate class=\"rate-wrap\" v-model=\"item.rating\" :size=\"15\" ::color=\"mainColor\" void-icon=\"star\"\n                            void-color=\"#D9D9D9\" />\n                    </div>\n                </div>\n                <el-input type=\"textarea\" :autosize=\"{ minRows: 3, maxRows: 4 }\" :placeholder=\"$t('请输入评价信息')\" resize=\"none\"\n                    v-model=\"item.content\" maxlength=\"1000\" show-word-limit />\n                <div class=\"evaluate-title\">{{ $t('评价晒图') }}</div>\n                <van-uploader :after-read=\"afterRead\" v-model=\"item.fileList\" :name=\"index\" :max-count=\"9\" accept=\".png,.jpg,.jpeg\" />\n            </div>\n\n            <div class=\"submit-btn\" @click=\"submitHandle\">{{ $t('提交评论') }}</div>\n\n        </div>\n    </div>\n</template>\n\n<script>\nimport { NavBar, Toast, Rate, Uploader } from 'vant'\n\nimport {\n    orderListGoods,\n    orderEvaluationAdd\n} from '@/API/user'\n\nimport {\n    priceFormat\n} from '@/utils/utis'\nimport { uploadimg } from \"@/API/commodity\";\nexport default {\n    name: 'OrderEvaluate',\n    components: {\n        [NavBar.name]: NavBar,\n        [Toast.name]: Toast,\n        [Rate.name]: Rate,\n        [Uploader.name]: Uploader\n    },\n    data() {\n        return {\n            mainColor: process.env.VUE_APP_MAIN_COLOR,\n            fileList: [],\n            cancelShow: false,\n            remindShow: false,\n            currentData: null,\n            orderId: null,\n            goodsData: []\n        }\n    },\n    mounted() {\n        this.$nextTick(() => {\n            const { id } = this.$route.query\n            if (id) {\n                this.orderId = id\n                this.getOrderGoods()\n            } else {\n                Toast(this.$t('订单号不存在'))\n                setTimeout(() => {\n                    this.$router.back()\n                }, 1500);\n            }\n        })\n    },\n    methods: {\n        afterRead(file, { name }) {\n            // if('[object Array]' == Object.prototype.toString.call(file)) {\n                \n            // }\n            let index = this.goodsData[name].fileList.length // 图片的索引\n            Toast.loading({\n                duration: 0,\n                message: this.$t('上传中'),\n                forbidClick: true,\n            })\n            let formData = new FormData();//通过formdata上传\n            formData.append('file', file.file)\n            formData.append('moduleName', 'selle')\n            let goodsId = ''\n            uploadimg(formData).then((data) => {\n                console.log('图片上传成功', data)\n                // this.ruleForm.idimg_2 = data\n                this.goodsData[name][`imgUrl${index}`] = data //待提交图片的索引\n            }).catch((error) => {\n                this.fileList = [];\n                // Toast.fail(this.$t('上传失败'));\n                this.$notify(this.$t('上传失败'))\n            }).finally(() => {\n                Toast.clear()\n            })\n        },\n        priceFormat(num) {\n            return priceFormat(num)\n        },\n        getOrderGoods() {\n            Toast.loading({\n                duration: 0,\n                message: this.$t('请求中'),\n                forbidClick: true\n            })\n\n            orderListGoods({\n                orderId: this.orderId\n            }).then(res => {\n                const data = res.pageList || []\n                data.forEach(item => {\n                    item.rating = 5\n                    item.content = ''\n                })\n                this.goodsData = data\n                Toast.clear()\n            }).catch(() => {\n                Toast.clear()\n            })\n        },\n\n        async submitHandle() {\n            const dataArr = this.goodsData.map(item => {\n                const { rating, content, goodsId } = item\n                let evaluationType = '1'\n                if (rating < 2) {\n                    evaluationType = '3'\n                } else if (rating < 4) {\n                    evaluationType = '2'\n                } else {\n                    evaluationType = '1'\n                }\n                let obj = {\n                    orderId: this.orderId,\n                    sellerGoodsId: goodsId,\n                    rating,\n                    content,\n                    evaluationType\n                }\n                Object.keys(item).forEach(key => {\n                    if (key.indexOf('imgUrl') !== -1) {\n                        obj[key] = item[key]\n                    }\n                })\n                return obj\n            })\n            Toast.loading({\n                duration: 0,\n                message: this.$t('提交中'),\n                forbidClick: true,\n            })\n\n            for (let i = 0; i < dataArr.length; i++) {\n                await orderEvaluationAdd(dataArr[i])\n            }\n\n            Toast.success(this.$t('成功'))\n            setTimeout(() => {\n                this.$router.back()\n            }, 1000)\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.evaluate-title {\n    font-size: 12px;\n    color: #999999;\n    margin-top: 18px;\n    margin-bottom: 10px;\n}\n\n.page-content {\n    min-height: 100vh;\n    background-color: #F5F5F7;\n\n    * {\n        box-sizing: border-box;\n    }\n\n    /deep/ .el-textarea {\n        textarea:focus {\n            border-color: var(--main-color) !important;\n        }\n    }\n\n    .evaluate-content {\n        padding: 0 15px;\n        padding-bottom: 40px;\n\n        >.item {\n            padding: 18px 24px;\n            background-color: #fff;\n            margin-top: 10px;\n\n            >.goods-info {\n                display: flex;\n                padding-bottom: 15px;\n\n                >.poster {\n                    width: 78px;\n                    height: 78px;\n                    overflow: hidden;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n\n                    >img {\n                        width: 100%;\n                        height: auto;\n                    }\n                }\n\n                >.info {\n                    padding-left: 15px;\n                    flex: 1;\n\n                    >.name {\n                        overflow: hidden;\n                        text-overflow: ellipsis;\n                        display: -webkit-box;\n                        -webkit-box-orient: vertical;\n                        -moz-box-orient: vertical;\n                        box-orient: vertical;\n                        -webkit-line-clamp: 2;\n                        line-clamp: 2;\n                        font-size: 14px;\n                        color: #000;\n                    }\n\n                    >.price {\n                        display: flex;\n                        align-items: center;\n                        margin-top: 10px;\n                        \n                        color: var(--main-color);\n                        font-size: 16px;\n                        font-weight: bold;\n                    }\n                }\n            }\n        }\n\n        >.submit-btn {\n            margin-top: 40px;\n            width: 100%;\n            height: 44px;\n            background: var(--main-color);\n            border-radius: 4px;\n            font-style: normal;\n            font-weight: 400;\n            font-size: 16px;\n            line-height: 44px;\n            text-align: center;\n            color: #FFFFFF;\n        }\n    }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}