{"ast":null,"code":"import \"vant/es/popup/style\";\nimport _Popup from \"vant/es/popup\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { apigetCoinList, apiSubmitRecharge, apiPhpRecharge, apiGcash2Recharge, apiGcash3Recharge, apiMayaRecharge, apiGCashPayRecharge } from '@/API/common';\nimport { session_token } from '@/API/user';\nexport default {\n  components: {\n    [_Toast.name]: _Toast,\n    [_Popup.name]: _Popup\n  },\n  data() {\n    return {\n      itemName: process.env.VUE_APP_ITEM_NAME,\n      coinList: [],\n      max: '',\n      min: '',\n      form: {\n        currency: '',\n        price: ''\n      },\n      session_token: '',\n      btnDis: true,\n      isGcash: true,\n      showPopup: false,\n      path: ''\n    };\n  },\n  computed: {\n    payName() {\n      return this.$route.query?.type == 'Maya' ? 'Maya' : 'GCash';\n    }\n  },\n  async created() {\n    session_token({}).then(res => {\n      this.session_token = res.session_token;\n    });\n    const {\n      type,\n      min,\n      max\n    } = this.$route.query;\n    this.isGcash = type != 'Bank';\n    if (type == 'Bank') {\n      _Toast.loading({\n        message: this.$t('加载中...'),\n        forbidClick: true,\n        duration: 0\n      });\n      try {\n        const res = await apigetCoinList();\n        this.coinList = res.filter(item => item.productType == type)[0].range;\n        this.form.currency = this.coinList[27].bank_code;\n        this.max = this.coinList[27].max_amount;\n        this.min = this.coinList[27].min_amount;\n        _Toast.clear();\n      } catch (error) {\n        _Toast.clear();\n        this.$router.back();\n      }\n    } else {\n      this.max = max;\n      this.min = min;\n    }\n  },\n  methods: {\n    async onSubmit() {\n      this.$toast.loading();\n      if (this.form.price == '') return this.$notify(this.$t('请输入充值数量'));\n      await session_token({}).then(res => {\n        this.session_token = res.session_token;\n      });\n      if (this.isGcash) {\n        const typeToApiMap = {\n          'GCash2.0': apiGcash2Recharge,\n          'GCash3.0': apiGcash3Recharge,\n          'Maya': apiMayaRecharge,\n          'GCash pay': apiGCashPayRecharge\n        };\n        const requestFn = typeToApiMap[this.$route.query?.type] || apiPhpRecharge;\n        const params = {\n          amount: this.form.price,\n          session_token: this.session_token,\n          token: localStorage.getItem('token')\n        };\n        if (['GCash2.0', 'GCash3.0', 'Maya', 'GCash pay'].includes(this.$route.query?.type)) {\n          params.pageUrl = window.location.href.split('#/')[0] + '#/me';\n        }\n        const path = await requestFn(params);\n        if (window?.plus) {\n          plus.runtime.openURL(encodeURI(path + '?wt=app'));\n        } else {\n          if (this.isIos()) {\n            this.path = path;\n            this.showPopup = true;\n          } else {\n            window.open(path);\n          }\n        }\n      } else {\n        const path = await apiSubmitRecharge({\n          amount: this.form.price,\n          frenchCurrency: this.form.currency,\n          session_token: this.session_token\n        });\n        if (window?.plus) {\n          plus.runtime.openURL(encodeURI(path + '?wt=app'));\n        } else {\n          if (this.isIos()) {\n            this.path = path;\n            this.showPopup = true;\n          } else {\n            window.open(path);\n          }\n        }\n      }\n      this.$toast.clear();\n    },\n    // 判断是否是IOS\n    isIos() {\n      const u = navigator.userAgent;\n      return !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n    },\n    handleChange(val) {\n      this.form.price = '';\n      const tempArr = this.coinList.filter(item => item.bank_code == val);\n      this.max = tempArr[0].max_amount;\n      this.min = tempArr[0].min_amount;\n    },\n    // 申请金额不能大于最大值\n    handleInput() {\n      this.form.price = this.form.price.replace(/[^\\d.]/g, \"\"); // 非数字和小数点替换为空字符串\n      this.form.price = this.form.price.replace(/\\.{2,}/g, \".\"); // 连续出现多个小数点替换为单个小数点\n      this.form.price = this.form.price.replace(/^\\./g, \"\"); // 第一个字符如果是小数点则替换为空字符串\n      this.form.price = this.form.price.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\"); // 将第一个小数点替换为$#$，去除所有小数点，再将$#$替换回小数点\n      this.form.price = this.form.price.replace(/^(\\-)*(\\d+)\\.(\\d{0,2}).*$/, \"$1$2.$3\"); // 最多允许输入2位小数\n      if (this.form.price > this.max) {\n        this.form.price = this.max;\n      } else if (this.form.price < 1) {\n        this.form.price = '';\n      }\n      this.btnDis = this.form.price < this.min;\n    },\n    // 申请金额不能小于最小值\n    handleInputChange() {\n      if (this.form.price < this.min) {\n        this.form.price = '';\n        this.$notify(`${this.$t('申请金额不能小于')}${this.min}`);\n        return;\n      }\n      this.form.price = Number(this.form.price).toFixed(2);\n    },\n    // 查询Gcash最大最小值\n    async handleGcashQuery(params) {\n      const data = await apigetCoinList(params);\n      return data[0];\n    },\n    handleAccess() {\n      this.showPopup = false;\n      window.open(this.path);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}