{"ast":null,"code":"export function range(num, min, max) {\n  return Math.min(Math.max(num, min), max);\n}\nfunction trimExtraChar(value, _char, regExp) {\n  var index = value.indexOf(_char);\n  var prefix = '';\n  if (index === -1) {\n    return value;\n  }\n  if (_char === '-' && index !== 0) {\n    return value.slice(0, index);\n  }\n  if (_char === '.' && value.match(/^(\\.|-\\.)/)) {\n    prefix = index ? '-0' : '0';\n  }\n  return prefix + value.slice(0, index + 1) + value.slice(index).replace(regExp, '');\n}\nexport function formatNumber(value, allowDot, allowMinus) {\n  if (allowDot === void 0) {\n    allowDot = true;\n  }\n  if (allowMinus === void 0) {\n    allowMinus = true;\n  }\n  if (allowDot) {\n    value = trimExtraChar(value, '.', /\\./g);\n  } else {\n    value = value.split('.')[0];\n  }\n  if (allowMinus) {\n    value = trimExtraChar(value, '-', /-/g);\n  } else {\n    value = value.replace(/-/, '');\n  }\n  var regExp = allowDot ? /[^-0-9.]/g : /[^-0-9]/g;\n  return value.replace(regExp, '');\n} // add num and avoid float number\n\nexport function addNumber(num1, num2) {\n  var cardinal = Math.pow(10, 10);\n  return Math.round((num1 + num2) * cardinal) / cardinal;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}