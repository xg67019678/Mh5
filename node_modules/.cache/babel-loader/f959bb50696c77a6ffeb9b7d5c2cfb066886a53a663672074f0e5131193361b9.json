{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { mapGetters, mapMutations } from \"vuex\";\n/**\n * 中文简体(cn)   中文繁体(tw)   英语(en)   德语(de)   法语(fr)   日语(ja)   韩语(ko)   马来西亚语(ms)   \n * 泰国语(th)   葡萄牙语(pt)   西班牙语(es)   俄语(ru)   希腊语(el)   意大利语(it)   土耳其语(tr)   \n * 南非荷兰语(af)\n * \n * 意大利。德语。 马来西亚语  葡萄牙语  西班牙语  俄语  希腊语  土耳其语  法语\n * ['it', 'de', 'ms', 'pt', 'es', 'ru', 'el', 'tr', 'fr']\n */\nexport default {\n  data() {\n    return {\n      lang: [{\n        title: \"English\",\n        key: \"en\",\n        icon: require(\"@/assets/image/language/usa.png\")\n      }, {\n        title: \"Deutsch\",\n        key: \"de\",\n        icon: require(\"@/assets/image/language/de.png\")\n      }, {\n        title: \"français\",\n        key: \"fr\",\n        icon: require(\"@/assets/image/language/fr.png\")\n      }, {\n        title: \"Русский\",\n        key: \"ru\",\n        icon: require(\"@/assets/image/language/ru.png\")\n      }, {\n        title: \"Español\",\n        key: \"es\",\n        icon: require(\"@/assets/image/language/es.png\")\n      }, {\n        title: \"Português\",\n        key: \"pt\",\n        icon: require(\"@/assets/image/language/pt.png\")\n      }, {\n        title: \"Italiano\",\n        key: \"it\",\n        icon: require(\"@/assets/image/language/it.png\")\n      }, {\n        title: \"Melayu\",\n        key: \"ms\",\n        icon: require(\"@/assets/image/language/ms.png\")\n      }, {\n        title: \"Afrikaans\",\n        key: \"af\",\n        icon: require(\"@/assets/image/language/af.png\")\n      }, {\n        title: \"Ελληνικά\",\n        key: \"el\",\n        icon: require(\"@/assets/image/language/el.png\")\n      }, {\n        title: \"繁體中文\",\n        key: \"tw\",\n        icon: require(\"@/assets/image/language/tw.png\")\n      }, {\n        title: \"简体中文\",\n        key: \"cn\",\n        icon: require(\"@/assets/image/language/cn.png\")\n      }, {\n        title: \"Türkçe\",\n        key: \"tr\",\n        icon: require(\"@/assets/image/language/tr.png\")\n      }, {\n        title: \"日本語\",\n        key: \"ja\",\n        icon: require(\"@/assets/image/language/ja.png\")\n      }, {\n        title: \"한국어\",\n        key: \"ko\",\n        icon: require(\"@/assets/image/language/ko.png\")\n      }, {\n        title: \"ภาษาไทย\",\n        key: \"th\",\n        icon: require(\"@/assets/image/language/th.png\")\n      }, {\n        title: \"Filipino\",\n        key: \"ph\",\n        icon: require(\"@/assets/image/language/ph.png\")\n      }, {\n        title: \"عربي\",\n        key: \"ar\",\n        icon: require(\"@/assets/image/language/ar.png\")\n      }, {\n        title: \"Tiếng Việt\",\n        key: \"vi\",\n        icon: require(\"@/assets/image/language/vi.png\")\n      }, {\n        title: \"हिंदी\",\n        key: \"hi\",\n        icon: require(\"@/assets/image/language/hi.png\")\n      }, {\n        title: \"bahasa Indonesia\",\n        key: \"id\",\n        icon: require(\"@/assets/image/language/id.png\")\n      }],\n      handicapName: process.env.VUE_APP_ITEM_NAME,\n      checkIcon: require(`@/assets/${process.env.VUE_APP_ITEM_NAME}/check.png`)\n    };\n  },\n  mounted() {\n    if (this.handicapName == 'Mbuy') {\n      this.lang = this.lang.filter(item => item.key != 'cn' && item.key != 'tw');\n    }\n  },\n  computed: {\n    ...mapGetters({\n      activeLang: \"language\"\n    })\n  },\n  methods: {\n    ...mapMutations([\"setLanguage\"]),\n    handleSetLang(lang, index) {\n      // if(index > 2) return this.$notify(this.$t('暂不支持该语言'))\n      // 设置i18n.locale 组件库会按照上面的配置使用对应的文案文件\n      this.$i18n.locale = lang;\n      // 提交mutations\n      this.setLanguage(lang);\n      if (lang == 'ar') {\n        document.documentElement.setAttribute('dir', 'rtl');\n      } else {\n        document.documentElement.setAttribute('dir', 'ltr');\n      }\n      sessionStorage.removeItem('index_productList');\n      sessionStorage.removeItem('index_dailyNewArrivalList');\n      sessionStorage.removeItem('index_recomendedStoreShopList');\n      sessionStorage.removeItem('index_categoryList');\n      sessionStorage.removeItem('index_recomendedStoreProductList');\n      this.$router.go(-1);\n    },\n    onClickLeft() {\n      // console.log(this.$i18n.locale)\n\n      this.$router.go(-1);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}