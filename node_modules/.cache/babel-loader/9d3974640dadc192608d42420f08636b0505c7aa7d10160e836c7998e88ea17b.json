{"ast":null,"code":"import \"vant/es/dialog/style\";\nimport _Dialog from \"vant/es/dialog\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/icon/style\";\nimport _Icon from \"vant/es/icon\";\nimport \"vant/es/rate/style\";\nimport _Rate from \"vant/es/rate\";\nimport \"vant/es/stepper/style\";\nimport _Stepper from \"vant/es/stepper\";\nimport \"vant/es/popup/style\";\nimport _Popup from \"vant/es/popup\";\nimport \"vant/es/swipe-item/style\";\nimport _SwipeItem from \"vant/es/swipe-item\";\nimport \"vant/es/swipe/style\";\nimport _Swipe from \"vant/es/swipe\";\nimport \"vant/es/nav-bar/style\";\nimport _NavBar from \"vant/es/nav-bar\";\nimport \"vant/es/tabs/style\";\nimport _Tabs from \"vant/es/tabs\";\nimport \"vant/es/tab/style\";\nimport _Tab from \"vant/es/tab\";\nimport \"vant/es/loading/style\";\nimport _Loading from \"vant/es/loading\";\nimport \"vant/es/empty/style\";\nimport _Empty from \"vant/es/empty\";\nimport \"vant/es/image-preview/style\";\nimport _ImagePreview from \"vant/es/image-preview\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.flat-map.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { getSellerGoods, getEvaluationList, getSellerInfo, keepGoods, keepGoodsDel, apiEvaluationCountType, apiRecommendAndLike, apiAddCart, apiCartList } from \"@/API/commodity\";\nimport { apiGetRecommendNew } from '@/API/home';\nimport { isLogin, priceFormat, getStorage, formatZoneDate, priceFormatInt } from \"@/utils/utis\";\nimport Footer from '@/components/Footer';\nimport router from \"@/router/router\";\nexport default {\n  data() {\n    return {\n      formatZoneDate,\n      priceFormatInt,\n      itemName: process.env.VUE_APP_ITEM_NAME,\n      mainColor: process.env.VUE_APP_MAIN_COLOR,\n      sort_index: '',\n      goods_info: {},\n      //商品信息\n      tab_nav_list: [this.$t(\"商品\"), this.$t(\"评价\"), this.$t(\"详情\")],\n      tab_index: 0,\n      swiperWaitTime: 5000,\n      imageList: [],\n      isShippingShow: false,\n      isShowTopBtn: false,\n      EvaluationInfo: [],\n      SellerInfo: {},\n      sellerGoodsId: \"\",\n      cartNum: 0,\n      //购物车数量\n      bugNum: 1,\n      //购买数量\n      evaluationNum: 0,\n      collectTitle: '',\n      cardShow: false,\n      isCard: false,\n      attributesIndex: [],\n      Token: \"\",\n      isWatch: true,\n      productPropertiesShow: false,\n      activeAttrs: [],\n      allSkus: [],\n      currentSkuTitle: [],\n      currentSkuId: \"-1\",\n      current: 0,\n      attrsIdSkuId: [],\n      defaultSku: [],\n      defaultAvatar: require(\"@/assets/image/default_avatar.png\"),\n      ImagePreview: _ImagePreview,\n      isLoading: false,\n      isEn: getStorage('lang') == 'en',\n      havePicture: '0',\n      mediumReview: '0',\n      negativeComment: '0',\n      positiveComments: '0',\n      recommendedGoods: [],\n      likeGoods: [],\n      currentCoverImg: '',\n      defaultImageList: [],\n      btnDisabled: true,\n      originalPrice: 0,\n      maxBuyNum: localStorage.getItem('maxBuyNum') || 500\n    };\n  },\n  computed: {\n    langIsAr() {\n      return localStorage.getItem('lang') == 'ar';\n    }\n  },\n  components: {\n    Footer,\n    [_ImagePreview.name]: _ImagePreview,\n    [_Empty.name]: _Empty,\n    [_Loading.name]: _Loading,\n    [_Tab.name]: _Tab,\n    [_Tabs.name]: _Tabs,\n    [_NavBar.name]: _NavBar,\n    [_Swipe.name]: _Swipe,\n    [_SwipeItem.name]: _SwipeItem,\n    [_Popup.name]: _Popup,\n    [_Stepper.name]: _Stepper,\n    [_Rate.name]: _Rate,\n    [_Icon.name]: _Icon,\n    [_Toast.name]: _Toast,\n    [_Dialog.Component.name]: _Dialog.Component\n  },\n  created() {\n    setTimeout(() => {\n      window.scrollTo(0, 0);\n    }, 50);\n    let lang = this.$route.query?.lang;\n    if (lang) {\n      switch (lang) {\n        case 'zh-CN':\n          lang = 'cn';\n          break;\n        case 'zh-TW':\n        case 'CN':\n          lang = 'tw';\n          break;\n        case 'en-US':\n          lang = 'en';\n          break;\n        default:\n          lang = 'en';\n          break;\n      }\n      sessionStorage.setItem('backPath', '/');\n      if (lang !== localStorage.getItem('lang')) {\n        localStorage.setItem('lang', lang);\n        location.reload();\n      }\n    }\n    this.sellerGoodsId = this.$route.query.sellerGoodsId;\n    if (this.sellerGoodsId) {\n      this.getSellerGoodsInfo();\n      this.getEvaluationList();\n    }\n    //购物车数量\n    // if (this.$ls.get(\"productList\")) {\n    //     let list = this.$ls.get(\"productList\");\n    //     this.cartNum = list.reduce(function (prev, cur) {\n    //         return (prev += cur.count);\n    //     }, 0);\n    // }\n    this.getCartNum();\n    //监听购物车商品\n    // this.$ls.on(\"productList\", (list) => {\n    //     if (list.length > 0) {\n    //         this.cartNum = list.reduce(function (prev, cur) {\n    //             return (prev += cur.count);\n    //         }, 0);\n    //     }\n    // });\n    // 获取中评差评数量\n    apiEvaluationCountType({\n      goodId: this.$route.query.sellerGoodsId\n    }).then(res => {\n      const {\n        havePicture,\n        mediumReview,\n        negativeComment,\n        positiveComments\n      } = res;\n      this.havePicture = havePicture;\n      this.mediumReview = mediumReview;\n      this.negativeComment = negativeComment;\n      this.positiveComments = positiveComments;\n    });\n    this.Token = localStorage.getItem(\"item\");\n  },\n  mounted() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  },\n  methods: {\n    // 获取推荐商品 type： 1、猜你喜欢  2、推荐\n    async requestRecommendedProduct() {\n      const params = {\n        sellerId: this.SellerInfo?.id,\n        pageNum: 1\n      };\n      this.likeGoods = await apiRecommendAndLike({\n        ...params,\n        pageSize: 4,\n        type: 1\n      });\n      this.recommendedGoods = await apiRecommendAndLike({\n        ...params,\n        pageSize: 8,\n        type: 2\n      });\n    },\n    handleTabsChange(index) {\n      this.tab_index = index;\n      this.toTop(index);\n    },\n    handleToggle(info, index, dis, bool) {\n      if (dis) return;\n      const disAttr = new Set();\n      const allGood = this.goods_info?.canSelectAttributes?.goodAttrs;\n      const temparr = JSON.parse(JSON.stringify(this.activeAttrs));\n      if (allGood?.length === this.activeAttrs?.length) {\n        allGood.forEach((item, i) => {\n          if (i != index) {\n            item.attrValues.forEach((attr, j) => {\n              if (attr.attrValueId !== info.attrValueId) {\n                temparr[i] = attr.attrValueId;\n                if (!this.getSkusAndPrice(true, temparr)) {\n                  disAttr.add(attr.attrValueId);\n                  this.$set(this.activeAttrs, index, info.attrValueId);\n                }\n              }\n            });\n          }\n        });\n      }\n      this.allSkus.flatMap(item => item.attrs).filter(attr => attr.hidden && attr.attrValueId !== info.attrValueId).forEach(attr => disAttr.add(attr.attrValueId));\n      allGood.forEach(item => {\n        item.attrValues.forEach(attr => {\n          attr.disabled = disAttr.has(attr.attrValueId);\n        });\n      });\n      this.$set(this.activeAttrs, index, info.attrValueId);\n      this.getSkusAndPrice();\n      disAttr.clear();\n      this.$forceUpdate();\n      !bool && this.handleToggle(info, index, dis, true);\n    },\n    getSkusAndPrice(find, arr) {\n      let skuMap = {};\n      this.allSkus.forEach(item => {\n        const attrIds = item.attrs.map(attr => attr.attrValueId).join(',');\n        if (skuMap[attrIds]) return;\n        skuMap[attrIds] = {\n          title: item.attrs.map(attr => attr.attrName && attr.attrValueName ? `${attr.attrName}: ${attr.attrValueName}` : ''),\n          coverImg: item.coverImg,\n          discountPrice: item.discountPrice,\n          sellingPrice: item.sellingPrice,\n          skuId: item.skuId,\n          img: item?.img || this.defaultImageList,\n          hidden: item.hidden,\n          price: item.price\n        };\n      });\n      const attrIds = find ? arr.join(',') : this.activeAttrs.join(',');\n      if (skuMap[attrIds] && !find) {\n        this.currentSkuTitle = skuMap[attrIds].title;\n        this.goods_info.discountPrice = skuMap[attrIds].discountPrice || skuMap[attrIds].sellingPrice;\n        this.currentSkuId = skuMap[attrIds].skuId;\n        this.currentCoverImg = skuMap[attrIds].coverImg;\n        this.imageList = skuMap[attrIds].img;\n        this.btnDisabled = false;\n        this.originalPrice = skuMap[attrIds].discountPrice ? skuMap[attrIds].sellingPrice : 0;\n      } else {\n        if (Object.keys(skuMap)?.length === 0) {\n          this.btnDisabled = false;\n        } else {\n          this.btnDisabled = true;\n        }\n        return skuMap[attrIds];\n      }\n    },\n    handleSubmit() {\n      this.getSkusAndPrice();\n      this.isCard ? this.addCart() : this.openPay();\n    },\n    handleScroll() {\n      this.isShowTopBtn = (document.documentElement.scrollTop || document.body.scrollTop) > 500;\n      if (!this.isWatch) return;\n      let EvaluationOffsetTop = this.$el.querySelector(\"#Evaluation\").offsetTop - 50;\n      let detailsOffsetTop = this.$el.querySelector(\"#details\").offsetTop - 50;\n      let scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n      if (scrollTop <= EvaluationOffsetTop) {\n        this.tab_index = 0;\n      } else if (scrollTop >= EvaluationOffsetTop && scrollTop <= detailsOffsetTop) {\n        this.tab_index = 1;\n      } else if (scrollTop >= detailsOffsetTop) {\n        this.tab_index = 2;\n      }\n    },\n    priceFormat(num) {\n      return priceFormat(num);\n    },\n    //添加购物车\n    async addCart() {\n      if (isLogin()) {\n        if (this.goods_info?.isShelf == 0) {\n          this.$notifyWarn(this.$t(\"该商品已下架\"));\n          return;\n        }\n        this.productPropertiesShow = this.cardShow = false;\n        let productList = [];\n        if (JSON.stringify(this.goods_info) == \"{}\") {\n          console.log(\"商品数据有误,无法添加\");\n          return;\n        }\n        this.$toast.loading();\n        //添加选择数量\n        this.goods_info.count = this.bugNum;\n        this.goods_info.skuId = this.currentSkuId;\n        this.goods_info.coverImg = this.currentCoverImg;\n        this.goods_info.tempId = new Date().getTime();\n        await apiAddCart({\n          skuId: this.goods_info.skuId || '-1',\n          sellerGoodsId: this.goods_info.id,\n          sellerId: this.goods_info.sellerId,\n          buyNum: this.goods_info.count,\n          tempId: this.goods_info.tempId + ''\n        });\n        this.$toast.clear();\n        this.$notify(this.$t('购物车添加成功'), 'success');\n        this.getCartNum();\n        return;\n        if (this.$ls.get(\"productList\")) {\n          productList = this.$ls.get(\"productList\") || [];\n          //验证是否已添加过\n          let ishave = true;\n          try {\n            productList.forEach(item => {\n              if (item.id == this.goods_info.id && item.skuId == this.goods_info.skuId) {\n                item.count += this.bugNum;\n                this.cartNum += this.bugNum;\n                // Toast(this.$t(\"购物车添加成功\"));\n                this.$notify(this.$t('购物车添加成功'), 'success');\n                // Toast(this.$t('购物车已存在此商品'))\n                ishave = false;\n                throw \"跳出添加\";\n              }\n            });\n          } catch (e) {\n            //购物数量添加,重置购物车\n            this.$ls.set(\"productList\", productList);\n            this.$ls.remove(\"cartList\");\n          }\n          //添加\n          if (ishave) {\n            if (this.goods_info.storeName == \"\") {\n              // return Toast(this.$t(\"购物车添加失败, 请返回重试\"));\n              return this.$notify(this.$t('购物车添加失败, 请返回重试'));\n            }\n            productList.push(this.goods_info);\n            this.$ls.set(\"productList\", productList);\n            this.cartNum = productList.reduce(function (prev, cur) {\n              return prev += cur.count;\n            }, 0);\n            // Toast(this.$t(\"购物车添加成功\"));\n            this.$notify(this.$t('购物车添加成功'), 'success');\n            this.$ls.remove(\"cartList\");\n          }\n        } else {\n          if (this.goods_info.storeName == \"\") {\n            return this.$notify(this.$t('购物车添加失败, 请返回重试'));\n          }\n          productList.push(this.goods_info);\n          this.$ls.set(\"productList\", productList);\n          this.cartNum = productList.reduce(function (prev, cur) {\n            return prev += cur.count;\n          }, 0);\n          // Toast(this.$t(\"购物车添加成功\"));\n          this.$notify(this.$t('购物车添加成功'), 'success');\n          this.$ls.remove(\"cartList\");\n        }\n        // console.log(this.$ls.get('productList'))\n        // this.$ls.clear()\n      } else {\n        this.productPropertiesShow = this.cardShow = false;\n        //   Toast(this.$t(\"请先登录\"));\n        // Dialog.confirm({\n        //     title: this.$t(\"您还未登录\"),\n        //     message: this.$t(\"是否跳转到登录页面\"),\n        //     confirmButtonText: this.$t(\"确认\"),\n        //     cancelButtonText: this.$t(\"取消\"),\n        // }).then(() => {\n        //     this.$router.push(\"/login\");\n        // });\n        this.$notifyWarn(this.$t(\"请先登录\"));\n        this.$router.push(\"/login\");\n      }\n    },\n    // 获取当前添加了多少条\n    async getCartNum() {\n      if (!isLogin()) return;\n      const res = await apiCartList();\n      this.cartNum = res.pageInfo.totalElements;\n      localStorage.setItem('CART_NUM', this.cartNum);\n    },\n    //获取商品详情\n    getSellerGoodsInfo(sellerGoodsId) {\n      this.collectTitle = this.$t('收藏');\n      this.$toast.loading({\n        duration: 0\n      });\n      // 推荐商品/猜你喜欢\n      if (sellerGoodsId) {\n        this.activeAttrs = [];\n        this.allSkus = [];\n        this.goods_info = {};\n        this.imageList = this.defaultImageList = [];\n        scrollTo({\n          top: 0,\n          left: 0,\n          behavior: 'smooth'\n        });\n      }\n      let dataJson = {\n        sellerGoodsId: sellerGoodsId || this.sellerGoodsId,\n        skuId: this.$route.query?.skuId || null\n      };\n      getSellerGoods(dataJson).then(data => {\n        this.$toast.clear();\n        this.$nextTick(() => {\n          this.goods_info = data;\n          this.getSkusAndPrice();\n        });\n        if (data.canSelectAttributes?.goodAttrs?.length) {\n          data.canSelectAttributes.goodAttrs.forEach(item => {\n            this.activeAttrs.push(item.attrValues[0].attrValueId);\n            // if (item.attrValues[0].icon) {\n            //     this.imageList = item.attrValues.map(sub => sub.iconImg)\n            // }\n          });\n          this.allSkus = data.canSelectAttributes.skus;\n          const ids = data.canSelectAttributes.goodAttrs.map(item => item.attrId);\n          this.allSkus.forEach(item => {\n            item.attrs = item.attrs.sort((star, next) => ids.indexOf(star.attrId) - ids.indexOf(next.attrId));\n          });\n        }\n        for (let i = 0; i < 10; i++) {\n          if (data[`imgUrl${i + 1}`]) {\n            this.defaultImageList.push(data[`imgUrl${i + 1}`]);\n          }\n        }\n        if (!this.imageList?.length) {\n          this.imageList = this.defaultImageList;\n        }\n        this.getSellerInfo(data.seller.id);\n        if (this.goods_info.isKeep == 1) {\n          this.collectTitle = this.$t(\"已收藏\");\n        } else {\n          this.collectTitle = this.$t(\"收藏\");\n        }\n        if (data.canSelectAttributes?.goodAttrs.length === 0) {\n          if (data.discountPrice) {\n            this.originalPrice = data.sellingPrice;\n          }\n        }\n        this.$toast.clear();\n      }).catch(err => {\n        this.$toast.clear();\n        router.back();\n      });\n    },\n    //获取评论\n    getEvaluationList() {\n      let dataJson = {\n        sellerGoodsId: this.sellerGoodsId,\n        pageNum: 1,\n        pageSize: 1,\n        evaluationType: this.sort_index\n      };\n      getEvaluationList(dataJson).then(res => {\n        if (res.pageList?.length > 0) {\n          this.EvaluationInfo = res.pageList.slice(0, 5);\n          this.EvaluationInfo = this.EvaluationInfo.map(item => {\n            const images = [item.imgUrl1, item.imgUrl2, item.imgUrl3, item.imgUrl4, item.imgUrl5, item.imgUrl6, item.imgUrl7, item.imgUrl8, item.imgUrl9];\n            return {\n              ...item,\n              avatar: item.avatar || Math.floor(Math.random() * 20),\n              images: images.filter(url => !!url)\n            };\n          });\n          this.evaluationNum = res.evaluationNum;\n        } else {\n          this.EvaluationInfo = [];\n        }\n      });\n    },\n    addKeepGoods() {\n      if (!isLogin()) {\n        //   Toast(this.$t(\"请先登录\"));\n        // Dialog.confirm({\n        //     title: this.$t(\"您还未登录\"),\n        //     message: this.$t(\"是否跳转到登录页面\"),\n        //     confirmButtonText: this.$t(\"确认\"),\n        //     cancelButtonText: this.$t(\"取消\"),\n        // }).then(() => {\n        //     this.$router.push(\"/login\");\n        // });\n        this.$notifyWarn(this.$t(\"请先登录\"));\n        this.$router.push(\"/login\");\n        return;\n      }\n      if (this.goods_info.isKeep == 1) {\n        let dataJson = {\n          sellerGoodsId: this.sellerGoodsId\n        };\n        keepGoodsDel(dataJson).then(() => {\n          this.collectTitle = this.$t(\"收藏\");\n          this.goods_info.isKeep = 0;\n          _Toast(this.$t(\"取消成功\"));\n        });\n      } else {\n        let dataJson = {\n          sellerGoodsId: this.sellerGoodsId\n        };\n        keepGoods(dataJson).then(() => {\n          this.collectTitle = this.$t(\"已收藏\");\n          this.goods_info.isKeep = 1;\n          _Toast(this.$t(\"收藏成功\"));\n        });\n      }\n    },\n    //跳转评论页\n    jumpAllReviews() {\n      this.$router.push({\n        path: \"/allReviews\",\n        query: {\n          sellerGoodsId: this.sellerGoodsId\n        }\n      });\n    },\n    // 商家详情\n    getSellerInfo(id) {\n      let dataJson = {\n        sellerId: id\n      };\n      getSellerInfo(dataJson).then(res => {\n        this.SellerInfo = res;\n        //详情里添加商铺名称\n        this.goods_info.storeName = res.name;\n        this.isLoading = false;\n        isLogin() && this.requestRecommendedProduct();\n      }).catch(err => {\n        console.log(`err ::->`, err);\n        this.isLoading = false;\n      });\n    },\n    checkActive(index) {\n      return index === this.current; // current为监听的轮播index\n    },\n    //监听product轮播index\n    handleChangeSwiper(index) {\n      this.current = index;\n    },\n    onClickLeft() {\n      const backPath = sessionStorage.getItem(\"backPath\");\n      if (backPath) {\n        this.$router.replace('/');\n        sessionStorage.removeItem(\"backPath\");\n      } else {\n        this.$router.go(-1);\n      }\n    },\n    toTop(index) {\n      this.isWatch = false;\n      setTimeout(() => this.isWatch = true, 1000);\n      this.tab_index = index;\n      if (index === 0) {\n        this.$el.querySelector(\"#product\").scrollIntoView({\n          block: \"start\",\n          behavior: \"smooth\"\n        });\n      } else if (index === 1) {\n        this.$el.querySelector(\"#Evaluation\").scrollIntoView({\n          block: \"start\",\n          behavior: \"smooth\"\n        });\n      } else {\n        this.$el.querySelector(\"#details\").scrollIntoView({\n          block: \"start\",\n          behavior: \"smooth\"\n        });\n      }\n    },\n    //跳转商铺\n    jumpShop(isJump) {\n      if (!isJump) return this.$toast(this.$t('操作失败，请稍后再试'));\n      sessionStorage.removeItem(\"shopState\");\n      this.$router.push(`/shop?sellerId=${this.SellerInfo.id}&index=0`);\n    },\n    //跳转下单\n    openPay() {\n      if (!isLogin()) {\n        this.productPropertiesShow = false;\n        // Dialog.confirm({\n        //     title: this.$t(\"您还未登录\"),\n        //     message: this.$t(\"是否跳转到登录页面\"),\n        //     confirmButtonText: this.$t(\"确认\"),\n        //     cancelButtonText: this.$t(\"取消\"),\n        // }).then(() => {\n        //     this.$router.push(\"/login\");\n        // });\n        this.$notifyWarn(this.$t(\"请先登录\"));\n        this.$router.push(\"/login\");\n        return;\n      }\n      if (this.goods_info?.isShelf == 0) {\n        this.$notifyWarn(this.$t(\"该商品已下架\"));\n        return;\n      }\n      localStorage.setItem(\"sellerId\", this.goods_info.sellerId);\n      localStorage.setItem(\"storeName\", this.goods_info.storeName);\n      this.goods_info.tempId = new Date().getTime();\n      //type:1直接购买,2购物车购买\n      this.$router.push({\n        path: \"/orderComnfirmation\",\n        query: {\n          skuId: this.currentSkuId,\n          type: 1,\n          goodsInfo: JSON.stringify(this.goods_info),\n          bugNum: this.bugNum,\n          isCart: 0,\n          currentCoverImg: this.currentCoverImg\n        }\n      });\n    },\n    // 打开客服\n    openCustomer() {\n      localStorage.setItem(\"sellerId\", this.goods_info.sellerId);\n      localStorage.setItem(\"storeName\", this.goods_info.storeName);\n      if (isLogin()) {\n        // Toast(this.$t(\"请先登录\"));\n        sessionStorage.setItem('shopName', this.SellerInfo.name);\n        this.$router.push({\n          path: `/customerServiceIndex?goodsId=${this.goods_info.id}`\n        });\n      } else {\n        //   Toast(this.$t(\"请先登录\"));\n        // Dialog.confirm({\n        //     title: this.$t(\"您还未登录\"),\n        //     message: this.$t(\"是否跳转到登录页面\"),\n        //     confirmButtonText: this.$t(\"确认\"),\n        //     cancelButtonText: this.$t(\"取消\"),\n        // }).then(() => {\n        //     this.$router.push(\"/login\");\n        // });\n        this.$notifyWarn(this.$t(\"请先登录\"));\n        this.$router.push(\"/login\");\n      }\n    }\n  },\n  watch: {\n    bugNum(val) {\n      if (val > this.maxBuyNum) {\n        this.bugNum = this.maxBuyNum;\n        this.$notifyWarn(this.$t('超出最大购买数量'));\n      }\n    },\n    sort_index() {\n      this.getEvaluationList();\n    },\n    productPropertiesShow(val) {\n      val && (this.swiperWaitTime = 5000);\n    }\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n  // destroyed() {\n  //     //撤销监听\n  //     this.$ls.off(\"productList\");\n  // },\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}