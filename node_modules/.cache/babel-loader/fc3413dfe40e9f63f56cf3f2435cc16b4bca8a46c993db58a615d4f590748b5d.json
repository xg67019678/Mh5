{"ast":null,"code":"import \"vant/es/image-preview/style\";\nimport _ImagePreview from \"vant/es/image-preview\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/popup/style\";\nimport _Popup from \"vant/es/popup\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport \"vant/es/swipe-item/style\";\nimport _SwipeItem from \"vant/es/swipe-item\";\nimport \"vant/es/swipe/style\";\nimport _Swipe from \"vant/es/swipe\";\nimport \"vant/es/uploader/style\";\nimport _Uploader from \"vant/es/uploader\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\nimport _FormItem2 from \"element-ui/lib/theme-chalk/form-item.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _FormItem from \"element-ui/lib/form-item\";\nimport _Form2 from \"element-ui/lib/theme-chalk/form.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Form from \"element-ui/lib/form\";\nimport \"vant/es/button/style\";\nimport _Button from \"vant/es/button\";\nimport \"vant/es/checkbox/style\";\nimport _Checkbox from \"vant/es/checkbox\";\nimport _Dropdown2 from \"element-ui/lib/theme-chalk/dropdown.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Dropdown from \"element-ui/lib/dropdown\";\nimport _DropdownItem2 from \"element-ui/lib/theme-chalk/dropdown-item.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DropdownItem from \"element-ui/lib/dropdown-item\";\nimport _DropdownMenu2 from \"element-ui/lib/theme-chalk/dropdown-menu.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DropdownMenu from \"element-ui/lib/dropdown-menu\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport merChantHeader from \"./components/mer-chant-header\";\nimport merChantFooter from \"@/components/Footer\";\nimport submitSuccess from \"./components/submit-success.vue\";\nimport { mapGetters, mapMutations } from \"vuex\";\nimport { sellerRegister, uploadimg, apiListCountry, getSignType, getEmailCode, sellerRegister2 } from \"@/API/commodity\";\nimport NationalityList from \"@/components/NationalityList\";\nimport vueEsign from \"vue-esign\";\n// import cropperjs from \"./components/cropperjs.vue\";\n// import Upload from \"@/components/Upload\";\nimport h5img from \"@/assets/image/Int-2-h5.jpg\";\nimport html2Canvas from \"html2canvas\";\nimport JsPDF from 'jspdf';\nexport default {\n  name: \"merchantSettled\",\n  data() {\n    return {\n      sellerSign: false,\n      lineWidth: 6,\n      lineColor: \"#000000\",\n      bgColor: \"\",\n      resultImg: \"\",\n      h5img,\n      // esignImg: \"\",\n      tabIndex: 0,\n      isCrop: false,\n      visible: false,\n      itemname: process.env.VUE_APP_ITEM_NAME,\n      showPassword: true,\n      showPassword2: true,\n      imageMap: {\n        open: require(\"@/assets/image/eye-open.png\"),\n        close: require(\"@/assets/image/eye-close.png\")\n      },\n      isCutting: false,\n      // 是否裁剪\n      imgFile: \"https://bpic.588ku.com/element_water_img/18/06/12/b2887846cb19ff36a5502401ac918809.jpg\",\n      ratioWidth: 1,\n      // 裁剪比例：长 自由比例设置为: 0 即可\n      ratioHeight: 1,\n      // 裁剪比例：宽 自由比例设置为: 0 即可\n      showUpLoader: true,\n      step: 2,\n      show: false,\n      checked: false,\n      screenWidth: document.body.clientWidth,\n      type: \"Email\",\n      //Email/Moblie\n      uploadCheckIndex: 1,\n      scrollDisbled: true,\n      areaCode: 44,\n      countryList: [],\n      country: \"\",\n      ruleForm: {\n        type: 1,\n        //1/手机；2/邮箱；\n        usercode: \"\",\n        name: \"\",\n        idimg_1: \"\",\n        idimg_2: \"\",\n        idimg_3: \"\",\n        idname: \"身份证\",\n        idnumber: \"\",\n        nationality: \"\",\n        userPhone: \"\",\n        sellerImg: \"\",\n        username: \"\",\n        userEmail: \"\",\n        password: \"\",\n        country: \"\",\n        re_password: \"\",\n        signPdfUrl: '',\n        sellerName: \"\",\n        sellerAddress: \"\",\n        phone: \"\",\n        verifcode: \"\"\n      },\n      labelPosition: \"top\",\n      tjbtn: false,\n      isCode: true,\n      options: [{\n        label: this.$t(\"身份证\"),\n        value: \"身份证\"\n      }, {\n        label: this.$t(\"护照\"),\n        value: \"护照\"\n      }],\n      fileList1: [],\n      fileList2: [],\n      fileList3: [],\n      fileList4: [],\n      send: '',\n      // sendtext:this.$t('获取验证码'),\n      // CountryList: [\n      //   {\n      //     label: \"中国\",\n      //     value: \"cn\",\n      //     icon: require(\"@/assets/image/language/cn.png\"),\n      //   },\n      // ],\n      lang: [{\n        title: \"简体中文\",\n        key: \"cn\",\n        icon: require(\"@/assets/image/language/cn.png\")\n      }, {\n        title: \"English\",\n        key: \"en\",\n        icon: require(\"@/assets/image/language/usa.png\")\n      }, {\n        title: \"繁体中文\",\n        key: \"tw\",\n        icon: require(\"@/assets/image/language/tw.png\")\n      }],\n      pageDiaCode: true,\n      renderComponent: true,\n      blob: null,\n      codedis: false,\n      username: \"\",\n      now_date: \"\",\n      downloadUrl: [{\n        name: 'Argos',\n        url: 'https://argos.me'\n      }, {\n        name: 'Mata',\n        url: 'https://e-metashop.com'\n      }, {\n        name: 'Tongda',\n        url: 'https://www.tongdashops.com'\n      }, {\n        name: 'FamilyMart',\n        url: 'https://familymartex.com'\n      }, {\n        name: 'FamilyShop',\n        url: 'https://www.familyshopit.com'\n      }, {\n        name: 'Inchoi',\n        url: 'https://Inchoishop.com'\n      }, {\n        name: 'Hive',\n        url: 'https://www.hivemalls.com'\n      }, {\n        name: 'TikTok',\n        url: 'https://tiktokmallit.com'\n      }, {\n        name: 'Shop2u',\n        url: 'https://shop2u.co'\n      }, {\n        name: 'EShop',\n        url: 'https://ml.thsjbvh.site'\n      }]\n    };\n  },\n  // directives: {\n  //     'filter-special-characters': {\n  //       inserted(el) {\n  //         el.addEventListener('input', function(event) {\n  //           event.target.value = event.target.value.replace(/[^\\w\\u0080-\\uFFFF]/, '');\n  //         });\n  //       }\n  //     }\n  //   },\n  computed: {\n    ...mapGetters({\n      activeLang: \"language\"\n    }),\n    rules() {\n      return {\n        username: [{\n          required: false,\n          message: this.$t(\"请输入正确的邮箱地址\"),\n          trigger: \"blur\"\n        }],\n        country: [{\n          required: true,\n          message: this.$t(\"请选择国家\"),\n          trigger: \"blur\"\n        }],\n        idname: [{\n          required: true,\n          message: this.$t(\"请输入身份证或者护照号\"),\n          trigger: \"blur\"\n        }],\n        idimg_1: [{\n          required: true,\n          message: this.$t(\"请上传身份证正面\"),\n          trigger: \"blur\"\n        }],\n        idimg_2: [{\n          required: true,\n          message: this.$t(\"请上传身份证反面\"),\n          trigger: \"blur\"\n        }],\n        re_password: [{\n          required: true,\n          message: this.$t(\"请确认输入登录密码\"),\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: this.$t(\"请输入登录密码\"),\n          trigger: \"blur\"\n        }],\n        sellerImg: [{\n          required: true,\n          message: this.$t(\"请上传店铺logo\"),\n          trigger: \"blur\"\n        }],\n        phone: [{\n          required: false,\n          message: this.$t(\"请输入手机号\"),\n          trigger: \"blur\"\n        }],\n        idnumber: [{\n          required: true,\n          message: this.$t(\"请输入身份证或者护照号\"),\n          trigger: \"change\"\n        }],\n        name: [{\n          required: true,\n          message: this.$t(\"请输入真实姓名\"),\n          trigger: \"blur\"\n        }],\n        sellerName: [{\n          required: true,\n          message: this.$t(\"请输入店铺名称\"),\n          trigger: \"blur\"\n        }],\n        sellerAddress: [{\n          required: true,\n          message: this.$t(\"请输入店铺地址\"),\n          trigger: \"blur\"\n        }],\n        usercode: [{\n          required: true,\n          message: this.$t(\"请输入邀请码\"),\n          trigger: \"blur\"\n        }]\n        // verifcode:[\n        //     {\n        //         required: false,\n        //         message: this.$t(\"请输入验证码\"),\n        //         trigger: \"blur\",\n        //     },\n        // ],\n      };\n    },\n    sendtext() {\n      return this.$t(\"获取验证码\");\n    },\n    tabList() {\n      return [this.$t(\"电子邮箱\"), this.$t(\"手机号\")];\n    },\n    languageIcon() {\n      const language = this.$store.getters.language || \"CN\";\n      const icon = {\n        \"cn\": require(\"@/assets/image/language/cn.png\"),\n        \"en\": require(\"@/assets/image/language/usa.png\"),\n        \"tw\": require(\"@/assets/image/language/tw.png\")\n      };\n      return icon[language];\n    },\n    isOverSize() {\n      return 4000 * 1024;\n    },\n    isPC() {\n      let userAgentInfo = navigator.userAgent;\n      let Agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    }\n  },\n  components: {\n    // cropperjs,\n    vueEsign,\n    merChantHeader,\n    NationalityList,\n    merChantFooter,\n    submitSuccess,\n    [_DropdownMenu.name]: _DropdownMenu,\n    [_DropdownItem.name]: _DropdownItem,\n    [_Dropdown.name]: _Dropdown,\n    [_Checkbox.name]: _Checkbox,\n    [_Button.name]: _Button,\n    [_Form.name]: _Form,\n    [_FormItem.name]: _FormItem,\n    [_Input.name]: _Input,\n    [_Uploader.name]: _Uploader,\n    [_Swipe.name]: _Swipe,\n    [_SwipeItem.name]: _SwipeItem,\n    [_Select.name]: _Select,\n    [_Option.name]: _Option,\n    [_Popup.name]: _Popup,\n    [_Toast.name]: _Toast\n    // Upload,\n  },\n  created() {\n    this.getCountry();\n    this.getType();\n    // console.log('this.isPC ->', this.isPC);\n    if (this.screenWidth >= 500) {\n      this.labelPosition = \"left\";\n    } else {\n      this.labelPosition = \"top\";\n    }\n    if (this.$route.query.usercode) {\n      // localStorage.setItem(\"usercode\", this.$route.query.usercode);\n      // console.log(' ->', localStorage.getItem(\"usercode\"));\n      this.ruleForm.usercode = this.$route.query.usercode;\n    }\n    if (this.isPC) {\n      this.scrollDisbled = false;\n    }\n    this.getNowFormatDate();\n    // if(this.itemname == 'SM-wholesale shop' || this.itemname == 'FamilyShop' || this.itemname == 'ArgosShop' ){\n    //     this.rules.username[0].required = true \n    //     this.rules.phone[0].required = true\n    //     this.rules.verifcode[0].required = true\n    // }\n    // if(this.itemname == 'FamilyShop'){\n    //     this.rules.username[0].required = true \n    // }\n  },\n  methods: {\n    ...mapMutations([\"setLanguage\"]),\n    ImgView(img) {\n      _ImagePreview([img]);\n    },\n    async getCode() {\n      console.log('this.itenname ->', this.itenname);\n      if (!this.ruleForm.username && (this.itemname == 'SM-wholesale shop' || this.itemname == 'FamilyShop')) {\n        return _Toast(this.$t(\"请输入正确的邮箱地址\"));\n      } else if (!this.ruleForm.phone && this.itemname == 'ArgosShop') {\n        return _Toast(this.$t(\"请输入手机号\"));\n      } else {\n        let target = this.itemname == 'ArgosShop' ? this.areaCode + \" \" + this.ruleForm.phone : this.ruleForm.username;\n        const params = {\n          target\n        };\n        await getEmailCode(params).then(res => {\n          console.log('res ->', res);\n          if (this.itemname == 'ArgosShop') {\n            _Toast(this.$t(\"验证码已发送\"));\n          } else {\n            _Toast(this.$t(\"邮件已发送\"));\n          }\n          let num = 61;\n          let timer = setInterval(() => {\n            num--;\n            this.send = num + 's';\n            if (num == 0) {\n              clearInterval(timer);\n              this.send = this.$t(\"获取验证码\");\n              this.codedis = false;\n            }\n          }, 1000);\n          this.codedis = true;\n        });\n      }\n    },\n    async getType() {\n      const res = await getSignType();\n      console.log('res ->', res.sellerSign);\n      this.sellerSign = res.sellerSign == 'false' ? false : true;\n      console.log('this.sellerSign ->', this.sellerSign);\n    },\n    //  inputHandler(){\n    //     this.ruleForm.sellerName = this.ruleForm.sellerName.replace(/[^\\w\\u0080-\\uFFFF]/g, '');\n    // },\n    reset() {\n      this.$refs.esign.reset();\n    },\n    goback() {\n      this.$refs.esign.reset();\n      this.visible = false;\n    },\n    spaceDete() {\n      this.ruleForm.sellerName = this.ruleForm.sellerName.trimLeft();\n    },\n    spaceDete1() {\n      this.ruleForm.sellerAddress = this.ruleForm.sellerAddress.trimLeft();\n    },\n    spaceDete2() {\n      this.ruleForm.name = this.ruleForm.name.trimLeft();\n    },\n    getNowFormatDate() {\n      let date = new Date(),\n        year = date.getFullYear(),\n        //获取完整的年份(4位)\n        month = date.getMonth() + 1,\n        //获取当前月份(0-11,0代表1月)\n        strDate = date.getDate(); // 获取当前日(1-31)\n      if (month < 10) month = `0${month}`; // 如果月份是个位数，在前面补0\n      if (strDate < 10) strDate = `0${strDate}`; // 如果日是个位数，在前面补0\n\n      this.now_date = `${year}-${month}-${strDate}`;\n    },\n    clickTip() {\n      console.log('3434 ->', 3434);\n      // this.$message({\n      //     message: this.$t(\"请仔细阅读合同\"),\n      //     type: \"warning\",\n      // });\n    },\n    // 保存\n    save() {\n      // 可选配置参数 ，在未设置format或quality属性时可在生成图片时配置 例如： {format:'image/jpeg', quality: 0.5}\n      this.$refs.esign.generate({\n        format: \"image/jpeg\",\n        quality: 0.5\n      });\n      this.$refs.esign.generate().then(res => {\n        // console.log('res ->', res);\n        this.resultImg = res;\n        // this.$emit(\"finsih\",res)\n        this.visible = false;\n      }).catch(err => {\n        // 画布没有签字时会执行这里 'Not Signned'\n        // this.$message.error(\"您还未完成签字，请签字完成后保存\");\n        _Toast(this.$t(\"请签字后再提交\"));\n      });\n    },\n    argeementEsign() {\n      if (this.sellerSign) {\n        if (this.resultImg) {\n          this.show = false;\n          this.checked = true;\n          this.getImg();\n        } else {\n          _Toast(this.$t(\"请签字后再提交\"));\n        }\n      } else {\n        this.show = false;\n        this.checked = true;\n        // this.getImg();\n      }\n    },\n    dataURLtoBlob(dataurl) {\n      let arr = dataurl.split(\",\"),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      return new Blob([u8arr], {\n        type: mime\n      });\n    },\n    blobToFile(theBlob, fileName) {\n      theBlob.lastModifiedDate = new Date();\n      theBlob.name = fileName;\n      return theBlob;\n    },\n    convertBase64ToFile(urlData, filename) {\n      var arr = urlData.split('base64,');\n      var type = arr[0].match(/:(.*?);/)[1];\n      var fileExt = type.split('/')[1];\n      var bstr = atob(arr[1]);\n      var n = bstr.length;\n      var u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      return new File([u8arr], filename + \".\" + fileExt, {\n        type: type\n      });\n    },\n    getImg() {\n      this.$refs.capture.scrollTop = 0;\n      this.$refs.capture.style.fontSize = '24px';\n      if (window.top) {\n        this.$refs.capture.style.width = '1220px';\n        this.$refs.capture.style.paddingRight = '30px';\n      }\n      html2Canvas(this.$refs.capture, {\n        allowTaint: true,\n        useCORS: true,\n        scale: 1\n      }).then(canvas => {\n        //内容的宽度\n        let contentWidth = canvas.width;\n        //内容高度\n        let contentHeight = canvas.height;\n        //一页pdf显示html页面生成的canvas高度,a4纸的尺寸[595.28,841.89];\n        let pageHeight = contentWidth / 592.28 * 841.89;\n        //未生成pdf的html页面高度\n        let leftHeight = contentHeight;\n        //页面偏移\n        let position = 0;\n        //a4纸的尺寸[595.28,841.89]，html页面生成的canvas在pdf中图片的宽高\n        let imgWidth = 595.28;\n        let imgHeight = 592.28 / contentWidth * contentHeight;\n        //canvas转图片数据\n        let pageData = canvas.toDataURL('image/jpeg', 1);\n        //新建JsPDF对象\n        let PDF = new JsPDF('', 'pt', 'a4');\n        //判断是否分页\n\n        if (leftHeight < pageHeight) {\n          PDF.addImage(pageData, 'JPEG', 10, 1, imgWidth, imgHeight);\n        } else {\n          while (leftHeight > 0) {\n            PDF.addImage(pageData, 'JPEG', 10, position, imgWidth, imgHeight);\n            leftHeight -= pageHeight;\n            position -= 841.89;\n            if (leftHeight > 0) {\n              PDF.addPage();\n            }\n          }\n        }\n        this.tjbtn = true;\n        let blob = this.convertBase64ToFile(PDF.output('dataurlstring'), 'esign.pdf');\n        // PDF.save('esign.pdf')\n        let fileOfBlob = new File([blob], \"esign.pdf\");\n        let formData = new FormData(); //通过formdata上传\n        console.log('fileOfBlob ->', fileOfBlob);\n        formData.append(\"file\", fileOfBlob);\n        formData.append(\"moduleName\", \"seller\");\n        console.log('formData ->', formData.get(\"file\"));\n        _Toast.loading({\n          duration: 0,\n          message: this.$t(\"上传中\"),\n          forbidClick: true\n        });\n        uploadimg(formData).then(res => {\n          this.ruleForm.signPdfUrl = res;\n          this.tjbtn = false;\n          _Toast(this.$t(\"签名成功\"));\n          this.show = false;\n          this.checked = true;\n        }).catch(function () {\n          _Toast.clear();\n          _Toast(this.$t(\"失败\"));\n          this.ruleForm.signPdfUrl = '';\n        });\n        this.$refs.capture.style.fontSize = '14px';\n        if (window.top) {\n          this.$refs.capture.style.width = '90%';\n          this.$refs.capture.style.paddingRight = '0px';\n        }\n      });\n    },\n    handleScroll(e) {\n      const {\n        scrollTop,\n        clientHeight,\n        scrollHeight\n      } = e.target;\n      console.log(scrollTop, clientHeight, scrollHeight);\n      if (scrollTop + clientHeight + 2 >= scrollHeight) {\n        // alert('滚动到底部啦')\n        this.scrollDisbled = false;\n      }\n    },\n    open() {\n      // console.log('this.checked ->', this.checked);\n      if (this.checked == true) {\n        this.checked = false;\n      }\n      this.checked = false;\n      if (this.checked == false) {\n        this.show = true;\n      }\n    },\n    agreement() {\n      if (this.scrollDisbled) {\n        _Toast(this.$t(\"请仔细阅读经营合同\"));\n      } else {\n        this.visible = true;\n      }\n\n      // this.show=false;\n      // this.checked=true;\n    },\n    closeAgreement() {\n      this.show = false;\n      this.checked = false;\n    },\n    async getCountry() {\n      // console.log('localStorage ->', localStorage.getItem('lang'));\n      // const lang = localStorage.getItem('lang')\n      // lang == 'CN' ? 'TW' : localStorage.getItem('lang') || 'cn'\n      let res = await apiListCountry();\n      this.send = this.sendtext;\n      // console.log(res);\n\n      this.countryList = res.data;\n    },\n    onOversize(file) {\n      // console.log(file);\n      _Toast(this.$t(\"文件大小不能超过 4Mb\"));\n    },\n    // 裁剪\n    handleCutting() {\n      this.isCutting = true;\n    },\n    // 取消\n    handleCancel() {\n      this.isCutting = false;\n      this.fileList1 = [];\n    },\n    // 上传\n    handleUpload(data) {\n      let fileOfBlob = new File([data], \"logo.png\"); // 重命名\n      this.isCutting = false;\n      _Toast.loading({\n        duration: 0,\n        message: this.$t(\"上传中\"),\n        forbidClick: true\n      });\n      let formData = new FormData(); //通过formdata上传\n      formData.append(\"file\", fileOfBlob);\n      formData.append(\"moduleName\", \"selle\");\n      uploadimg(formData).then(data => {\n        _Toast.clear();\n        this.ruleForm.sellerImg = data;\n        console.log(\"data ->\", data);\n        this.fileList1[0].content = data;\n        // this.fileList1[0].file=fileOfBlob\n      }).catch(() => {\n        _Toast.clear();\n        _Toast(this.$t(\"失败\"));\n        this.fileList1 = [];\n      });\n    },\n    updateMerchantInfo(data) {\n      this.ruleForm.sellerImg = data;\n    },\n    handleCropData(data) {\n      console.log(\"裁剪数据\");\n      console.log(data);\n    },\n    handleSetLang(index) {\n      console.log(index);\n      // 设置i18n.locale 组件库会按照上面的配置使用对应的文案文件\n      this.$i18n.locale = this.lang[index].key;\n      // // 提交mutations\n      // this.setLanguage(this.lang[index].key);\n    },\n    changeCountry(val) {\n      console.log(val);\n      this.ruleForm.country = val;\n    },\n    //商户注册\n    sellerRegister() {\n      // console.log(\"this.ruleForm.sellerImg ->\", this.ruleForm.sellerImg);\n      if (!this.ruleForm.idimg_1 || !this.ruleForm.idimg_2) {\n        _Toast(this.$t(\"请上传证件照片\"));\n        return;\n      }\n      if (this.itemname !== \"Inchoi\" && this.itemname !== \"Hive\" && this.itemname !== 'AntMall') {\n        if (!this.ruleForm.idimg_3) {\n          _Toast(this.$t(\"请上传证件照片\"));\n          return;\n        }\n      }\n      if (!this.checked) {\n        _Toast(this.$t(\"请同意入驻协议\"));\n        return;\n      }\n      this.ruleForm.type = this.tabIndex === 0 ? 2 : 1;\n      if (this.tabIndex == 1) {\n        this.username = this.areaCode + \" \" + this.ruleForm.userPhone;\n      } else {\n        this.username = this.ruleForm.username;\n      }\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          _Toast.loading({\n            duration: 0,\n            forbidClick: true\n          });\n          sellerRegister({\n            type: this.ruleForm.type,\n            usercode: this.ruleForm.usercode,\n            name: this.ruleForm.name,\n            idimg_1: this.ruleForm.idimg_1,\n            idimg_2: this.ruleForm.idimg_2,\n            idimg_3: this.ruleForm.idimg_3,\n            idname: this.ruleForm.idname,\n            idnumber: this.ruleForm.idnumber,\n            nationality: this.ruleForm.nationality,\n            sellerImg: this.ruleForm.sellerImg,\n            username: this.username,\n            password: this.ruleForm.password,\n            country: this.ruleForm.country,\n            re_password: this.ruleForm.re_password,\n            signPdfUrl: this.ruleForm.signPdfUrl,\n            sellerAddress: this.ruleForm.sellerAddress,\n            idimg_0: this.ruleForm.idimg_0,\n            sellerName: this.ruleForm.sellerName\n          }).then(res => {\n            _Toast.clear();\n            this.step = 3;\n            this.$el.querySelector(\"#product\").scrollIntoView({\n              behavior: \"smooth\"\n            });\n          });\n        } else if (valid && this.itemname == 'SM-wholesale shop' || this.itemname == 'FamilyShop' || this.itemname == 'ArgosShop') {\n          let type = this.itemname == 'ArgosShop' ? 1 : 2;\n          sellerRegister2({\n            type,\n            usercode: this.ruleForm.usercode,\n            name: this.ruleForm.name,\n            idimg_1: this.ruleForm.idimg_1,\n            idimg_2: this.ruleForm.idimg_2,\n            idimg_3: this.ruleForm.idimg_3,\n            idname: this.ruleForm.idname,\n            idnumber: this.ruleForm.idnumber,\n            sellerName: this.ruleForm.sellerName,\n            nationality: this.ruleForm.nationality,\n            sellerImg: this.ruleForm.sellerImg,\n            username: this.ruleForm.username,\n            password: this.ruleForm.password,\n            country: this.ruleForm.country,\n            re_password: this.ruleForm.re_password,\n            signPdfUrl: this.ruleForm.signPdfUrl,\n            sellerAddress: this.ruleForm.sellerAddress,\n            phone: this.areaCode + ' ' + this.ruleForm.phone,\n            verifcode: this.ruleForm.verifcode,\n            idimg_0: this.ruleForm.idimg_0\n          }).then(() => {\n            _Toast.clear();\n            this.step = 3;\n            this.$el.querySelector(\"#product\").scrollIntoView({\n              behavior: \"smooth\"\n            });\n          });\n        } else {\n          _Toast.clear();\n          return false;\n        }\n      }).catch(err => {\n        _Toast.clear();\n        console.log(err);\n      });\n    },\n    goPage() {\n      // const obj = {\n      //     'EShop': 'https://ml.thsjbvh.site',\n      //     'Argos': 'https://qjdbkef.com',\n      //     'Inchoi': 'https://abhjr.com',\n      //     'MetaShop': 'https://eudhu.com',\n      //     'Tongda': 'https://fjawdef.com',\n      //     'Hive': 'https://liebuw.com',\n      //     'FamilyMart': 'https://jdhieb.com',\n      //     'TikTok': 'https://aeknl.com',\n      //     'Shop2u': 'https://aanje.com'\n      // }\n      // const url = this.downloadUrl.find(item => item.name == this.itemname).url\n      let token = localStorage.getItem(\"token\");\n      let lang = localStorage.getItem(\"lang\") || \"en\";\n      let path = window?.plus ? this.paths[this.itemName] : location.origin + '/';\n      if (window.plus) {\n        window.location.href = encodeURI(`${path}www/#/?from=shop&token=${token}&lang=${lang}`);\n      } else {\n        window.open(encodeURI(`${path}www/#/?from=shop&token=${token}&lang=${lang}`));\n      }\n      //    if (this.isPC){\n      //        window.parent.postMessage('jump', '*')\n      //    }else {\n      //         window.open(window.origin + \"/ww\", \"_blank\")\n      //     }\n      //    if (/Mobi|Android|iPhone/i.test(navigator.userAgent) ) {\n      //     //  if (window.parent) {\n      //     //     var parentDomain = '';\n      //     //     parentDomain = window.parent.location.origin;\n      //     // }\n\n      //        window.open(window.origin + \"/ww\", \"_blank\");\n      //         // window.parent.postMessage('jump', '*')\n      //     }else if(window?.plus){\n      //         window.parent.postMessage('jump', '*')\n      //     }else{\n      //         window.open(window.origin + \"/ww\", \"_blank\");\n      //     }\n    },\n    stepFun() {\n      if (!this.checked) {\n        _Toast(this.$t(\"请同意入驻协议\"));\n        return;\n      }\n      this.step = 2;\n      this.$el.querySelector(\"#product\").scrollIntoView({\n        behavior: \"smooth\"\n      });\n    },\n    openNationality(index) {\n      const t = this;\n      if (index === 1) {\n        this.isCode = true;\n      } else {\n        this.isCode = false;\n      }\n      this.$refs.controlChild.open();\n      t.renderComponent = false;\n      // this.$forceUpdate()\n      t.$nextTick().then(() => {\n        t.renderComponent = true;\n        t.$nextTick().then(() => {\n          t.sj();\n        });\n      });\n    },\n    sj() {\n      try {\n        this.$refs.controlChild.open2();\n      } catch (error) {\n        this.$refs.controlChild.open();\n      }\n    },\n    getName(params) {\n      console.log(params);\n      if (this.isCode) {\n        this.areaCode = params[2];\n      } else {\n        this.ruleForm.nationality = params[0];\n      }\n    },\n    //文件上传\n    avatarAfterRead(file) {\n      this.imgFile = file.content;\n      this.isCutting = true;\n    },\n    //文件上传\n    paperworkAfterRead(file, fileIndex) {\n      console.log(\"fileIndex ->\", fileIndex);\n      const that = this;\n      _Toast.loading({\n        duration: 0,\n        message: that.$t(\"上传中\"),\n        forbidClick: true\n      });\n      let formData = new FormData(); //通过formdata上传\n      formData.append(\"file\", file.file);\n      formData.append(\"moduleName\", \"selle\");\n      uploadimg(formData).then(data => {\n        _Toast.clear();\n        that.ruleForm[`idimg_${fileIndex}`] = data;\n      }).catch(() => {\n        _Toast.clear();\n        _Toast(that.$t(\"失败\"));\n        that[`fileList${fileIndex + 1}`] = [];\n      });\n      if (fileIndex == 0) {\n        uploadimg(formData).then(data => {\n          _Toast.clear();\n          _Toast(that.$t(\"成功\"));\n          that.ruleForm.sellerImg = data;\n        }).catch(() => {\n          _Toast.clear();\n          _Toast(that.$t(\"失败\"));\n          that.ruleForm.sellerImg = [];\n        });\n      }\n    }\n  },\n  beforeDestroy() {\n    _Toast.clear();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}