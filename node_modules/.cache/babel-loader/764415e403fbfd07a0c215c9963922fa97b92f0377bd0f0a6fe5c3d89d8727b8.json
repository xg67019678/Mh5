{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/nav-bar/style\";\nimport _NavBar from \"vant/es/nav-bar\";\nimport \"core-js/modules/es.array.push.js\";\nimport { updateOldAndNewPsw } from \"@/API/user\";\nimport { isLogin } from '@/utils/utis';\nimport Vcode from \"vue-puzzle-vcode\";\nimport router from '@/router/router';\nexport default {\n  data() {\n    return {\n      img1: require('@/assets/image/slider/1.png'),\n      img2: require('@/assets/image/slider/2.png'),\n      img3: require('@/assets/image/slider/3.png'),\n      img4: require('@/assets/image/slider/4.png'),\n      img5: require('@/assets/image/slider/5.png'),\n      show: false,\n      it: {\n        input1: '',\n        input2: '',\n        input3: ''\n      }\n    };\n  },\n  components: {\n    [_NavBar.name]: _NavBar,\n    Vcode\n  },\n  created() {\n    if (!isLogin()) {\n      this.$router.push('/');\n    }\n  },\n  methods: {\n    onClickLeft() {\n      this.$router.push({\n        path: '/Setting',\n        dir: 'left'\n      });\n    },\n    biaodantijiao() {\n      const t = this;\n      if (t.it.input1 === '') {\n        _Toast(t.$t('请输入原密码'));\n        return;\n      }\n      if (t.it.input2 === '') {\n        _Toast(t.$t('请输入新密码'));\n        return;\n      }\n      const reg = /^[a-zA-Z0-9!@#$%^&*()_+{}\\[\\]:;'\"\\\\|,.<>?~`\\-=/]{6,20}$/;\n      if (!reg.test(t.it.input2)) {\n        _Toast(t.$t('请输入 6-20 位由数字或字母组成的密码'));\n        return;\n      }\n      if (t.it.input3 !== t.it.input2) {\n        _Toast(t.$t('两次密码输入不一致'));\n        return;\n      }\n      if (t.it.input1 == t.it.input2) {\n        _Toast(t.$t('新密码不能与原密码相同'));\n        return;\n      }\n      this.submitHandle();\n      //   this.show = true\n    },\n    onSuccess() {\n      this.submitHandle();\n      this.show = false;\n    },\n    submitHandle() {\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('提交中'),\n        forbidClick: true\n      });\n      const params = {\n        old_password: encodeURI(this.it.input1),\n        password: encodeURI(this.it.input2),\n        re_password: encodeURI(this.it.input3)\n      };\n      updateOldAndNewPsw(params).then(async () => {\n        _Toast.success(this.$t('修改成功'));\n        await this.$store.dispatch('getUserInfo');\n        this.onClickLeft();\n        // localStorage.removeItem('token')\n        // this.$router.push('/login')\n      }).catch(err => {\n        _Toast.clear();\n        // Toast.fail(err.msg)\n      });\n    }\n  }\n};","map":{"version":3,"names":["updateOldAndNewPsw","isLogin","Vcode","router","data","img1","require","img2","img3","img4","img5","show","it","input1","input2","input3","components","_NavBar","name","created","$router","push","methods","onClickLeft","path","dir","biaodantijiao","t","_Toast","$t","reg","test","submitHandle","onSuccess","loading","duration","message","forbidClick","params","old_password","encodeURI","password","re_password","then","success","$store","dispatch","catch","err","clear"],"sources":["src/page/LoginPasswordReset/index.vue"],"sourcesContent":["<template>\n    <div class=\"LoginPasswordReset\" style=\"min-height: 100vh;\">\n        <Vcode style=\"direction: ltr;\" :imgs=\"[img1, img2, img3, img4, img5]\" :show=\"show\" @success=\"onSuccess\" :canvasHeight=\"200\"\n            @close=\"show = false;\" :sliderText=\"$t('拖动滑块以完成拼图')\" :successText=\"$t('验证通过!')\" :failText=\"$t('验证失败,请重试')\" />\n\n        <van-nav-bar safe-area-inset-top fixed :title=\" $t('重置密码') \" left-arrow @click-left=\" onClickLeft \" />\n        <div style=\"width: 100%;\" class=\"h46\"></div>\n        <div class=\"nr\">\n            <div class=\"biaoti\">{{ $t('原密码') }}</div>\n            <div class=\"shuru\">\n                <el-input :placeholder=\" $t('请输入原密码') \" maxlength=\"20\" v-model=\" it.input1 \" show-password clearable>\n                </el-input>\n            </div>\n            <div class=\"biaoti\">{{ $t('新密码') }}</div>\n            <div class=\"shuru\">\n                <el-input :placeholder=\" $t('请输入新密码') \" maxlength=\"20\" v-model=\" it.input2 \" show-password clearable>\n                </el-input>\n            </div>\n            <div class=\"biaoti\">{{ $t('再次输入新密码') }}</div>\n            <div class=\"shuru\">\n                <el-input :placeholder=\" $t('请再次输入新密码') \" maxlength=\"20\" v-model=\" it.input3 \" show-password clearable>\n                </el-input>\n            </div>\n            <div class=\"tijiao\" @click=\" biaodantijiao \">{{ $t('提交') }}</div>\n        </div>\n    </div>\n</template>\n<script>\nimport { NavBar, Toast } from 'vant';\nimport { updateOldAndNewPsw } from \"@/API/user\";\nimport { isLogin } from '@/utils/utis'\nimport Vcode from \"vue-puzzle-vcode\";\nimport router from '@/router/router';\nexport default {\n    data() {\n        return {\n            img1: require('@/assets/image/slider/1.png'),\n            img2: require('@/assets/image/slider/2.png'),\n            img3: require('@/assets/image/slider/3.png'),\n            img4: require('@/assets/image/slider/4.png'),\n            img5: require('@/assets/image/slider/5.png'),\n            show: false,\n            it: {\n                input1: '',\n                input2: '',\n                input3: '',\n            }\n        }\n    },\n    components: {\n        [NavBar.name]: NavBar,\n        Vcode\n    },\n    created() {\n        if (!isLogin()) {\n            this.$router.push('/')\n        }\n    },\n    methods: {\n        onClickLeft() {\n            this.$router.push({ path: '/Setting', dir: 'left' })\n        },\n\n        biaodantijiao() {\n            const t = this\n            if (t.it.input1 === '') {\n                Toast(t.$t('请输入原密码'));\n                return\n            }\n            if (t.it.input2 === '') {\n                Toast(t.$t('请输入新密码'));\n                return\n            }\n            const reg = /^[a-zA-Z0-9!@#$%^&*()_+{}\\[\\]:;'\"\\\\|,.<>?~`\\-=/]{6,20}$/;\n            if (!reg.test(t.it.input2)) {\n                Toast(t.$t('请输入 6-20 位由数字或字母组成的密码'));\n                return;\n            }\n            if (t.it.input3 !== t.it.input2) {\n                Toast(t.$t('两次密码输入不一致'));\n                return\n            }\n            if(t.it.input1 == t.it.input2){\n                Toast(t.$t('新密码不能与原密码相同'));\n                return\n            }\n            this.submitHandle()\n            //   this.show = true\n        },\n\n        onSuccess() {\n            this.submitHandle()\n            this.show = false\n        },\n\n        submitHandle() {\n            Toast.loading({\n                duration: 0,\n                message: this.$t('提交中'),\n                forbidClick: true,\n            })\n\n            const params = {\n                old_password: encodeURI(this.it.input1),\n                password: encodeURI(this.it.input2),\n                re_password: encodeURI(this.it.input3)\n            }\n            updateOldAndNewPsw(params).then(async () => {\n                Toast.success(this.$t('修改成功'))\n                await this.$store.dispatch('getUserInfo')\n                this.onClickLeft()\n                // localStorage.removeItem('token')\n                // this.$router.push('/login')\n            }).catch(err => {\n                Toast.clear()\n                // Toast.fail(err.msg)\n            })\n        }\n    }\n}\n</script>\n<style lang=\"scss\" scoped>\n.LoginPasswordReset {\n    width: 100%;\n\n    /deep/ .el-input {\n        input:focus {\n            //   border-color: var(--main-color);\n            border-color: var(--main-color);\n        }\n    }\n\n    .nr {\n        width: 100%;\n        padding: 0 15px;\n        box-sizing: border-box;\n\n        .biaoti {\n            margin-top: 20px;\n            font-style: normal;\n            font-weight: 400;\n            font-size: 12px;\n            line-height: 16px;\n            color: #333333;\n        }\n\n        .shuru {\n            width: 100%;\n            margin-top: 5px;\n        }\n\n        .tijiao {\n            margin-top: 40px;\n            width: 100%;\n            height: 44px;\n            background: var(--main-color);\n            border-radius: 4px;\n            font-style: normal;\n            font-weight: 400;\n            font-size: 16px;\n            line-height: 44px;\n            /* identical to box height, or 100% */\n\n            text-align: center;\n\n            color: #FFFFFF;\n        }\n    }\n}\n</style>\n"],"mappings":";;;;;AA6BA,SAAAA,kBAAA;AACA,SAAAC,OAAA;AACA,OAAAC,KAAA;AACA,OAAAC,MAAA;AACA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,OAAA;MACAC,IAAA,EAAAD,OAAA;MACAE,IAAA,EAAAF,OAAA;MACAG,IAAA,EAAAH,OAAA;MACAI,IAAA,EAAAJ,OAAA;MACAK,IAAA;MACAC,EAAA;QACAC,MAAA;QACAC,MAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,UAAA;IACA,CAAAC,OAAA,CAAAC,IAAA,GAAAD,OAAA;IACAf;EACA;EACAiB,QAAA;IACA,KAAAlB,OAAA;MACA,KAAAmB,OAAA,CAAAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,KAAAH,OAAA,CAAAC,IAAA;QAAAG,IAAA;QAAAC,GAAA;MAAA;IACA;IAEAC,cAAA;MACA,MAAAC,CAAA;MACA,IAAAA,CAAA,CAAAf,EAAA,CAAAC,MAAA;QACAe,MAAA,CAAAD,CAAA,CAAAE,EAAA;QACA;MACA;MACA,IAAAF,CAAA,CAAAf,EAAA,CAAAE,MAAA;QACAc,MAAA,CAAAD,CAAA,CAAAE,EAAA;QACA;MACA;MACA,MAAAC,GAAA;MACA,KAAAA,GAAA,CAAAC,IAAA,CAAAJ,CAAA,CAAAf,EAAA,CAAAE,MAAA;QACAc,MAAA,CAAAD,CAAA,CAAAE,EAAA;QACA;MACA;MACA,IAAAF,CAAA,CAAAf,EAAA,CAAAG,MAAA,KAAAY,CAAA,CAAAf,EAAA,CAAAE,MAAA;QACAc,MAAA,CAAAD,CAAA,CAAAE,EAAA;QACA;MACA;MACA,IAAAF,CAAA,CAAAf,EAAA,CAAAC,MAAA,IAAAc,CAAA,CAAAf,EAAA,CAAAE,MAAA;QACAc,MAAA,CAAAD,CAAA,CAAAE,EAAA;QACA;MACA;MACA,KAAAG,YAAA;MACA;IACA;IAEAC,UAAA;MACA,KAAAD,YAAA;MACA,KAAArB,IAAA;IACA;IAEAqB,aAAA;MACAJ,MAAA,CAAAM,OAAA;QACAC,QAAA;QACAC,OAAA,OAAAP,EAAA;QACAQ,WAAA;MACA;MAEA,MAAAC,MAAA;QACAC,YAAA,EAAAC,SAAA,MAAA5B,EAAA,CAAAC,MAAA;QACA4B,QAAA,EAAAD,SAAA,MAAA5B,EAAA,CAAAE,MAAA;QACA4B,WAAA,EAAAF,SAAA,MAAA5B,EAAA,CAAAG,MAAA;MACA;MACAf,kBAAA,CAAAsC,MAAA,EAAAK,IAAA;QACAf,MAAA,CAAAgB,OAAA,MAAAf,EAAA;QACA,WAAAgB,MAAA,CAAAC,QAAA;QACA,KAAAvB,WAAA;QACA;QACA;MACA,GAAAwB,KAAA,CAAAC,GAAA;QACApB,MAAA,CAAAqB,KAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}