{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { createNamespace } from '../utils';\nimport { ParentMixin } from '../mixins/relation';\nvar _createNamespace = createNamespace('row'),\n  createComponent = _createNamespace[0],\n  bem = _createNamespace[1];\nexport default createComponent({\n  mixins: [ParentMixin('vanRow')],\n  props: {\n    type: String,\n    align: String,\n    justify: String,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    gutter: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n  computed: {\n    spaces: function spaces() {\n      var gutter = Number(this.gutter);\n      if (!gutter) {\n        return;\n      }\n      var spaces = [];\n      var groups = [[]];\n      var totalSpan = 0;\n      this.children.forEach(function (item, index) {\n        totalSpan += Number(item.span);\n        if (totalSpan > 24) {\n          groups.push([index]);\n          totalSpan -= 24;\n        } else {\n          groups[groups.length - 1].push(index);\n        }\n      });\n      groups.forEach(function (group) {\n        var averagePadding = gutter * (group.length - 1) / group.length;\n        group.forEach(function (item, index) {\n          if (index === 0) {\n            spaces.push({\n              right: averagePadding\n            });\n          } else {\n            var left = gutter - spaces[item - 1].right;\n            var right = averagePadding - left;\n            spaces.push({\n              left: left,\n              right: right\n            });\n          }\n        });\n      });\n      return spaces;\n    }\n  },\n  methods: {\n    onClick: function onClick(event) {\n      this.$emit('click', event);\n    }\n  },\n  render: function render() {\n    var _bem;\n    var h = arguments[0];\n    var align = this.align,\n      justify = this.justify;\n    var flex = this.type === 'flex';\n    return h(this.tag, {\n      \"class\": bem((_bem = {\n        flex: flex\n      }, _bem[\"align-\" + align] = flex && align, _bem[\"justify-\" + justify] = flex && justify, _bem)),\n      \"on\": {\n        \"click\": this.onClick\n      }\n    }, [this.slots()]);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}