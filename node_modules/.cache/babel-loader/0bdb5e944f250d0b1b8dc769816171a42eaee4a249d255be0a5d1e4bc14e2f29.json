{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { apiMessageList, apiSystemMessage, apiUnreadSystemMessage } from '@/API/common';\nimport { shourtTimeString } from '@/utils/utis';\nexport default {\n  name: \"CustomerService\",\n  data() {\n    return {\n      itemName: process.env.VUE_APP_ITEM_NAME,\n      messageList: [],\n      shourtTimeString,\n      notifyInfo: {},\n      timer: null,\n      unreadCount: 0\n    };\n  },\n  mounted() {\n    if (this.itemName == 'EShop') {\n      this.requestSystemMessage();\n      this.requestUnreadSystemMessage();\n    }\n    this.requestMessageList();\n    this.timer = setInterval(() => {\n      this.requestMessageList();\n    }, 5000);\n  },\n  methods: {\n    onClickLeft() {\n      // 返回\n      this.$router.push('/');\n    },\n    handleJump(item) {\n      localStorage.setItem(\"storeName\", item.username);\n      localStorage.setItem(\"sellerId\", item.partyid);\n      sessionStorage.setItem(\"shopName\", item.username);\n      sessionStorage.setItem(\"sellerId\", item.partyid);\n      setTimeout(() => {\n        this.$router.push(`/customerService2`);\n      }, 200);\n    },\n    handleJump2(path) {\n      if (!this.notifyInfo?.title) return this.$toast(this.$t('暂无系统消息'));\n      this.$router.push(path);\n    },\n    requestMessageList() {\n      apiMessageList().then(res => {\n        this.messageList = res;\n      });\n    },\n    // pageSize=10&pageNum=1&totalElements=-1&type=3&status=0&module=1&token=4b0179022cf04ad99322b54b34c71ec8&tz=Asia%2FShanghai&lang=cn\n    requestSystemMessage() {\n      apiSystemMessage({\n        module: 0,\n        type: 3,\n        status: 0,\n        pageSize: 1,\n        pageNum: 1,\n        totalElements: -1\n      }).then(res => {\n        if (res.elements.length == 0) {\n          this.notifyInfo = {};\n          return;\n        }\n        res.elements.forEach(item => {\n          if (item.title == 'Customer complaint success notification') {\n            const regex = /The (.*) that you complained, the reason for the complaint: (.*), after review by the system, the situation is true, and the store reputation points (\\d+) will be deducted./;\n            const matches = item.content.match(regex);\n            const storeName = matches[1];\n            let complaintReason = matches[2];\n            const creditScore = matches[3];\n            if (complaintReason == 'No delivery for a long time') {\n              complaintReason = '长时间不发货';\n            } else if (complaintReason == 'seller’s poor service attitude') {\n              complaintReason = '卖家服务态度恶劣';\n            } else if (complaintReason == 'seller’s transaction fraud') {\n              complaintReason = '卖家交易欺诈';\n            } else if (complaintReason == 'seller’s failure to fulfill promises') {\n              complaintReason = '卖家承诺不履行';\n            } else if (complaintReason == 'other') {\n              complaintReason = '其他';\n            }\n            item.complaintReason = complaintReason;\n            item.creditScore = creditScore;\n            item.storeName = storeName;\n          } else if (item.title == 'Customer complaint rejection notification') {\n            const regex = /The (.*) that you complained, the reason for the complaint: (.*), was rejected after review by the system, the reason for rejection: (.*)/;\n            const matches = item.content.match(regex);\n            const storeName = matches[1];\n            let complaintReason = matches[2];\n            const creditScore = matches[3];\n            if (complaintReason == 'No delivery for a long time') {\n              complaintReason = '长时间不发货';\n            } else if (complaintReason == 'seller’s poor service attitude') {\n              complaintReason = '卖家服务态度恶劣';\n            } else if (complaintReason == 'seller’s transaction fraud') {\n              complaintReason = '卖家交易欺诈';\n            } else if (complaintReason == 'seller’s failure to fulfill promises') {\n              complaintReason = '卖家承诺不履行';\n            } else if (complaintReason == 'other') {\n              complaintReason = '其他';\n            }\n            item.complaintReason = complaintReason;\n            item.creditScore = creditScore;\n            item.storeName = storeName;\n          }\n        });\n        this.notifyInfo = res.elements[0];\n        console.log(`this.notifyInfo ::->`, this.notifyInfo);\n      });\n    },\n    // 查询未读系统通知\n    requestUnreadSystemMessage() {\n      apiUnreadSystemMessage({\n        type: 3,\n        module: '0'\n      }).then(res => {\n        this.unreadCount = res.count;\n      });\n    }\n  },\n  unMounted() {\n    clearInterval(this.timer);\n  }\n};","map":{"version":3,"names":["apiMessageList","apiSystemMessage","apiUnreadSystemMessage","shourtTimeString","name","data","itemName","process","env","VUE_APP_ITEM_NAME","messageList","notifyInfo","timer","unreadCount","mounted","requestSystemMessage","requestUnreadSystemMessage","requestMessageList","setInterval","methods","onClickLeft","$router","push","handleJump","item","localStorage","setItem","username","partyid","sessionStorage","setTimeout","handleJump2","path","title","$toast","$t","then","res","module","type","status","pageSize","pageNum","totalElements","elements","length","forEach","regex","matches","content","match","storeName","complaintReason","creditScore","console","log","count","unMounted","clearInterval"],"sources":["src/page/messageList/index.vue"],"sourcesContent":["<template>\n    <div class=\"service-box\">\n        <van-nav-bar safe-area-inset-top :title=\"$t('消息列表')\" left-arrow @click-left=\"onClickLeft\" fixed ref=\"header\">\n        </van-nav-bar>\n        <div style=\"width: 100%;\" class=\"h46\"></div>\n\n        <div class=\"notify\" v-if=\"itemName == 'EShop'\">\n            <div class=\"img1\">\n                <img src=\"@/assets/image/lingdang.png\" alt=\"\">\n            </div>\n            <div class=\"content\" @click=\"handleJump2('/message/notify')\">\n                <span>{{ $t('系统消息') }}</span>\n                <span class=\"nowrap\" v-if=\"notifyInfo.title == 'Customer complaint success notification'\">\n                    {{\n                        $t('您的投诉的{storeName}，投诉原因：{complaintReason}，经系统审核，情况属实，并扣除店铺信誉积分{creditScore}，感谢您反馈，给您带来的不便，还请谅解！',\n                            {\n                                storeName: notifyInfo.storeName,\n                                complaintReason: $t(notifyInfo.complaintReason),\n                                creditScore: notifyInfo.creditScore\n                            }) }}\n                </span>\n                <span class=\"nowrap\" v-if=\"notifyInfo.title == 'Customer complaint rejection notification'\">\n                    {{ $t('您的投诉的{storeName}，投诉原因：{complaintReason}，经系统审核被驳回，驳回理由：{rejectionReason}', {\n                        storeName: notifyInfo.storeName,\n                        complaintReason: $t(notifyInfo.complaintReason),\n                        rejectionReason: notifyInfo.creditScore\n                    }) }}\n                </span>\n                <span v-if=\"!notifyInfo?.title\">--</span>\n            </div>\n            <div class=\"time\">\n                {{ !notifyInfo?.title ? '' : shourtTimeString(notifyInfo.reserveSendTime) }}\n                <span class=\"unreadmsg\" v-if=\"unreadCount != 0\">\n                    {{ unreadCount > 9 ? '9+' : unreadCount }}\n                </span>\n                <span class=\"unreadmsg\" style=\"opacity: 0;\" v-else></span>\n            </div>\n        </div>\n        <div class=\"message\" v-for=\"item of messageList\" :key=\"item.uid\" @click=\"handleJump(item)\">\n            <div class=\"img\">\n                <img :src=\"item.avatar\" alt=\"\">\n            </div>\n            <div class=\"content\">\n                <span style=\"font-weight: 400;\">{{ item.username }}</span>\n                <span class=\"nowrap\">{{ item.content.at(0) == \"{\" ? $t(\"图片信息\") : item.content }}</span>\n                <!-- 卡片信息 -->\n            </div>\n            <div class=\"time\">\n                {{ shourtTimeString(item.updatetime) }}\n                <span class=\"unreadmsg\" v-if=\"item.unreadmsg != 0\">\n                    {{ item.unreadmsg > 9 ? '9+' : item.unreadmsg }}\n                </span>\n                <span class=\"unreadmsg\" style=\"opacity: 0;\" v-else></span>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { apiMessageList, apiSystemMessage, apiUnreadSystemMessage } from '@/API/common'\nimport { shourtTimeString } from '@/utils/utis'\nexport default {\n    name: \"CustomerService\",\n    data() {\n        return {\n            itemName: process.env.VUE_APP_ITEM_NAME,\n            messageList: [],\n            shourtTimeString,\n            notifyInfo: {},\n            timer: null,\n            unreadCount: 0\n        };\n    },\n    mounted() {\n        if (this.itemName == 'EShop') {\n            this.requestSystemMessage()\n            this.requestUnreadSystemMessage()\n        }\n        this.requestMessageList()\n        this.timer = setInterval(() => {\n            this.requestMessageList()\n        }, 5000)\n    },\n    methods: {\n        onClickLeft() {\n            // 返回\n            this.$router.push('/');\n        },\n        handleJump(item) {\n            localStorage.setItem(\"storeName\", item.username)\n            localStorage.setItem(\"sellerId\", item.partyid)\n            sessionStorage.setItem(\"shopName\", item.username)\n            sessionStorage.setItem(\"sellerId\", item.partyid)\n            setTimeout(() => {\n                this.$router.push(`/customerService2`)\n            }, 200)\n        },\n        handleJump2(path) {\n            if (!this.notifyInfo?.title) return this.$toast(this.$t('暂无系统消息'))\n            this.$router.push(path)\n        },\n        requestMessageList() {\n            apiMessageList().then(res => {\n                this.messageList = res\n            })\n        },\n        // pageSize=10&pageNum=1&totalElements=-1&type=3&status=0&module=1&token=4b0179022cf04ad99322b54b34c71ec8&tz=Asia%2FShanghai&lang=cn\n        requestSystemMessage() {\n            apiSystemMessage({\n                module: 0,\n                type: 3,\n                status: 0,\n                pageSize: 1,\n                pageNum: 1,\n                totalElements: -1,\n            }).then(res => {\n                if (res.elements.length == 0) {\n                    this.notifyInfo = {}\n                    return\n                }\n                res.elements.forEach((item) => {\n                    if (item.title == 'Customer complaint success notification') {\n                        const regex = /The (.*) that you complained, the reason for the complaint: (.*), after review by the system, the situation is true, and the store reputation points (\\d+) will be deducted./;\n                        const matches = item.content.match(regex);\n                        const storeName = matches[1];\n                        let complaintReason = matches[2];\n                        const creditScore = matches[3];\n                        if (complaintReason == 'No delivery for a long time') {\n                            complaintReason = '长时间不发货'\n                        } else if (complaintReason == 'seller’s poor service attitude') {\n                            complaintReason = '卖家服务态度恶劣'\n                        } else if (complaintReason == 'seller’s transaction fraud') {\n                            complaintReason = '卖家交易欺诈'\n                        } else if (complaintReason == 'seller’s failure to fulfill promises') {\n                            complaintReason = '卖家承诺不履行'\n                        } else if (complaintReason == 'other') {\n                            complaintReason = '其他'\n                        }\n                        item.complaintReason = complaintReason;\n                        item.creditScore = creditScore;\n                        item.storeName = storeName;\n                    } else if (item.title == 'Customer complaint rejection notification') {\n                        const regex = /The (.*) that you complained, the reason for the complaint: (.*), was rejected after review by the system, the reason for rejection: (.*)/\n                        const matches = item.content.match(regex);\n                        const storeName = matches[1];\n                        let complaintReason = matches[2];\n                        const creditScore = matches[3];\n                        if (complaintReason == 'No delivery for a long time') {\n                            complaintReason = '长时间不发货'\n                        } else if (complaintReason == 'seller’s poor service attitude') {\n                            complaintReason = '卖家服务态度恶劣'\n                        } else if (complaintReason == 'seller’s transaction fraud') {\n                            complaintReason = '卖家交易欺诈'\n                        } else if (complaintReason == 'seller’s failure to fulfill promises') {\n                            complaintReason = '卖家承诺不履行'\n                        } else if (complaintReason == 'other') {\n                            complaintReason = '其他'\n                        }\n                        item.complaintReason = complaintReason;\n                        item.creditScore = creditScore;\n                        item.storeName = storeName;\n                    }\n                })\n                this.notifyInfo = res.elements[0]\n                console.log(`this.notifyInfo ::->`, this.notifyInfo);\n            })\n        },\n        // 查询未读系统通知\n        requestUnreadSystemMessage() {\n            apiUnreadSystemMessage({\n                type: 3,\n                module: '0',\n            }).then(res => {\n                this.unreadCount = res.count\n            })\n        }\n    },\n    unMounted() {\n        clearInterval(this.timer)\n    }\n};\n</script>\n<style lang=\"scss\" scoped>\n.message,\n.notify {\n    width: 100%;\n    height: 77px;\n    display: flex;\n    align-items: center;\n    padding: 0 15px;\n    border-bottom: 1px solid #F4F6F9;\n\n    .img1 {\n        width: 40px;\n        height: 40px;\n        background: var(--main-color);\n        border-radius: 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 30px;\n            height: 30px;\n            border-radius: 50%;\n        }\n    }\n\n    .img {\n        width: 40px;\n        height: 40px;\n        background: #ccc;\n        border-radius: 50%;\n        flex: 0 0 40px;\n\n        img {\n            width: 100%;\n            height: 100%;\n            border-radius: 50%;\n        }\n    }\n\n    .content {\n        margin-left: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        width: 240px;\n        flex: 0 0 240px;\n\n        span {\n            &:nth-child(1) {\n                font-weight: 600;\n                font-size: 14px;\n            }\n\n            &:nth-child(2) {\n                margin-top: 3px;\n                font-size: 12px;\n                color: #999;\n            }\n        }\n    }\n\n    .time {\n        margin-left: 10px;\n        flex: 0 0 60px;\n        font-size: 10px;\n        color: #777;\n        display: flex;\n        flex-direction: column-reverse;\n        justify-content: center;\n        align-items: center;\n        .unreadmsg {\n            width: 20px;\n            height: 20px;\n            padding: 2px;\n            background: #E64E41;\n            border-radius: 50%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            color: #fff;\n            font-size: 10px;\n            transform: scale(.8);\n        }\n    }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}