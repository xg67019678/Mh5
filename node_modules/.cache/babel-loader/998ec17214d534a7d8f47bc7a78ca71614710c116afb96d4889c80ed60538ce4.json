{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Vue from 'vue';\nimport VanDialog from './Dialog';\nimport { isServer } from '../utils';\nvar instance;\nfunction isInDocument(element) {\n  return document.body.contains(element);\n}\nfunction initInstance() {\n  if (instance) {\n    instance.$destroy();\n  }\n  instance = new (Vue.extend(VanDialog))({\n    el: document.createElement('div'),\n    // avoid missing animation when first rendered\n    propsData: {\n      lazyRender: false\n    }\n  });\n  instance.$on('input', function (value) {\n    instance.value = value;\n  });\n}\nfunction Dialog(options) {\n  /* istanbul ignore if */\n  if (isServer) {\n    return Promise.resolve();\n  }\n  return new Promise(function (resolve, reject) {\n    if (!instance || !isInDocument(instance.$el)) {\n      initInstance();\n    }\n    _extends(instance, Dialog.currentOptions, options, {\n      resolve: resolve,\n      reject: reject\n    });\n  });\n}\nDialog.defaultOptions = {\n  value: true,\n  title: '',\n  width: '',\n  theme: null,\n  message: '',\n  overlay: true,\n  className: '',\n  allowHtml: true,\n  lockScroll: true,\n  transition: 'van-dialog-bounce',\n  beforeClose: null,\n  overlayClass: '',\n  overlayStyle: null,\n  messageAlign: '',\n  getContainer: 'body',\n  cancelButtonText: '',\n  cancelButtonColor: null,\n  confirmButtonText: '',\n  confirmButtonColor: null,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false,\n  callback: function callback(action) {\n    instance[action === 'confirm' ? 'resolve' : 'reject'](action);\n  }\n};\nDialog.alert = Dialog;\nDialog.confirm = function (options) {\n  return Dialog(_extends({\n    showCancelButton: true\n  }, options));\n};\nDialog.close = function () {\n  if (instance) {\n    instance.value = false;\n  }\n};\nDialog.setDefaultOptions = function (options) {\n  _extends(Dialog.currentOptions, options);\n};\nDialog.resetDefaultOptions = function () {\n  Dialog.currentOptions = _extends({}, Dialog.defaultOptions);\n};\nDialog.resetDefaultOptions();\nDialog.install = function () {\n  Vue.use(VanDialog);\n};\nDialog.Component = VanDialog;\nVue.prototype.$dialog = Dialog;\nexport default Dialog;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}