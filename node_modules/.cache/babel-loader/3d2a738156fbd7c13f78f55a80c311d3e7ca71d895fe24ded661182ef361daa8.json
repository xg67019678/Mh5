{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"core-js/modules/es.array.push.js\";\nimport Vcode from \"vue-puzzle-vcode\";\nimport { getIdcode } from '@/API/common';\nimport { saveEmail } from '@/API/user';\nexport default {\n  name: 'BindEmail',\n  components: {\n    Vcode\n  },\n  data() {\n    return {\n      img1: require('@/assets/image/slider/1.png'),\n      img2: require('@/assets/image/slider/2.png'),\n      img3: require('@/assets/image/slider/3.png'),\n      img4: require('@/assets/image/slider/4.png'),\n      img5: require('@/assets/image/slider/5.png'),\n      triangleDown: require('@/assets/image/me/triangle_down.png'),\n      show: false,\n      codeBtnTxt: this.$t('收取验证码'),\n      count: 60,\n      interval: null,\n      btnDisabled: false,\n      formData: {\n        email: '',\n        verifcode: ''\n      }\n    };\n  },\n  methods: {\n    onClickLeft() {\n      this.$router.push({\n        path: '/Setting',\n        dir: 'left'\n      });\n    },\n    onSuccess() {\n      this.submitHandle();\n      this.show = false;\n    },\n    getCode() {\n      if (this.formData.email === '') {\n        _Toast(this.$t('请输入邮箱'));\n        return;\n      } else {\n        const reg = /^([A-Za-z0-9_\\-\\.\\w{3,}])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n        if (!reg.test(this.formData.email)) {\n          _Toast(this.$t('邮箱格式有误'));\n          return;\n        }\n      }\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('发送中'),\n        forbidClick: true\n      });\n      const params = {\n        target: this.formData.email\n      };\n      getIdcode(params).then(() => {\n        _Toast.clear();\n        _Toast.success(this.$t('发送成功'));\n        this.timerFn();\n      }).catch(err => {\n        _Toast.clear();\n        // Toast.fail(err.msg)\n      });\n    },\n    timerFn() {\n      this.codeBtnTxt = `${this.$t('再次获取')} ${this.count} s`;\n      this.btnDisabled = true;\n      this.interval = setInterval(() => {\n        if (this.count === 1) {\n          this.count = 60;\n          this.codeBtnTxt = this.$t('再次获取');\n          this.btnDisabled = false;\n          clearInterval(this.interval);\n        } else {\n          this.count -= 1;\n          this.codeBtnTxt = `${this.$t('再次获取')} ${this.count} s`;\n        }\n      }, 1000);\n    },\n    submitVertify() {\n      if (this.formData.email === '') {\n        _Toast(this.$t('请输入邮箱'));\n        return;\n      } else {\n        const reg = /^([A-Za-z0-9_\\-\\.\\w{3,}])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n        if (!reg.test(this.formData.email)) {\n          _Toast(this.$t('邮箱格式有误'));\n          return;\n        }\n      }\n      if (this.formData.verifcode === '') {\n        _Toast(this.$t('请输入验证码'));\n        return;\n      }\n      this.show = true;\n    },\n    submitHandle() {\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('提交中'),\n        forbidClick: true\n      });\n      const params = {\n        ...this.formData\n      };\n      saveEmail(params).then(async () => {\n        _Toast.success(this.$t('绑定成功'));\n        await this.$store.dispatch('getUserInfo');\n        this.onClickLeft();\n      }).catch(err => {\n        _Toast.clear();\n        // Toast.fail(err.msg)\n      });\n    }\n  }\n};","map":{"version":3,"names":["Vcode","getIdcode","saveEmail","name","components","data","img1","require","img2","img3","img4","img5","triangleDown","show","codeBtnTxt","$t","count","interval","btnDisabled","formData","email","verifcode","methods","onClickLeft","$router","push","path","dir","onSuccess","submitHandle","getCode","_Toast","reg","test","loading","duration","message","forbidClick","params","target","then","clear","success","timerFn","catch","err","setInterval","clearInterval","submitVertify","$store","dispatch"],"sources":["src/page/BindEmail/index.vue"],"sourcesContent":["<template>\n    <div class=\"page-content\" style=\"min-height: 100vh;\">\n        <Vcode :imgs=\"[img1, img2, img3, img4, img5]\" :show=\"show\" @success=\"onSuccess\" :canvasHeight=\"200\" style=\"direction: ltr;\"\n            @close=\"show = false;\" :sliderText=\"$t('拖动滑块以完成拼图')\" :successText=\"$t('验证通过!')\" :failText=\"$t('验证失败,请重试')\" />\n\n        <van-nav-bar safe-area-inset-top fixed :title=\" $t('邮箱绑定') \" left-arrow @click-left=\" onClickLeft \" />\n        <div style=\"width: 100%;\" class=\"h46\"></div>\n\n        <div class=\"form-content\">\n            <div class=\"form-item\">\n                <div class=\"title\">{{ $t('邮箱') }}</div>\n                <div class=\"input-content\">\n                    <el-input :placeholder=\" $t('请输入邮箱') \" maxlength=\"40\" v-model=\" formData.email \" clearable>\n                    </el-input>\n                </div>\n            </div>\n            <div class=\"form-item\">\n                <div class=\"title\">{{ $t('验证码') }}</div>\n                <div class=\"input-content code\">\n                    <el-input :placeholder=\" $t('请输入验证码') \" maxlength=\"6\" v-model=\" formData.verifcode \">\n                    </el-input>\n                    <div class=\"btn\" :class=\" { 'disabled': btnDisabled } \" @click=\" getCode \">{{ codeBtnTxt }}</div>\n                </div>\n            </div>\n            <div class=\"submit-btn\" @click=\" submitVertify \">{{ $t('提交') }}</div>\n        </div>\n\n    </div>\n</template>\n\n<script>\nimport { Toast } from \"vant\";\nimport Vcode from \"vue-puzzle-vcode\";\nimport {\n    getIdcode\n} from '@/API/common'\nimport {\n    saveEmail\n} from '@/API/user'\nexport default {\n    name: 'BindEmail',\n    components: {\n        Vcode\n    },\n    data() {\n        return {\n            img1: require('@/assets/image/slider/1.png'),\n            img2: require('@/assets/image/slider/2.png'),\n            img3: require('@/assets/image/slider/3.png'),\n            img4: require('@/assets/image/slider/4.png'),\n            img5: require('@/assets/image/slider/5.png'),\n            triangleDown: require('@/assets/image/me/triangle_down.png'),\n            show: false,\n            codeBtnTxt: this.$t('收取验证码'),\n            count: 60,\n            interval: null,\n            btnDisabled: false,\n            formData: {\n                email: '',\n                verifcode: ''\n            }\n        }\n    },\n    methods: {\n        onClickLeft() {\n            this.$router.push({ path: '/Setting', dir: 'left' })\n        },\n\n        onSuccess() {\n            this.submitHandle()\n            this.show = false\n        },\n\n        getCode() {\n            if (this.formData.email === '') {\n                Toast(this.$t('请输入邮箱'));\n                return\n            } else {\n                const reg = /^([A-Za-z0-9_\\-\\.\\w{3,}])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\n                if (!reg.test(this.formData.email)) {\n                    Toast(this.$t('邮箱格式有误'));\n                    return;\n                }\n            }\n\n            Toast.loading({\n                duration: 0,\n                message: this.$t('发送中'),\n                forbidClick: true,\n            })\n\n            const params = {\n                target: this.formData.email\n            }\n\n            getIdcode(params).then(() => {\n                Toast.clear()\n                Toast.success(this.$t('发送成功'))\n                this.timerFn()\n            }).catch(err => {\n                Toast.clear()\n                // Toast.fail(err.msg)\n            })\n        },\n\n        timerFn() {\n            this.codeBtnTxt = `${this.$t('再次获取')} ${this.count} s`\n            this.btnDisabled = true\n            this.interval = setInterval(() => {\n                if (this.count === 1) {\n                    this.count = 60\n                    this.codeBtnTxt = this.$t('再次获取')\n                    this.btnDisabled = false\n                    clearInterval(this.interval)\n                } else {\n                    this.count -= 1\n                    this.codeBtnTxt = `${this.$t('再次获取')} ${this.count} s`\n                }\n            }, 1000)\n        },\n\n        submitVertify() {\n            if (this.formData.email === '') {\n                Toast(this.$t('请输入邮箱'));\n                return\n            } else {\n                const reg = /^([A-Za-z0-9_\\-\\.\\w{3,}])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\n                if (!reg.test(this.formData.email)) {\n                    Toast(this.$t('邮箱格式有误'));\n                    return;\n                }\n            }\n\n            if (this.formData.verifcode === '') {\n                Toast(this.$t('请输入验证码'));\n                return\n            }\n\n            this.show = true\n        },\n\n        submitHandle() {\n            Toast.loading({\n                duration: 0,\n                message: this.$t('提交中'),\n                forbidClick: true,\n            })\n\n            const params = {\n                ...this.formData\n            }\n            saveEmail(params).then(async () => {\n                Toast.success(this.$t('绑定成功'))\n                await this.$store.dispatch('getUserInfo')\n                this.onClickLeft()\n            }).catch(err => {\n                Toast.clear()\n                // Toast.fail(err.msg)\n            })\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.page-content {\n    * {\n        box-sizing: border-box;\n    }\n\n    /deep/ .el-input {\n        input:focus {\n            border-color: var(--main-color) !important;\n        }\n    }\n\n    .form-content {\n        padding: 0 15px;\n\n        .form-item {\n            >.title {\n                font-size: 14px;\n                line-height: 16px;\n                color: #333333;\n                margin-top: 25px;\n                margin-bottom: 10px;\n            }\n\n            >.input-content {\n                /deep/ .el-input-group--prepend {\n                    .el-input-group__prepend {\n                        background-color: transparent !important;\n                        color: #000 !important;\n                        border-right: none !important;\n                        padding: 0 15px !important;\n\n                        .icon {\n                            width: 10px;\n                            height: auto;\n                            position: relative;\n                            top: -1px;\n                            margin-left: 5px;\n                        }\n                    }\n\n                    .el-input__inner {\n                        border-left-color: #fff;\n                    }\n                }\n\n                &.code {\n                    position: relative;\n\n                    >.btn {\n                        padding: 0 20px;\n                        height: 40px;\n                        position: absolute;\n                        right: 0;\n                        bottom: 0;\n                        font-size: 14px;\n                        color: var(--main-color);\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n\n                        &.disabled {\n                            pointer-events: none;\n                            opacity: 0.9;\n                        }\n                    }\n                }\n            }\n        }\n\n        .submit-btn {\n            margin-top: 40px;\n            width: 345px;\n            height: 44px;\n            background: var(--main-color);\n            border-radius: 4px;\n            font-style: normal;\n            font-weight: 400;\n            font-size: 16px;\n            line-height: 44px;\n            text-align: center;\n            color: #FFFFFF;\n        }\n    }\n}\n</style>\n"],"mappings":";;;AAgCA,OAAAA,KAAA;AACA,SACAC,SAAA,QACA;AACA,SACAC,SAAA,QACA;AACA;EACAC,IAAA;EACAC,UAAA;IACAJ;EACA;EACAK,KAAA;IACA;MACAC,IAAA,EAAAC,OAAA;MACAC,IAAA,EAAAD,OAAA;MACAE,IAAA,EAAAF,OAAA;MACAG,IAAA,EAAAH,OAAA;MACAI,IAAA,EAAAJ,OAAA;MACAK,YAAA,EAAAL,OAAA;MACAM,IAAA;MACAC,UAAA,OAAAC,EAAA;MACAC,KAAA;MACAC,QAAA;MACAC,WAAA;MACAC,QAAA;QACAC,KAAA;QACAC,SAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;QAAAC,GAAA;MAAA;IACA;IAEAC,UAAA;MACA,KAAAC,YAAA;MACA,KAAAhB,IAAA;IACA;IAEAiB,QAAA;MACA,SAAAX,QAAA,CAAAC,KAAA;QACAW,MAAA,MAAAhB,EAAA;QACA;MACA;QACA,MAAAiB,GAAA;QACA,KAAAA,GAAA,CAAAC,IAAA,MAAAd,QAAA,CAAAC,KAAA;UACAW,MAAA,MAAAhB,EAAA;UACA;QACA;MACA;MAEAgB,MAAA,CAAAG,OAAA;QACAC,QAAA;QACAC,OAAA,OAAArB,EAAA;QACAsB,WAAA;MACA;MAEA,MAAAC,MAAA;QACAC,MAAA,OAAApB,QAAA,CAAAC;MACA;MAEAnB,SAAA,CAAAqC,MAAA,EAAAE,IAAA;QACAT,MAAA,CAAAU,KAAA;QACAV,MAAA,CAAAW,OAAA,MAAA3B,EAAA;QACA,KAAA4B,OAAA;MACA,GAAAC,KAAA,CAAAC,GAAA;QACAd,MAAA,CAAAU,KAAA;QACA;MACA;IACA;IAEAE,QAAA;MACA,KAAA7B,UAAA,WAAAC,EAAA,iBAAAC,KAAA;MACA,KAAAE,WAAA;MACA,KAAAD,QAAA,GAAA6B,WAAA;QACA,SAAA9B,KAAA;UACA,KAAAA,KAAA;UACA,KAAAF,UAAA,QAAAC,EAAA;UACA,KAAAG,WAAA;UACA6B,aAAA,MAAA9B,QAAA;QACA;UACA,KAAAD,KAAA;UACA,KAAAF,UAAA,WAAAC,EAAA,iBAAAC,KAAA;QACA;MACA;IACA;IAEAgC,cAAA;MACA,SAAA7B,QAAA,CAAAC,KAAA;QACAW,MAAA,MAAAhB,EAAA;QACA;MACA;QACA,MAAAiB,GAAA;QACA,KAAAA,GAAA,CAAAC,IAAA,MAAAd,QAAA,CAAAC,KAAA;UACAW,MAAA,MAAAhB,EAAA;UACA;QACA;MACA;MAEA,SAAAI,QAAA,CAAAE,SAAA;QACAU,MAAA,MAAAhB,EAAA;QACA;MACA;MAEA,KAAAF,IAAA;IACA;IAEAgB,aAAA;MACAE,MAAA,CAAAG,OAAA;QACAC,QAAA;QACAC,OAAA,OAAArB,EAAA;QACAsB,WAAA;MACA;MAEA,MAAAC,MAAA;QACA,QAAAnB;MACA;MACAjB,SAAA,CAAAoC,MAAA,EAAAE,IAAA;QACAT,MAAA,CAAAW,OAAA,MAAA3B,EAAA;QACA,WAAAkC,MAAA,CAAAC,QAAA;QACA,KAAA3B,WAAA;MACA,GAAAqB,KAAA,CAAAC,GAAA;QACAd,MAAA,CAAAU,KAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}