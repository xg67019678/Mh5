{"ast":null,"code":"function isWindow(val) {\n  return val === window;\n} // get nearest scroll element\n// https://github.com/vant-ui/vant/issues/3823\n\nvar overflowScrollReg = /scroll|auto|overlay/i;\nexport function getScroller(el, root) {\n  if (root === void 0) {\n    root = window;\n  }\n  var node = el;\n  while (node && node.tagName !== 'HTML' && node.tagName !== 'BODY' && node.nodeType === 1 && node !== root) {\n    var _window$getComputedSt = window.getComputedStyle(node),\n      overflowY = _window$getComputedSt.overflowY;\n    if (overflowScrollReg.test(overflowY)) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n  return root;\n}\nexport function getScrollTop(el) {\n  var top = 'scrollTop' in el ? el.scrollTop : el.pageYOffset; // iOS scroll bounce cause minus scrollTop\n\n  return Math.max(top, 0);\n}\nexport function setScrollTop(el, value) {\n  if ('scrollTop' in el) {\n    el.scrollTop = value;\n  } else {\n    el.scrollTo(el.scrollX, value);\n  }\n}\nexport function getRootScrollTop() {\n  return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n}\nexport function setRootScrollTop(value) {\n  setScrollTop(window, value);\n  setScrollTop(document.body, value);\n} // get distance from element top to page top or scroller top\n\nexport function getElementTop(el, scroller) {\n  if (isWindow(el)) {\n    return 0;\n  }\n  var scrollTop = scroller ? getScrollTop(scroller) : getRootScrollTop();\n  return el.getBoundingClientRect().top + scrollTop;\n}\nexport function getVisibleHeight(el) {\n  if (isWindow(el)) {\n    return el.innerHeight;\n  }\n  return el.getBoundingClientRect().height;\n}\nexport function getVisibleTop(el) {\n  if (isWindow(el)) {\n    return 0;\n  }\n  return el.getBoundingClientRect().top;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}