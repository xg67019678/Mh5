{"ast":null,"code":"import { createNamespace, isDef } from '../utils';\nimport Info from '../info';\nvar _createNamespace = createNamespace('tab'),\n  createComponent = _createNamespace[0],\n  bem = _createNamespace[1];\nexport default createComponent({\n  props: {\n    dot: Boolean,\n    type: String,\n    info: [Number, String],\n    color: String,\n    title: String,\n    isActive: Boolean,\n    disabled: Boolean,\n    scrollable: Boolean,\n    activeColor: String,\n    inactiveColor: String\n  },\n  computed: {\n    style: function style() {\n      var style = {};\n      var color = this.color,\n        isActive = this.isActive;\n      var isCard = this.type === 'card'; // card theme color\n\n      if (color && isCard) {\n        style.borderColor = color;\n        if (!this.disabled) {\n          if (isActive) {\n            style.backgroundColor = color;\n          } else {\n            style.color = color;\n          }\n        }\n      }\n      var titleColor = isActive ? this.activeColor : this.inactiveColor;\n      if (titleColor) {\n        style.color = titleColor;\n      }\n      return style;\n    }\n  },\n  methods: {\n    onClick: function onClick() {\n      this.$emit('click');\n    },\n    genText: function genText() {\n      var h = this.$createElement;\n      var Text = h(\"span\", {\n        \"class\": bem('text', {\n          ellipsis: !this.scrollable\n        })\n      }, [this.slots() || this.title]);\n      if (this.dot || isDef(this.info) && this.info !== '') {\n        return h(\"span\", {\n          \"class\": bem('text-wrapper')\n        }, [Text, h(Info, {\n          \"attrs\": {\n            \"dot\": this.dot,\n            \"info\": this.info\n          }\n        })]);\n      }\n      return Text;\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    return h(\"div\", {\n      \"attrs\": {\n        \"role\": \"tab\",\n        \"aria-selected\": this.isActive\n      },\n      \"class\": [bem({\n        active: this.isActive,\n        disabled: this.disabled\n      })],\n      \"style\": this.style,\n      \"on\": {\n        \"click\": this.onClick\n      }\n    }, [this.genText()]);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}