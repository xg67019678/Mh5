{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/empty/style\";\nimport _Empty from \"vant/es/empty\";\nimport \"vant/es/icon/style\";\nimport _Icon from \"vant/es/icon\";\nimport \"vant/es/list/style\";\nimport _List from \"vant/es/list\";\nimport \"vant/es/search/style\";\nimport _Search from \"vant/es/search\";\nimport \"vant/es/pull-refresh/style\";\nimport _PullRefresh from \"vant/es/pull-refresh\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport GoodsContentOne from \"@/components/GoodsContentOne/index.vue\";\nimport ShopContentTwo from \"@/components/ShopContentTwo/index.vue\";\nimport { mapGetters } from \"vuex\";\nimport debounce from \"lodash.debounce\";\nimport { searchKeyword, searchKeywordGoods, searchSeller } from \"@/API/common\";\n// import { formatData } from \"@/utils/utis\";\nexport default {\n  name: \"Search\",\n  components: {\n    [_PullRefresh.name]: _PullRefresh,\n    [_Search.name]: _Search,\n    [_List.name]: _List,\n    [_Icon.name]: _Icon,\n    [_Empty.name]: _Empty,\n    [_Toast.name]: _Toast,\n    GoodsContentOne,\n    ShopContentTwo\n  },\n  data() {\n    return {\n      searchIcon: require(\"@/assets/image/index/sousuo.png\"),\n      clearIcon: require(\"@/assets/image/index/shanchu.png\"),\n      keyword: \"\",\n      tipsShow: false,\n      tipsData: [],\n      shopData: [],\n      shopShow: false,\n      listData: [],\n      listShow: false,\n      listLoading: false,\n      loading: false,\n      finished: false,\n      refreshing: false,\n      pageNum: 1,\n      pageSize: 20,\n      currentGoodsId: null,\n      searchHistory1: [],\n      searckLock: false\n    };\n  },\n  computed: {\n    ...mapGetters({\n      searchHistory: \"searchHistory\",\n      activeLang: \"language\"\n    })\n  },\n  watch: {\n    $route(to, from) {\n      if (to.path == \"CommodityDetails\") {\n        sessionStorage.setItem(\"searchList\", this.listData);\n      }\n      if (from.path == \"CommodityDetails\") {\n        this.listData = sessionStorage.getItem(\"searchList\");\n      }\n    }\n  },\n  mounted() {\n    // console.log(\"this.$router ->\", this.$router);\n    this.searchHistory1 = JSON.parse(localStorage.getItem(\"searchHistory1\")) || [];\n    this.searchHistory1 = [...new Set(this.searchHistory1)];\n  },\n  methods: {\n    onRefresh() {\n      this.finished = false;\n      this.pageNum = 1;\n      this.loading = true;\n      this.onLoad();\n    },\n    onLoad() {\n      if (this.refreshing) {\n        this.list = [];\n        this.refreshing = false;\n      }\n      this.getListData();\n    },\n    getListData() {\n      if (this.currentGoodsId) {\n        searchKeywordGoods({\n          goodsId: this.currentGoodsId,\n          pageNum: this.pageNum,\n          pageSize: this.pageSize\n        }).then(res => {\n          const {\n            pageList\n          } = res;\n          this.listData = this.pageNum === 1 ? pageList : [...this.listData, ...pageList];\n          this.pageNum++;\n          this.loading = false;\n          if (pageList.length < this.pageSize) {\n            this.finished = true;\n          }\n          this.listLoading = false;\n          _Toast.clear();\n        }).catch(() => {\n          this.loading = false;\n          this.listLoading = false;\n          _Toast.clear();\n        });\n      } else {\n        this.listLoading = false;\n        this.finished = true;\n        _Toast.clear();\n        this.listData = [];\n      }\n    },\n    tipsHandle(data, isShop) {\n      _Toast.loading({\n        duration: 0,\n        message: this.$t(\"加载中\")\n      });\n      if (typeof data == \"string\") {\n        this.keyword = data;\n        this.searchHandle();\n        return;\n      }\n      let keyword = String(this.keyword).trim();\n      // keyword = keyword.replace(/'/g, \"\\\\'\");\n      if (isShop) {\n        this.shopShow = true;\n        this.tipsShow = false;\n        this.listShow = false;\n        this.searchHistory1.unshift(data.keyword);\n        this.searchHistory1 = [...new Set(this.searchHistory1)];\n        localStorage.setItem(\"searchHistory1\", JSON.stringify(this.searchHistory1));\n        searchSeller({\n          keyword,\n          isHot: \"0\",\n          isPrice: \"0\",\n          isNew: \"0\"\n        }).then(res => {\n          this.shopData = res.sellerList;\n          _Toast.clear();\n        });\n      } else {\n        this.searchHistory1.unshift(data.name);\n        this.searchHistory1 = [...new Set(this.searchHistory1)];\n        localStorage.setItem(\"searchHistory1\", JSON.stringify(this.searchHistory1));\n        this.listShow = true;\n        this.tipsShow = false;\n        this.shopShow = false;\n        this.keyword = data.name;\n        this.currentGoodsId = data.goodsId;\n        this.$store.dispatch(\"setSearchHistory\", {\n          name: data.name,\n          goodsId: data.goodsId\n        });\n        _Toast.loading({\n          duration: 0,\n          message: this.$t(\"加载中\")\n        });\n        this.pageNum = 1;\n        this.finished = false;\n        this.loading = true;\n        this.listLoading = true;\n        this.refreshing = true;\n        this.listData = [];\n        this.onLoad();\n      }\n    },\n    clearHandle() {\n      this.tipsShow = false;\n      this.listShow = false;\n      this.shopShow = false;\n      this.keyword = \"\";\n    },\n    inputHandle: debounce(function () {\n      this.searchHandle();\n    }, 1000),\n    searchView() {\n      if (this.searckLock) return;\n      this.searckLock = true;\n      setTimeout(() => {\n        this.searckLock = false;\n      }, 3000);\n      if (this.keyword.trim() == \"\") return this.$notify(this.$t('请输入搜索内容'), \"warning\");\n      _Toast.loading({\n        duration: 0,\n        message: this.$t(\"加载中\")\n      });\n      this.listData = [];\n      this.tipsShow = false;\n      this.listShow = true;\n      this.shopShow = false;\n      this.searchHistory1.unshift(this.keyword.trim());\n      this.searchHistory1 = [...new Set(this.searchHistory1)];\n      localStorage.setItem(\"searchHistory1\", JSON.stringify(this.searchHistory1));\n      let keyword = String(this.keyword).trim();\n      let lang = localStorage.getItem(\"lang\");\n      lang = lang.replace(/\"/g, \"\");\n      searchKeyword({\n        keyword,\n        lang,\n        discount: this.$route.query.discount || 0\n      }).then(res => {\n        const {\n          pageList,\n          pageInfo\n        } = res;\n        this.listData = pageList;\n        _Toast.clear();\n      });\n    },\n    // 搜索商品\n    searchHandle() {\n      let keyword = String(this.keyword).trim();\n      // keyword = keyword.replace(/'/g, \"\\\\'\");\n\n      if (keyword == \"\") {\n        this.tipsData = [];\n        _Toast(this.$t(\"请输入搜索内容\"));\n      }\n      this.tipsShow = true;\n      this.listShow = false;\n      this.shopShow = false;\n      if (keyword) {\n        // this.searchHistory1.unshift(keyword);\n        // this.searchHistory1 = [...new Set(this.searchHistory1)];\n        // localStorage.setItem(\n        //   \"searchHistory1\",\n        //   JSON.stringify(this.searchHistory1)\n        // );\n        this.tipsData = [];\n        let lang = localStorage.getItem(\"lang\");\n        lang = lang.replace(/\"/g, \"\");\n        searchSeller({\n          keyword,\n          lang,\n          discount: this.$route.query.discount || 0\n        }).then(res => {\n          // const { goodsList, sellerList } = res\n          const {\n            goodsList,\n            pageInfo\n          } = res;\n          //   if (!goodsList.length) {\n          //     Toast(\n          //       `${this.$t(\"未找到与\")}${keyword}${this.$t(\"相关的商品\")}`\n          //     );\n          //   }\n          const shopItem = {\n            keyword,\n            name: `\"${keyword}\" ${this.$t(\"相关的店铺\")}`,\n            isShop: true\n          };\n          this.listData = goodsList;\n          this.tipsData = [shopItem, ...goodsList];\n          _Toast.clear();\n        }).catch(err => {\n          // Toast(err.message)\n          _Toast.clear();\n        });\n      } else {\n        this.tipsShow = false;\n        this.listShow = false;\n        this.shopShow = false;\n      }\n    },\n    emptyHandle() {\n      this.$store.dispatch(\"clearSearchHistory\");\n      localStorage.removeItem(\"searchHistory1\");\n      this.searchHistory1 = [];\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}