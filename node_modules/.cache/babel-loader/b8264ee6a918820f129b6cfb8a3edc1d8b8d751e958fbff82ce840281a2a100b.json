{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { createNamespace } from '../utils';\nimport { ParentMixin } from '../mixins/relation';\nimport { BORDER_TOP_BOTTOM } from '../utils/constant';\nvar _createNamespace = createNamespace('collapse'),\n  createComponent = _createNamespace[0],\n  bem = _createNamespace[1];\nexport default createComponent({\n  mixins: [ParentMixin('vanCollapse')],\n  props: {\n    accordion: Boolean,\n    value: [String, Number, Array],\n    border: {\n      type: Boolean,\n      default: true\n    }\n  },\n  methods: {\n    switch: function _switch(name, expanded) {\n      if (!this.accordion) {\n        name = expanded ? this.value.concat(name) : this.value.filter(function (activeName) {\n          return activeName !== name;\n        });\n      }\n      this.$emit('change', name);\n      this.$emit('input', name);\n    }\n  },\n  render: function render() {\n    var _ref;\n    var h = arguments[0];\n    return h(\"div\", {\n      \"class\": [bem(), (_ref = {}, _ref[BORDER_TOP_BOTTOM] = this.border, _ref)]\n    }, [this.slots()]);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}