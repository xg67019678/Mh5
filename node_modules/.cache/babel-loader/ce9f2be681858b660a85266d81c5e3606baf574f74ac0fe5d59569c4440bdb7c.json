{"ast":null,"code":"import \"vant/es/notify/style\";\nimport _Notify from \"vant/es/notify\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '@/router/router.js';\nimport i18n from \"@/i18n\";\nimport multiItem from '../store/modules/multiItem';\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n// 配置 环境的接口地址\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/wap' : process.env.VUE_APP_BASE_URL + 'wap';\n// 创建\nconst request = axios.create({\n  baseURL: process.env.VUE_APP_IS_APP ? multiItem.state[process.env.VUE_APP_ITEM_NAME].app_url + '/wap' : BASE_URL,\n  timeout: 100000,\n  // 超时时间\n  //   withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json;charset=UTF-8'\n  }\n  //   transformRequest: [function(data) {\n  //     return data\n  //   }]\n});\n\n// 拦截请求\nrequest.interceptors.request.use(config => {\n  if (config.loading) {\n    _Toast.loading({\n      duration: 0,\n      forbidClick: true\n    });\n  }\n  if (!config.params) {\n    // 放在哪里\n    config.params = {};\n  }\n  if (localStorage.getItem('token')) {\n    config.params['token'] = localStorage.getItem('token');\n  }\n  if (!config.params.lang) {\n    // if (i18n.i18n.locale == 'en') {\n    //     config.params['lang'] = 'en'\n    // } else if (i18n.i18n.locale == 'cn') {\n    //     config.params['lang'] = 'cn'\n    // } else if (i18n.i18n.locale == 'tw') {\n    //     config.params['lang'] = 'tw'\n    // }\n    config.params['lang'] = i18n.i18n.locale;\n  }\n  return config;\n}, error => {\n  Promise.reject(error);\n});\n\n/**\n * 烤猫, [7/27/2022 9:08 PM]\n * 0 成功\n1 直接显示\n105 直接提示“当前还需交易“ + 返回的金额值 + ”,才可提币\"\n401 是需要实名认证，问客户”未实名认证，是否认证？\"\n403 无登录信息，跳转登录页面\n506 \"帐户异常需要进行C3认证，请联系在线客服。\"\n */\n\n// 拦截响应\nrequest.interceptors.response.use(res => {\n  // 200开头的\n  if (res.config.loading) {\n    _Toast.clear();\n  }\n  const {\n    code,\n    data,\n    msg\n  } = res.data;\n  switch (code / 1) {\n    case 0:\n      return Promise.resolve(data);\n    case 403:\n      localStorage.removeItem('token');\n      if (router.currentRoute.path !== '/me') {\n        router.push({\n          path: '/login'\n        });\n      }\n      return Promise.resolve('err403');\n    default:\n      _Notify({\n        type: 'danger',\n        message: i18n.i18n.t(msg)\n      });\n      return Promise.reject(res.data);\n  }\n}, error => {\n  if (error && error.response) {\n    switch (error.response.status) {\n      case 400:\n        error.message = '请求错误';\n        break;\n      case 401:\n        error.message = '未授权，请登录';\n        break;\n      case 403:\n        error.message = '拒绝访问';\n        break;\n      case 404:\n        error.message = `请求地址不存在: ${error.response.config.url}`;\n        break;\n      case 408:\n        error.message = '请求超时';\n        break;\n      case 500:\n        error.message = '服务器内部错误';\n        break;\n      case 501:\n        error.message = '服务未实现';\n        break;\n      case 502:\n        error.message = '网关错误';\n        break;\n      case 503:\n        error.message = '服务不可用';\n        break;\n      case 504:\n        error.message = '网关超时';\n        break;\n      case 505:\n        error.message = 'HTTP版本不受支持';\n        break;\n      default:\n        //     error.message = Toast.fail({\n        //     // icon: 'none',\n        //     // message: i18n.t(msg)\n        //     message: i18n.t('网络波动请刷新页面')\n        //   });\n        if (error.config.url.indexOf('app_domain_link') > -1) return;\n        _Notify({\n          type: 'danger',\n          message: i18n.i18n.t('网络波动请刷新页面')\n        });\n        // Promise.reject(error)\n        break;\n    }\n  }\n  // eslint-disable-next-line prefer-promise-reject-errors\n  if (error.config.url.indexOf('app_domain_link') > -1) return;\n  return Promise.reject(error);\n});\nexport default request;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}