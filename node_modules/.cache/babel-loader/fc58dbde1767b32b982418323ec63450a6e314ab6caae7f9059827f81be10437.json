{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/icon/style\";\nimport _Icon from \"vant/es/icon\";\nimport \"vant/es/loading/style\";\nimport _Loading from \"vant/es/loading\";\nimport \"vant/es/uploader/style\";\nimport _Uploader from \"vant/es/uploader\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { mapGetters } from 'vuex';\nimport { apiSellerComplain } from '@/API/common';\nimport { uploadimg } from '@/API/commodity';\nimport { isLogin } from \"@/utils/utis\";\nexport default {\n  components: {\n    [_Uploader.name]: _Uploader,\n    [_Loading.name]: _Loading,\n    [_Icon.name]: _Icon\n  },\n  data() {\n    return {\n      itemName: process.env.VUE_APP_ITEM_NAME,\n      formData: {\n        reason: '',\n        images: [],\n        type: ''\n      },\n      complaintType: [{\n        label: '长时间不发货',\n        value: 1\n      }, {\n        label: '卖家服务态度恶劣',\n        value: 2\n      }, {\n        label: '卖家交易欺诈',\n        value: 3\n      }, {\n        label: '卖家承诺不履行',\n        value: 4\n      }, {\n        label: '其他',\n        value: 0\n      }],\n      pwtStatus: false,\n      rules: {\n        type: [{\n          required: true,\n          message: this.$t('请选择投诉类型'),\n          trigger: 'change'\n        }],\n        reason: [{\n          required: true,\n          message: this.$t('请输入投诉原因'),\n          trigger: 'blur'\n        }],\n        images: [{\n          required: true,\n          message: this.$t('请上传截图、凭证'),\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  created() {\n    if (!isLogin()) {\n      // Dialog.confirm({\n      //     title: this.$t(\"您还未登录\"),\n      //     message: this.$t(\"是否跳转到登录页面\"),\n      //     confirmButtonText: this.$t(\"确认\"),\n      //     cancelButtonText: this.$t(\"取消\"),\n      // }).then(() => {\n      //     this.$router.push('/login')\n      // });\n      this.$notifyWarn(this.$t(\"请先登录\"));\n      this.$router.push(\"/login\");\n      return false;\n    }\n  },\n  computed: {\n    ...mapGetters({\n      userInfo: 'userInfo'\n    })\n  },\n  methods: {\n    onClickLeft() {\n      this.$router.go(-1);\n    },\n    handleUpload(data) {\n      if (Array.isArray(data)) {\n        data = data[0];\n      }\n      if (data.size > 4000 * 1024) {\n        _Toast(this.$t(\"图片大小不能超过{num}\", {\n          num: '4MB'\n        }));\n        return false;\n      }\n      _Toast.loading({\n        duration: 0,\n        message: this.$t(\"上传中\"),\n        forbidClick: true\n      });\n      let formData = new FormData(); //通过formdata上传\n      formData.append(\"file\", data);\n      formData.append(\"moduleName\", \"selle\");\n      uploadimg(formData).then(data => {\n        _Toast.clear();\n        this.formData.images.push(data);\n      }).catch(() => {\n        _Toast.clear();\n        _Toast(this.$t(\"失败\"));\n        this.formData.images = [];\n      });\n    },\n    // 提交\n    submitForm() {\n      if (this.formData.reason.trim().length == 0) {\n        this.$notify(this.$t('请输入投诉原因'));\n        return;\n      }\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          _Toast.loading({\n            duration: 0,\n            forbidClick: true\n          });\n          const params = {\n            sellerId: this.$route.query.sellerId,\n            complaintStatus: this.formData.type,\n            content: this.formData.reason\n          };\n          this.formData.images.forEach((item, index) => {\n            params[`imgUrl${index + 1}`] = item;\n          });\n          apiSellerComplain(params).then(res => {\n            this.formData.reason = '';\n            this.formData.type = '';\n            this.formData.images = [];\n            this.$notify(this.$t('提交成功'), 'success');\n            setTimeout(() => {\n              this.$router.back();\n            }, 1000);\n            _Toast.clear();\n          }).catch(err => {\n            console.log(`err ::->`, err);\n            _Toast.clear();\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    // 删除图片\n    deteleImage(index) {\n      this.formData.images.splice(index, 1);\n    },\n    // 限制表情输入\n    limitEmoji(val) {\n      this.formData.reason = val.replace(/\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F]/g, '');\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","apiSellerComplain","uploadimg","isLogin","components","_Uploader","name","_Loading","_Icon","data","itemName","process","env","VUE_APP_ITEM_NAME","formData","reason","images","type","complaintType","label","value","pwtStatus","rules","required","message","$t","trigger","created","$notifyWarn","$router","push","computed","userInfo","methods","onClickLeft","go","handleUpload","Array","isArray","size","_Toast","num","loading","duration","forbidClick","FormData","append","then","clear","catch","submitForm","trim","length","$notify","$refs","ruleForm","validate","valid","params","sellerId","$route","query","complaintStatus","content","forEach","item","index","res","setTimeout","back","err","console","log","deteleImage","splice","limitEmoji","val","replace"],"sources":["src/page/complaint/index.vue"],"sourcesContent":["<template>\n    <div class=\"complaint\">\n        <van-nav-bar safe-area-inset-top fixed :title=\"$t('投诉卖家')\" left-arrow @click-left=\"onClickLeft\" />\n        <div style=\"width: 100%;\" class=\"h46\"></div>\n        <el-form label-position=\"top\" label-width=\"80px\" :model=\"formData\" :rules=\"rules\" ref=\"ruleForm\" class=\"acc_form\">\n            <el-form-item :label=\"$t('投诉类型')\" prop=\"type\">\n                <el-select v-model=\"formData.type\" :placeholder=\"$t('请选择投诉类型')\">\n                    <el-option v-for=\"type of complaintType\" :key=\"type.value\" :label=\"$t(type.label)\" :value=\"type.value\">\n                    </el-option>\n                </el-select>\n            </el-form-item>\n            <el-form-item :label=\"$t('截图、凭证')\" prop=\"images\">\n                <div class=\"img_box\">\n                    <div class=\"img_wrap\" v-for=\"(path, index) of formData.images\" :key=\"index\" >\n                        <van-image class=\"img\" :src=\"path\">\n                            <template v-slot:loading>\n                                <van-loading type=\"spinner\" size=\"20\" />\n                            </template>\n                        </van-image>\n                        <van-icon v-if=\"path\" @click=\"deteleImage(index)\" class=\"close_icon\" name=\"cross\" />\n                    </div>\n                    <van-uploader :max-size=\"500 * 1024\" v-show=\"formData.images.length < 9\" :max-count=\"1\" :before-read=\"handleUpload\"\n                        multiple />\n                </div>\n            </el-form-item>\n            <el-form-item :label=\"$t('投诉原因')\" prop=\"reason\">\n                <el-input maxlength=\"255\" @input=\"limitEmoji\" type=\"textarea\" :autosize=\"{ minRows: 6, maxRows: 8 }\"\n                    v-model=\"formData.reason\"></el-input>\n            </el-form-item>\n        </el-form>\n        <div class=\"sub_btn\" @click=\"submitForm\">{{ $t('提交') }}</div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { Uploader, Toast, Loading, Icon } from 'vant'\nimport { apiSellerComplain } from '@/API/common'\nimport { uploadimg } from '@/API/commodity'\nimport { isLogin } from \"@/utils/utis\";\n\nexport default {\n    components: {\n        [Uploader.name]: Uploader,\n        [Loading.name]: Loading,\n        [Icon.name]: Icon,\n    },\n    data() {\n        return {\n            itemName: process.env.VUE_APP_ITEM_NAME,\n            formData: {\n                reason: '',\n                images: [],\n                type: ''\n            },\n            complaintType: [\n                {\n                    label: '长时间不发货',\n                    value: 1\n                },\n                {\n                    label: '卖家服务态度恶劣',\n                    value: 2\n                },\n                {\n                    label: '卖家交易欺诈',\n                    value: 3\n                },\n                {\n                    label: '卖家承诺不履行',\n                    value: 4\n                },\n                {\n                    label: '其他',\n                    value: 0\n                }\n            ],\n            pwtStatus: false,\n            rules: {\n                type: [\n                    { required: true, message: this.$t('请选择投诉类型'), trigger: 'change' }\n                ],\n                reason: [\n                    { required: true, message: this.$t('请输入投诉原因'), trigger: 'blur' }\n                ],\n                images: [\n                    { required: true, message: this.$t('请上传截图、凭证'), trigger: 'change' }\n                ]\n            }\n        }\n    },\n    created() {\n        if (!isLogin()) {\n            // Dialog.confirm({\n            //     title: this.$t(\"您还未登录\"),\n            //     message: this.$t(\"是否跳转到登录页面\"),\n            //     confirmButtonText: this.$t(\"确认\"),\n            //     cancelButtonText: this.$t(\"取消\"),\n            // }).then(() => {\n            //     this.$router.push('/login')\n            // });\n            this.$notifyWarn(this.$t(\"请先登录\"));\n            this.$router.push(\"/login\");\n            return false;\n        }\n    },\n    computed: {\n        ...mapGetters({\n            userInfo: 'userInfo'\n        })\n    },\n    methods: {\n        onClickLeft() {\n            this.$router.go(-1)\n        },\n        handleUpload(data) {\n            if(Array.isArray(data)) {\n                data = data[0]\n            }\n            if (data.size > 4000 * 1024) {\n                Toast(this.$t(\"图片大小不能超过{num}\", { num: '4MB' }))\n                return false\n            }\n            Toast.loading({\n                duration: 0,\n                message: this.$t(\"上传中\"),\n                forbidClick: true,\n            });\n            let formData = new FormData(); //通过formdata上传\n            formData.append(\"file\", data);\n            formData.append(\"moduleName\", \"selle\");\n            uploadimg(formData)\n                .then((data) => {\n                    Toast.clear();\n                    this.formData.images.push(data)\n                })\n                .catch(() => {\n                    Toast.clear();\n                    Toast(this.$t(\"失败\"));\n                    this.formData.images = [];\n                });\n        },\n        // 提交\n        submitForm() {\n            if (this.formData.reason.trim().length == 0) {\n                this.$notify(this.$t('请输入投诉原因'))\n                return\n            }\n            this.$refs.ruleForm.validate((valid) => {\n                if (valid) {\n                    Toast.loading({\n                        duration: 0,\n                        forbidClick: true,\n                    });\n                    const params = {\n                        sellerId: this.$route.query.sellerId,\n                        complaintStatus: this.formData.type,\n                        content: this.formData.reason\n                    }\n                    this.formData.images.forEach((item, index) => {\n                        params[`imgUrl${index + 1}`] = item\n                    })\n                    apiSellerComplain(params).then(res => {\n                        this.formData.reason = ''\n                        this.formData.type = ''\n                        this.formData.images = []\n                        this.$notify(this.$t('提交成功'), 'success')\n                        setTimeout(() => {\n                            this.$router.back()\n                        }, 1000)\n                        Toast.clear();\n                    }).catch(err => {\n                        console.log(`err ::->`, err);\n                        Toast.clear();\n                    })\n                } else {\n                    console.log('error submit!!');\n                    return false;\n                }\n            });\n        },\n        // 删除图片\n        deteleImage(index) {\n            this.formData.images.splice(index, 1)\n        },\n        // 限制表情输入\n        limitEmoji(val) {\n            this.formData.reason = val.replace(/\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F]/g, '')\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.complaint {\n    padding-bottom: 30px;\n}\n\n.acc_form {\n    padding: 0 15px;\n\n    :deep(.el-form-item__label) {\n        padding: 0 !important;\n        font-weight: 600;\n        font-size: 16px;\n        color: #333;\n    }\n}\n\n:deep(.van-uploader__upload) {\n    width: 105px !important;\n    height: 105px !important;\n}\n\n:deep(.van-uploader__preview) {\n    width: 105px !important;\n    height: 105px !important;\n\n    .van-image {\n        width: 100%;\n        height: 100%;\n    }\n}\n\n.el-form-item {\n    display: flex;\n    flex-direction: column;\n}\n\n:deep(input) {\n    padding-right: 60px;\n}\n\n.sub_btn {\n    margin: 15px 15px;\n    margin-top: 56px;\n    background: var(--main-color);\n    border-radius: 4px;\n    height: 44px;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 44px;\n    text-align: center;\n    color: #FFFFFF;\n}\n</style>\n<style lang=\"scss\">\n.van-dialog__message {\n    padding-top: 20px;\n    line-height: 25px;\n    border: none;\n}\n\n.van-dialog__footer {\n    padding: 0 15px 30px 15px;\n\n    &::after {\n        display: none;\n    }\n\n    button {\n        border: none;\n        border-radius: 8px;\n\n        &:nth-child(1) {\n            border: 1px solid #999999;\n            margin-right: 10px;\n        }\n\n        &:nth-child(2) {\n            background: #DA3231;\n            color: #FFFFFF !important;\n        }\n\n        &::before {\n            display: none;\n        }\n\n        &::after {\n            display: none;\n        }\n    }\n}\n\n.el-select {\n    width: 100% !important;\n}\n\n.img_box {\n    display: flex;\n    flex-wrap: wrap;\n\n    .img_wrap {\n        position: relative;\n\n        .img {\n            width: 105px;\n            height: 105px;\n            margin-right: 10px;\n            margin-bottom: 10px;\n        }\n\n        .close_icon {\n            position: absolute;\n            top: 2px;\n            right: 20px;\n            z-index: 9;\n            width: 8px;\n            height: 8px;\n        }\n    }\n\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}