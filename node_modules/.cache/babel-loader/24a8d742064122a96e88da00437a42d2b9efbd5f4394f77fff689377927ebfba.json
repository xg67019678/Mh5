{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/nav-bar/style\";\nimport _NavBar from \"vant/es/nav-bar\";\nimport { apiRefreshAvatar } from \"@/API/common\";\nexport default {\n  components: {\n    [_NavBar.name]: _NavBar\n  },\n  data() {\n    return {\n      current: 1\n    };\n  },\n  mounted() {\n    this.current = this.$route.query?.avatar || 1;\n  },\n  methods: {\n    selectAvatar(item) {\n      this.current = item;\n      // this.$emit('selectAvatar', item)\n    },\n    async submitHandle() {\n      _Toast.loading({\n        duration: 0,\n        forbidClick: true,\n        message: \"\"\n      });\n      await apiRefreshAvatar({\n        idx: this.current\n      });\n      _Toast.clear();\n      this.$router.go(-1);\n    }\n  }\n};","map":{"version":3,"names":["apiRefreshAvatar","components","_NavBar","name","data","current","mounted","$route","query","avatar","methods","selectAvatar","item","submitHandle","_Toast","loading","duration","forbidClick","message","idx","clear","$router","go"],"sources":["src/page/avatarSelection/index.vue"],"sourcesContent":["<template>\n    <div class=\"avatar_wrap\">\n        <van-nav-bar safe-area-inset-top fixed :title=\"$t('选择头像')\" :right-text=\"$t('保存')\" left-arrow @click-left=\"$router.go(-1)\"\n            @click-right=\"submitHandle\" />\n        <div style=\"width: 100%; height: 46px\"></div>\n        <div class=\"avatar_box\">\n            <div class=\"image\" v-for=\"item of 20\" :key=\"item\">\n                <img :src=\"require(`@/assets/image/avatar/${item}.png`)\" @click=\"selectAvatar(item)\" class=\"avatar\" alt=\"\">\n                <div class=\"active\" v-if=\"item == current\">\n                    <img src=\"@/assets/image/dui.png\" class=\"icon\" alt=\"\">\n                </div>\n            </div>\n\n        </div>\n    </div>\n</template>\n\n<script>\nimport { NavBar, Toast } from \"vant\";\nimport { apiRefreshAvatar } from \"@/API/common\";\nexport default {\n    components: {\n        [NavBar.name]: NavBar,\n    },\n    data() {\n        return {\n            current: 1\n        }\n    },\n    mounted() {\n        this.current = this.$route.query?.avatar || 1\n    },\n    methods: {\n        selectAvatar(item) {\n            this.current = item\n            // this.$emit('selectAvatar', item)\n        },\n        async submitHandle() {\n            Toast.loading({\n                duration: 0,\n                forbidClick: true,\n                message: \"\"\n            });\n            await apiRefreshAvatar({ idx: this.current })\n            Toast.clear();\n            this.$router.go(-1)\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.avatar_box {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-between;\n    padding: 30px 19px;\n\n    .image {\n        position: relative;\n        border-radius: 50%;\n        margin-right: 25px;\n        margin-bottom: 25px;\n\n        &:nth-child(4n) {\n            margin-right: 0;\n        }\n\n        .active {\n            width: 20px;\n            height: 20px;\n            background: var(--main-color);\n            position: absolute;\n            bottom: 2px;\n            right: 2px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            border-radius: 50%;\n            border: 1px solid #fff;\n\n            .icon {\n                width: 8px;\n                height: 10px;\n            }\n        }\n    }\n\n    .avatar {\n        width: 64px;\n        height: 64px;\n        border-radius: 50%;\n\n\n\n    }\n}\n</style>"],"mappings":";;;;AAmBA,SAAAA,gBAAA;AACA;EACAC,UAAA;IACA,CAAAC,OAAA,CAAAC,IAAA,GAAAD;EACA;EACAE,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAD,OAAA,QAAAE,MAAA,CAAAC,KAAA,EAAAC,MAAA;EACA;EACAC,OAAA;IACAC,aAAAC,IAAA;MACA,KAAAP,OAAA,GAAAO,IAAA;MACA;IACA;IACA,MAAAC,aAAA;MACAC,MAAA,CAAAC,OAAA;QACAC,QAAA;QACAC,WAAA;QACAC,OAAA;MACA;MACA,MAAAlB,gBAAA;QAAAmB,GAAA,OAAAd;MAAA;MACAS,MAAA,CAAAM,KAAA;MACA,KAAAC,OAAA,CAAAC,EAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}