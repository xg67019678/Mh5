{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { apiSystemMessage, apiReadSystemMessage } from '@/API/common';\nimport { shourtTimeString } from '@/utils/utis';\nexport default {\n  name: \"CustomerService\",\n  data() {\n    return {\n      messageList: [],\n      shourtTimeString,\n      notifyList: [],\n      pageNum: 1\n    };\n  },\n  mounted() {\n    this.requestSystemMessage();\n  },\n  methods: {\n    onClickLeft() {\n      this.$router.back();\n    },\n    handleJump(item) {\n      localStorage.setItem(\"storeName\", item.username);\n      localStorage.setItem(\"sellerId\", item.partyid);\n      setTimeout(() => {\n        this.$router.push(`/customerService2`);\n      }, 200);\n    },\n    readMessage(item) {\n      if (item.status != 1) return;\n      apiReadSystemMessage({\n        ids: item.id\n      }).then(res => {\n        this.notifyList.forEach(item2 => {\n          if (item2.id == item.id) {\n            item2.status = 2;\n          }\n        });\n      });\n    },\n    requestSystemMessage() {\n      apiSystemMessage({\n        module: 0,\n        type: 3,\n        status: 0,\n        pageSize: 100,\n        pageNum: this.pageNum,\n        totalElements: -1\n      }).then(res => {\n        res.elements.forEach(item => {\n          if (item.title == 'Customer complaint success notification') {\n            const regex = /The (.*) that you complained, the reason for the complaint: (.*), after review by the system, the situation is true, and the store reputation points (\\d+) will be deducted./;\n            const matches = item.content.match(regex);\n            const storeName = matches[1];\n            let complaintReason = matches[2];\n            const creditScore = matches[3];\n            if (complaintReason == 'No delivery for a long time') {\n              complaintReason = '长时间不发货';\n            } else if (complaintReason == 'The seller has a bad service attitude') {\n              complaintReason = '卖家服务态度恶劣';\n            } else if (complaintReason == 'Seller transaction fraud') {\n              complaintReason = '卖家交易欺诈';\n            } else if (complaintReason == 'The seller fails to fulfill his promise') {\n              complaintReason = '卖家承诺不履行';\n            } else if (complaintReason == 'other') {\n              complaintReason = '其他';\n            }\n            item.complaintReason = complaintReason;\n            item.creditScore = creditScore;\n            item.storeName = storeName;\n          } else if (item.title == 'Customer complaint rejection notification') {\n            const regex = /The (.*) that you complained, the reason for the complaint: (.*), was rejected after review by the system, the reason for rejection: (.*)/;\n            const matches = item.content.match(regex);\n            const storeName = matches[1];\n            let complaintReason = matches[2];\n            const creditScore = matches[3];\n            if (complaintReason == 'No delivery for a long time') {\n              complaintReason = '长时间不发货';\n            } else if (complaintReason == 'The seller has a bad service attitude') {\n              complaintReason = '卖家服务态度恶劣';\n            } else if (complaintReason == 'Seller transaction fraud') {\n              complaintReason = '卖家交易欺诈';\n            } else if (complaintReason == 'The seller fails to fulfill his promise') {\n              complaintReason = '卖家承诺不履行';\n            } else if (complaintReason == 'other') {\n              complaintReason = '其他';\n            }\n            item.complaintReason = complaintReason;\n            item.creditScore = creditScore;\n            item.storeName = storeName;\n          }\n        });\n        this.notifyList = [...this.notifyList, ...res.elements];\n      });\n    }\n  }\n};","map":{"version":3,"names":["apiSystemMessage","apiReadSystemMessage","shourtTimeString","name","data","messageList","notifyList","pageNum","mounted","requestSystemMessage","methods","onClickLeft","$router","back","handleJump","item","localStorage","setItem","username","partyid","setTimeout","push","readMessage","status","ids","id","then","res","forEach","item2","module","type","pageSize","totalElements","elements","title","regex","matches","content","match","storeName","complaintReason","creditScore"],"sources":["src/page/messageList/notify.vue"],"sourcesContent":["<template>\n    <div class=\"service-box\">\n        <van-nav-bar safe-area-inset-top :title=\"$t('系统消息')\" left-arrow @click-left=\"onClickLeft\" fixed ref=\"header\">\n        </van-nav-bar>\n        <div style=\"width: 100%;\" class=\"h46\"></div>\n\n        <div class=\"box\">\n            <div class=\"notify\" v-for=\"item of notifyList\" :key=\"item.id\" @click=\"readMessage(item)\">\n                <div class=\"content\">\n                    <span class=\"title\">\n                        <!-- {{ $t('投诉{status}通知', {\n                            status: item.title == 'Customer complaint success notification' ? $t('成功') : $t('拒绝')\n                        }) }} -->\n                        <div class=\"tips\" v-if=\"item.status == 1\"></div>\n                        {{ $t('店铺投诉通知') }}\n                    </span>\n                    <span class=\"mt-10\">\n                        <span v-if=\"item.title == 'Customer complaint success notification'\">\n                            {{\n                                $t('您的投诉的{storeName}，投诉原因：{complaintReason}，经系统审核，情况属实，并扣除店铺信誉积分{creditScore}，感谢您反馈，给您带来的不便，还请谅解！',\n                                    {\n                                        storeName: item.storeName,\n                                        complaintReason: $t(item.complaintReason),\n                                        creditScore: item.creditScore\n                                    }) }}\n                        </span>\n                        <span v-if=\"item.title == 'Customer complaint rejection notification'\">\n                            {{ $t('您的投诉的{storeName}，投诉原因：{complaintReason}，经系统审核被驳回，驳回理由：{rejectionReason}', {\n                                storeName: item.storeName,\n                                complaintReason: $t(item.complaintReason),\n                                rejectionReason: item.creditScore\n                            }) }}\n                        </span>\n                    </span>\n                    <span class=\"time\">{{ item.reserveSendTime }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { apiSystemMessage, apiReadSystemMessage } from '@/API/common'\nimport { shourtTimeString } from '@/utils/utis'\nexport default {\n    name: \"CustomerService\",\n    data() {\n        return {\n            messageList: [],\n            shourtTimeString,\n            notifyList: [],\n            pageNum: 1,\n        };\n    },\n\n    mounted() {\n        this.requestSystemMessage()\n\n    },\n    methods: {\n        onClickLeft() {\n            this.$router.back()\n        },\n        handleJump(item) {\n            localStorage.setItem(\"storeName\", item.username)\n            localStorage.setItem(\"sellerId\", item.partyid)\n            setTimeout(() => {\n                this.$router.push(`/customerService2`)\n            }, 200)\n        },\n        readMessage(item) {\n            if(item.status != 1) return;\n            apiReadSystemMessage({\n                ids: item.id,\n            }).then(res => {\n                this.notifyList.forEach((item2) => {\n                    if (item2.id == item.id) {\n                        item2.status = 2;\n                    }\n                })\n            })\n        },\n        requestSystemMessage() {\n            apiSystemMessage({\n                module: 0,\n                type: 3,\n                status: 0,\n                pageSize: 100,\n                pageNum: this.pageNum,\n                totalElements: -1,\n            }).then(res => {\n                res.elements.forEach((item) => {\n                    if (item.title == 'Customer complaint success notification') {\n                        const regex = /The (.*) that you complained, the reason for the complaint: (.*), after review by the system, the situation is true, and the store reputation points (\\d+) will be deducted./;\n                        const matches = item.content.match(regex);\n                        const storeName = matches[1];\n                        let complaintReason = matches[2];\n                        const creditScore = matches[3];\n                        if (complaintReason == 'No delivery for a long time') {\n                            complaintReason = '长时间不发货'\n                        } else if (complaintReason == 'The seller has a bad service attitude') {\n                            complaintReason = '卖家服务态度恶劣'\n                        } else if (complaintReason == 'Seller transaction fraud') {\n                            complaintReason = '卖家交易欺诈'\n                        } else if (complaintReason == 'The seller fails to fulfill his promise') {\n                            complaintReason = '卖家承诺不履行'\n                        } else if (complaintReason == 'other') {\n                            complaintReason = '其他'\n                        }\n                        item.complaintReason = complaintReason;\n                        item.creditScore = creditScore;\n                        item.storeName = storeName;\n                    } else if (item.title == 'Customer complaint rejection notification') {\n                        const regex = /The (.*) that you complained, the reason for the complaint: (.*), was rejected after review by the system, the reason for rejection: (.*)/\n                        const matches = item.content.match(regex);\n                        const storeName = matches[1];\n                        let complaintReason = matches[2];\n                        const creditScore = matches[3];\n                        if (complaintReason == 'No delivery for a long time') {\n                            complaintReason = '长时间不发货'\n                        } else if (complaintReason == 'The seller has a bad service attitude') {\n                            complaintReason = '卖家服务态度恶劣'\n                        } else if (complaintReason == 'Seller transaction fraud') {\n                            complaintReason = '卖家交易欺诈'\n                        } else if (complaintReason == 'The seller fails to fulfill his promise') {\n                            complaintReason = '卖家承诺不履行'\n                        } else if (complaintReason == 'other') {\n                            complaintReason = '其他'\n                        }\n                        item.complaintReason = complaintReason;\n                        item.creditScore = creditScore;\n                        item.storeName = storeName;\n                    }\n                })\n                this.notifyList = [...this.notifyList, ...res.elements]\n\n            })\n        },\n    },\n};\n</script>\n<style lang=\"scss\" scoped>\n* {\n    box-sizing: border-box;\n}\n\n.box {\n    padding: 0 10px;\n}\n\n.notify {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    border: 1px solid #F4F6F9;\n    margin-top: 10px;\n    box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);\n\n    .img1 {\n        width: 40px;\n        height: 40px;\n        background: var(--main-color);\n        border-radius: 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 30px;\n            height: 30px;\n            border-radius: 50%;\n        }\n    }\n\n    .content {\n        margin-left: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n\n        .title {\n            font-weight: 600;\n            font-size: 14px;\n            color: #333;\n            display: flex;\n            align-items: center;\n            .tips {\n                width: 8px;\n                height: 8px;\n                border-radius: 50%;\n                background: #ff3e3e;\n                margin-right: 8px;\n            }\n        }\n\n        span {\n            font-size: 12px;\n            line-height: 1;\n            color: #7F7F7F;\n            word-break: break-all;\n        }\n    }\n\n    .time {\n        font-size: 12px;\n        color: #999;\n        margin-top: 5px;\n    }\n\n}\n</style>\n"],"mappings":";;;AA0CA,SAAAA,gBAAA,EAAAC,oBAAA;AACA,SAAAC,gBAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAH,gBAAA;MACAI,UAAA;MACAC,OAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,oBAAA;EAEA;EACAC,OAAA;IACAC,YAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,WAAAC,IAAA;MACAC,YAAA,CAAAC,OAAA,cAAAF,IAAA,CAAAG,QAAA;MACAF,YAAA,CAAAC,OAAA,aAAAF,IAAA,CAAAI,OAAA;MACAC,UAAA;QACA,KAAAR,OAAA,CAAAS,IAAA;MACA;IACA;IACAC,YAAAP,IAAA;MACA,IAAAA,IAAA,CAAAQ,MAAA;MACAtB,oBAAA;QACAuB,GAAA,EAAAT,IAAA,CAAAU;MACA,GAAAC,IAAA,CAAAC,GAAA;QACA,KAAArB,UAAA,CAAAsB,OAAA,CAAAC,KAAA;UACA,IAAAA,KAAA,CAAAJ,EAAA,IAAAV,IAAA,CAAAU,EAAA;YACAI,KAAA,CAAAN,MAAA;UACA;QACA;MACA;IACA;IACAd,qBAAA;MACAT,gBAAA;QACA8B,MAAA;QACAC,IAAA;QACAR,MAAA;QACAS,QAAA;QACAzB,OAAA,OAAAA,OAAA;QACA0B,aAAA;MACA,GAAAP,IAAA,CAAAC,GAAA;QACAA,GAAA,CAAAO,QAAA,CAAAN,OAAA,CAAAb,IAAA;UACA,IAAAA,IAAA,CAAAoB,KAAA;YACA,MAAAC,KAAA;YACA,MAAAC,OAAA,GAAAtB,IAAA,CAAAuB,OAAA,CAAAC,KAAA,CAAAH,KAAA;YACA,MAAAI,SAAA,GAAAH,OAAA;YACA,IAAAI,eAAA,GAAAJ,OAAA;YACA,MAAAK,WAAA,GAAAL,OAAA;YACA,IAAAI,eAAA;cACAA,eAAA;YACA,WAAAA,eAAA;cACAA,eAAA;YACA,WAAAA,eAAA;cACAA,eAAA;YACA,WAAAA,eAAA;cACAA,eAAA;YACA,WAAAA,eAAA;cACAA,eAAA;YACA;YACA1B,IAAA,CAAA0B,eAAA,GAAAA,eAAA;YACA1B,IAAA,CAAA2B,WAAA,GAAAA,WAAA;YACA3B,IAAA,CAAAyB,SAAA,GAAAA,SAAA;UACA,WAAAzB,IAAA,CAAAoB,KAAA;YACA,MAAAC,KAAA;YACA,MAAAC,OAAA,GAAAtB,IAAA,CAAAuB,OAAA,CAAAC,KAAA,CAAAH,KAAA;YACA,MAAAI,SAAA,GAAAH,OAAA;YACA,IAAAI,eAAA,GAAAJ,OAAA;YACA,MAAAK,WAAA,GAAAL,OAAA;YACA,IAAAI,eAAA;cACAA,eAAA;YACA,WAAAA,eAAA;cACAA,eAAA;YACA,WAAAA,eAAA;cACAA,eAAA;YACA,WAAAA,eAAA;cACAA,eAAA;YACA,WAAAA,eAAA;cACAA,eAAA;YACA;YACA1B,IAAA,CAAA0B,eAAA,GAAAA,eAAA;YACA1B,IAAA,CAAA2B,WAAA,GAAAA,WAAA;YACA3B,IAAA,CAAAyB,SAAA,GAAAA,SAAA;UACA;QACA;QACA,KAAAlC,UAAA,YAAAA,UAAA,KAAAqB,GAAA,CAAAO,QAAA;MAEA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}