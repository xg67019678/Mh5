{"ast":null,"code":"import { createNamespace } from '../utils';\nimport { TouchMixin } from '../mixins/touch';\nimport Loading from '../loading';\nimport DeleteIcon from './DeleteIcon';\nimport CollapseIcon from './CollapseIcon';\nvar _createNamespace = createNamespace('key'),\n  createComponent = _createNamespace[0],\n  bem = _createNamespace[1];\nexport default createComponent({\n  mixins: [TouchMixin],\n  props: {\n    type: String,\n    text: [Number, String],\n    color: String,\n    wider: Boolean,\n    large: Boolean,\n    loading: Boolean\n  },\n  data: function data() {\n    return {\n      active: false\n    };\n  },\n  mounted: function mounted() {\n    this.bindTouchEvent(this.$el);\n  },\n  methods: {\n    onTouchStart: function onTouchStart(event) {\n      // compatible with Vue 2.6 event bubble bug\n      event.stopPropagation();\n      this.touchStart(event);\n      this.active = true;\n    },\n    onTouchMove: function onTouchMove(event) {\n      this.touchMove(event);\n      if (this.direction) {\n        this.active = false;\n      }\n    },\n    onTouchEnd: function onTouchEnd(event) {\n      if (this.active) {\n        // eliminate tap delay on safari\n        // see: https://github.com/vant-ui/vant/issues/6836\n        if (!this.slots('default')) {\n          event.preventDefault();\n        }\n        this.active = false;\n        this.$emit('press', this.text, this.type);\n      }\n    },\n    genContent: function genContent() {\n      var h = this.$createElement;\n      var isExtra = this.type === 'extra';\n      var isDelete = this.type === 'delete';\n      var text = this.slots('default') || this.text;\n      if (this.loading) {\n        return h(Loading, {\n          \"class\": bem('loading-icon')\n        });\n      }\n      if (isDelete) {\n        return text || h(DeleteIcon, {\n          \"class\": bem('delete-icon')\n        });\n      }\n      if (isExtra) {\n        return text || h(CollapseIcon, {\n          \"class\": bem('collapse-icon')\n        });\n      }\n      return text;\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    return h(\"div\", {\n      \"class\": bem('wrapper', {\n        wider: this.wider\n      })\n    }, [h(\"div\", {\n      \"attrs\": {\n        \"role\": \"button\",\n        \"tabindex\": \"0\"\n      },\n      \"class\": bem([this.color, {\n        large: this.large,\n        active: this.active,\n        delete: this.type === 'delete'\n      }])\n    }, [this.genContent()])]);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}