{"ast":null,"code":"import { createNamespace } from '../utils';\nimport { BORDER } from '../utils/constant';\nimport { ChildrenMixin } from '../mixins/relation';\nimport Icon from '../icon';\nvar _createNamespace = createNamespace('step'),\n  createComponent = _createNamespace[0],\n  bem = _createNamespace[1];\nexport default createComponent({\n  mixins: [ChildrenMixin('vanSteps')],\n  computed: {\n    status: function status() {\n      if (this.index < this.parent.active) {\n        return 'finish';\n      }\n      if (this.index === +this.parent.active) {\n        return 'process';\n      }\n    },\n    active: function active() {\n      return this.status === 'process';\n    },\n    lineStyle: function lineStyle() {\n      var _this$parent = this.parent,\n        activeColor = _this$parent.activeColor,\n        inactiveColor = _this$parent.inactiveColor,\n        center = _this$parent.center,\n        direction = _this$parent.direction;\n      var style = {\n        background: this.status === 'finish' ? activeColor : inactiveColor\n      };\n      if (center && direction === 'vertical') {\n        style.top = '50%';\n      }\n      return style;\n    },\n    circleContainerStyle: function circleContainerStyle() {\n      if (this.parent.center && this.parent.direction === 'vertical') {\n        return {\n          top: '50%'\n        };\n      }\n    },\n    titleStyle: function titleStyle() {\n      if (this.active) {\n        return {\n          color: this.parent.activeColor\n        };\n      }\n      if (!this.status) {\n        return {\n          color: this.parent.inactiveColor\n        };\n      }\n    }\n  },\n  methods: {\n    genCircle: function genCircle() {\n      var h = this.$createElement;\n      var _this$parent2 = this.parent,\n        activeIcon = _this$parent2.activeIcon,\n        iconPrefix = _this$parent2.iconPrefix,\n        activeColor = _this$parent2.activeColor,\n        finishIcon = _this$parent2.finishIcon,\n        inactiveIcon = _this$parent2.inactiveIcon;\n      if (this.active) {\n        return this.slots('active-icon') || h(Icon, {\n          \"class\": bem('icon', 'active'),\n          \"attrs\": {\n            \"name\": activeIcon,\n            \"color\": activeColor,\n            \"classPrefix\": iconPrefix\n          }\n        });\n      }\n      var finishIconSlot = this.slots('finish-icon');\n      if (this.status === 'finish' && (finishIcon || finishIconSlot)) {\n        return finishIconSlot || h(Icon, {\n          \"class\": bem('icon', 'finish'),\n          \"attrs\": {\n            \"name\": finishIcon,\n            \"color\": activeColor,\n            \"classPrefix\": iconPrefix\n          }\n        });\n      }\n      var inactiveIconSlot = this.slots('inactive-icon');\n      if (inactiveIcon || inactiveIconSlot) {\n        return inactiveIconSlot || h(Icon, {\n          \"class\": bem('icon'),\n          \"attrs\": {\n            \"name\": inactiveIcon,\n            \"classPrefix\": iconPrefix\n          }\n        });\n      }\n      return h(\"i\", {\n        \"class\": bem('circle'),\n        \"style\": this.lineStyle\n      });\n    },\n    onClickStep: function onClickStep() {\n      this.parent.$emit('click-step', this.index);\n    }\n  },\n  render: function render() {\n    var _ref;\n    var h = arguments[0];\n    var status = this.status,\n      active = this.active;\n    var direction = this.parent.direction;\n    return h(\"div\", {\n      \"class\": [BORDER, bem([direction, (_ref = {}, _ref[status] = status, _ref)])]\n    }, [h(\"div\", {\n      \"class\": bem('title', {\n        active: active\n      }),\n      \"style\": this.titleStyle,\n      \"on\": {\n        \"click\": this.onClickStep\n      }\n    }, [this.slots()]), h(\"div\", {\n      \"class\": bem('circle-container'),\n      \"on\": {\n        \"click\": this.onClickStep\n      },\n      \"style\": this.circleContainerStyle\n    }, [this.genCircle()]), h(\"div\", {\n      \"class\": bem('line'),\n      \"style\": this.lineStyle\n    })]);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}