{"ast":null,"code":"import { isDef, createNamespace } from '../utils';\nimport { isNumeric } from '../utils/validate/number';\nvar _createNamespace = createNamespace('badge'),\n  createComponent = _createNamespace[0],\n  bem = _createNamespace[1];\nexport default createComponent({\n  props: {\n    dot: Boolean,\n    max: [Number, String],\n    color: String,\n    content: [Number, String],\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n  methods: {\n    hasContent: function hasContent() {\n      return !!(this.$scopedSlots.content || isDef(this.content) && this.content !== '');\n    },\n    renderContent: function renderContent() {\n      var dot = this.dot,\n        max = this.max,\n        content = this.content;\n      if (!dot && this.hasContent()) {\n        if (this.$scopedSlots.content) {\n          return this.$scopedSlots.content();\n        }\n        if (isDef(max) && isNumeric(content) && +content > max) {\n          return max + \"+\";\n        }\n        return content;\n      }\n    },\n    renderBadge: function renderBadge() {\n      var h = this.$createElement;\n      if (this.hasContent() || this.dot) {\n        return h(\"div\", {\n          \"class\": bem({\n            dot: this.dot,\n            fixed: !!this.$scopedSlots.default\n          }),\n          \"style\": {\n            background: this.color\n          }\n        }, [this.renderContent()]);\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    if (this.$scopedSlots.default) {\n      var tag = this.tag;\n      return h(tag, {\n        \"class\": bem('wrapper')\n      }, [this.$scopedSlots.default(), this.renderBadge()]);\n    }\n    return this.renderBadge();\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}