{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { apiSystemMessage, apiReadSystemMessage } from '@/API/common';\nimport { shourtTimeString } from '@/utils/utis';\nexport default {\n  name: \"CustomerService\",\n  data() {\n    return {\n      messageList: [],\n      shourtTimeString,\n      notifyList: [],\n      pageNum: 1\n    };\n  },\n  mounted() {\n    this.requestSystemMessage();\n  },\n  methods: {\n    onClickLeft() {\n      this.$router.back();\n    },\n    handleJump(item) {\n      localStorage.setItem(\"storeName\", item.username);\n      localStorage.setItem(\"sellerId\", item.partyid);\n      setTimeout(() => {\n        this.$router.push(`/customerService2`);\n      }, 200);\n    },\n    readMessage(item) {\n      if (item.status != 1) return;\n      apiReadSystemMessage({\n        ids: item.id\n      }).then(res => {\n        this.notifyList.forEach(item2 => {\n          if (item2.id == item.id) {\n            item2.status = 2;\n          }\n        });\n      });\n    },\n    requestSystemMessage() {\n      apiSystemMessage({\n        module: 0,\n        type: 3,\n        status: 0,\n        pageSize: 100,\n        pageNum: this.pageNum,\n        totalElements: -1\n      }).then(res => {\n        res.elements.forEach(item => {\n          if (item.title == 'Customer complaint success notification') {\n            const regex = /The (.*) that you complained, the reason for the complaint: (.*), after review by the system, the situation is true, and the store reputation points (\\d+) will be deducted./;\n            const matches = item.content.match(regex);\n            const storeName = matches[1];\n            let complaintReason = matches[2];\n            const creditScore = matches[3];\n            if (complaintReason == 'No delivery for a long time') {\n              complaintReason = '长时间不发货';\n            } else if (complaintReason == 'The seller has a bad service attitude') {\n              complaintReason = '卖家服务态度恶劣';\n            } else if (complaintReason == 'Seller transaction fraud') {\n              complaintReason = '卖家交易欺诈';\n            } else if (complaintReason == 'The seller fails to fulfill his promise') {\n              complaintReason = '卖家承诺不履行';\n            } else if (complaintReason == 'other') {\n              complaintReason = '其他';\n            }\n            item.complaintReason = complaintReason;\n            item.creditScore = creditScore;\n            item.storeName = storeName;\n          } else if (item.title == 'Customer complaint rejection notification') {\n            const regex = /The (.*) that you complained, the reason for the complaint: (.*), was rejected after review by the system, the reason for rejection: (.*)/;\n            const matches = item.content.match(regex);\n            const storeName = matches[1];\n            let complaintReason = matches[2];\n            const creditScore = matches[3];\n            if (complaintReason == 'No delivery for a long time') {\n              complaintReason = '长时间不发货';\n            } else if (complaintReason == 'The seller has a bad service attitude') {\n              complaintReason = '卖家服务态度恶劣';\n            } else if (complaintReason == 'Seller transaction fraud') {\n              complaintReason = '卖家交易欺诈';\n            } else if (complaintReason == 'The seller fails to fulfill his promise') {\n              complaintReason = '卖家承诺不履行';\n            } else if (complaintReason == 'other') {\n              complaintReason = '其他';\n            }\n            item.complaintReason = complaintReason;\n            item.creditScore = creditScore;\n            item.storeName = storeName;\n          }\n        });\n        this.notifyList = [...this.notifyList, ...res.elements];\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}