{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\n// Utils\nimport { createNamespace, addUnit } from '../utils';\nimport { inherit } from '../utils/functional'; // Types\n\nvar _createNamespace = createNamespace('loading'),\n  createComponent = _createNamespace[0],\n  bem = _createNamespace[1];\nfunction LoadingIcon(h, props) {\n  if (props.type === 'spinner') {\n    var Spin = [];\n    for (var i = 0; i < 12; i++) {\n      Spin.push(h(\"i\"));\n    }\n    return Spin;\n  }\n  return h(\"svg\", {\n    \"class\": bem('circular'),\n    \"attrs\": {\n      \"viewBox\": \"25 25 50 50\"\n    }\n  }, [h(\"circle\", {\n    \"attrs\": {\n      \"cx\": \"50\",\n      \"cy\": \"50\",\n      \"r\": \"20\",\n      \"fill\": \"none\"\n    }\n  })]);\n}\nfunction LoadingText(h, props, slots) {\n  if (slots.default) {\n    var _props$textColor;\n    var style = {\n      fontSize: addUnit(props.textSize),\n      color: (_props$textColor = props.textColor) != null ? _props$textColor : props.color\n    };\n    return h(\"span\", {\n      \"class\": bem('text'),\n      \"style\": style\n    }, [slots.default()]);\n  }\n}\nfunction Loading(h, props, slots, ctx) {\n  var color = props.color,\n    size = props.size,\n    type = props.type;\n  var style = {\n    color: color\n  };\n  if (size) {\n    var iconSize = addUnit(size);\n    style.width = iconSize;\n    style.height = iconSize;\n  }\n  return h(\"div\", _mergeJSXProps([{\n    \"class\": bem([type, {\n      vertical: props.vertical\n    }])\n  }, inherit(ctx, true)]), [h(\"span\", {\n    \"class\": bem('spinner', type),\n    \"style\": style\n  }, [LoadingIcon(h, props)]), LoadingText(h, props, slots)]);\n}\nLoading.props = {\n  color: String,\n  size: [Number, String],\n  vertical: Boolean,\n  textSize: [Number, String],\n  textColor: String,\n  type: {\n    type: String,\n    default: 'circular'\n  }\n};\nexport default createComponent(Loading);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}