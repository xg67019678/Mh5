{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { createNamespace } from '../utils';\nimport { FieldMixin } from '../mixins/field';\nimport { ParentMixin } from '../mixins/relation';\nvar _createNamespace = createNamespace('checkbox-group'),\n  createComponent = _createNamespace[0],\n  bem = _createNamespace[1];\nexport default createComponent({\n  mixins: [ParentMixin('vanCheckbox'), FieldMixin],\n  props: {\n    max: [Number, String],\n    disabled: Boolean,\n    direction: String,\n    iconSize: [Number, String],\n    checkedColor: String,\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.$emit('change', val);\n    }\n  },\n  methods: {\n    // @exposed-api\n    toggleAll: function toggleAll(options) {\n      if (options === void 0) {\n        options = {};\n      }\n      if (typeof options === 'boolean') {\n        options = {\n          checked: options\n        };\n      }\n      var _options = options,\n        checked = _options.checked,\n        skipDisabled = _options.skipDisabled;\n      var children = this.children.filter(function (item) {\n        if (item.disabled && skipDisabled) {\n          return item.checked;\n        }\n        return checked != null ? checked : !item.checked;\n      });\n      var names = children.map(function (item) {\n        return item.name;\n      });\n      this.$emit('input', names);\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    return h(\"div\", {\n      \"class\": bem([this.direction])\n    }, [this.slots()]);\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}