{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/icon/style\";\nimport _Icon from \"vant/es/icon\";\nimport \"core-js/modules/es.array.push.js\";\nimport Vcode from \"vue-puzzle-vcode\";\nimport NationalityList from '@/components/NationalityList';\nimport { registerNoVerifcode, justShopRegister, apiSendCode } from '@/API/user';\nimport { isLogin } from '@/utils/utis';\nexport default {\n  name: 'LoginPage',\n  components: {\n    [_Icon.name]: _Icon,\n    NationalityList,\n    Vcode\n  },\n  data() {\n    return {\n      isLogin,\n      isShelves: !process.env.VUE_APP_PUT_ON_SHELVES,\n      itemName: process.env.VUE_APP_ITEM_NAME,\n      img1: require('@/assets/image/slider/1.png'),\n      img2: require('@/assets/image/slider/2.png'),\n      img3: require('@/assets/image/slider/3.png'),\n      img4: require('@/assets/image/slider/4.png'),\n      img5: require('@/assets/image/slider/5.png'),\n      triangleDown: require('@/assets/image/me/triangle_down.png'),\n      TabShow: ['SM-wholesaleShop', 'FamilyShop'].includes(process.env.VUE_APP_ITEM_NAME) ? 2 : 1,\n      codeBtnTxt: this.$t('码'),\n      formData: {\n        username: '',\n        password: '',\n        re_password: '',\n        verifcode: '',\n        phone: '',\n        WhatsApp: ''\n      },\n      count: 60,\n      interval: null,\n      btnDisabled: false,\n      show: false,\n      pageDiaCode: false,\n      dialCode: localStorage.getItem('dialCode') || 1,\n      dialCode2: localStorage.getItem('dialCode2') || 1,\n      currentdialCode: 'dialCode'\n    };\n  },\n  created() {\n    if (this.isLogin()) {\n      this.$router.push('/');\n    }\n  },\n  methods: {\n    getCode() {\n      if (this.formData.username === '') {\n        _Toast(this.$t('请输入邮箱'));\n        return;\n      }\n      const reg = /^([A-Za-z0-9_\\-\\.\\w{3,}])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n      if (!reg.test(this.formData.username)) {\n        _Toast(this.$t('邮箱格式有误'));\n        return;\n      }\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('发送中'),\n        forbidClick: true\n      });\n      const params = {\n        target: this.formData.username\n      };\n      apiSendCode(params).then(() => {\n        _Toast.success(this.$t('发送成功'));\n        this.timerFn();\n      }).catch(err => {\n        _Toast.clear();\n      });\n    },\n    timerFn() {\n      this.codeBtnTxt = `${this.$t('再次获取')} ${this.count} s`;\n      this.btnDisabled = true;\n      this.interval = setInterval(() => {\n        if (this.count === 1) {\n          this.count = 60;\n          this.codeBtnTxt = this.$t('再次获取');\n          this.btnDisabled = false;\n          clearInterval(this.interval);\n        } else {\n          this.count -= 1;\n          this.codeBtnTxt = `${this.$t('再次获取')} ${this.count} s`;\n        }\n      }, 1000);\n    },\n    handleJump() {\n      const path = this.$store.state.multiItem[process.env.VUE_APP_ITEM_NAME].customer_service;\n      if (path) {\n        if (window.plus) {\n          window.plus.runtime.openURL(encodeURI(path + '?wp=app'));\n        } else {\n          window.open(path);\n        }\n      } else {\n        this.$router.push({\n          path: \"customerServiceIndex?path=customerService\"\n        });\n      }\n    },\n    TabClick(e) {\n      this.TabShow = e;\n      this.formData.username = '';\n      this.formData.password = '';\n      this.formData.re_password = '';\n    },\n    post_form() {\n      const t = this;\n      if (this.TabShow === 1) {\n        if (this.formData.username === '') {\n          _Toast(t.$t('请输入手机号'));\n          return;\n        } else {\n          const reg = /^[0-9]+[0-9]*$/;\n          if (!reg.test(this.formData.username)) {\n            _Toast(t.$t('手机号格式有误'));\n            return;\n          }\n        }\n      }\n      if (this.TabShow === 2) {\n        if (this.formData.username === '') {\n          _Toast(t.$t('请输入邮箱'));\n          return;\n        }\n        const reg = /^([A-Za-z0-9_\\-\\.\\w{3,}])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n        if (!reg.test(this.formData.username)) {\n          _Toast(t.$t('邮箱格式有误'));\n          return;\n        }\n      }\n      if (this.formData.password === '') {\n        _Toast(t.$t('请输入密码'));\n        return;\n      }\n      const reg = /^[a-zA-Z0-9!@#$%^&*()_+{}\\[\\]:;'\"\\\\|,.<>?~`\\-=/]{6,20}$/;\n      if (!reg.test(this.formData.password)) {\n        _Toast(t.$t('请输入 6-20 位由数字或字母组成的密码'));\n        return;\n      }\n      if (this.formData.password !== this.formData.re_password) {\n        _Toast(this.$t('两次密码输入不一致'));\n        return;\n      }\n      if (['SM-wholesaleShop', 'FamilyShop'].includes(this.itemName)) {\n        if (this.formData.WhatsApp.trim() === '') {\n          _Toast(this.$t('请输入WhatsApp账号'));\n          return;\n        }\n      }\n      this.show = true;\n    },\n    onSuccess() {\n      this.registerSubmit();\n      this.show = false;\n    },\n    onFail() {\n      console.log(\"失败回调\");\n    },\n    async registerSubmit() {\n      const requestFn = ['SM-wholesaleShop', 'FamilyShop'].includes(this.itemName) ? justShopRegister : registerNoVerifcode;\n      const params = {\n        password: encodeURI(this.formData.password)?.trim(),\n        re_password: encodeURI(this.formData.re_password)?.trim(),\n        type: this.TabShow\n      };\n      if (sessionStorage.getItem('ac_code')) {\n        params.agentCode = sessionStorage.getItem('ac_code');\n        sessionStorage.removeItem('ac_code');\n      }\n      if (['SM-wholesaleShop', 'FamilyShop'].includes(this.itemName)) {\n        params.verifcode = this.formData.verifcode;\n        params.phone = `${this.dialCode} ${this.formData.phone}`;\n        params.username = this.formData.username.trim();\n        params.whatsApp = `+${this.dialCode2} ${this.formData.WhatsApp}`;\n        //params.whatsApp = this.formData.WhatsApp\n      } else {\n        params.username = this.TabShow === 1 ? `${this.dialCode} ${this.formData.username.trim()}` : this.formData.username.trim();\n      }\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('提交中'),\n        forbidClick: true\n      });\n      requestFn(params).then(async res => {\n        if (['SM-wholesaleShop', 'FamilyShop'].includes(this.itemName)) {\n          localStorage.setItem(\"ACCOUNT_INFO\", JSON.stringify({\n            username: this.formData.username?.trim(),\n            phone: `${this.dialCode} ${this.formData.phone}`,\n            TabShow: 1\n          }));\n        } else {\n          if (this.TabShow == 1) {\n            localStorage.setItem(\"ACCOUNT_INFO\", JSON.stringify({\n              username: this.formData.username?.trim(),\n              dialCode: this.dialCode,\n              TabShow: 2\n            }));\n          } else {\n            localStorage.setItem(\"ACCOUNT_INFO\", JSON.stringify({\n              username: this.formData.username?.trim(),\n              TabShow: 1\n            }));\n          }\n        }\n\n        // Toast.success(this.$t('注册成功'))\n        _Toast.clear();\n        this.$notify(this.$t('注册成功'), 'success');\n        localStorage.setItem('token', res.token);\n        let timeZone = this.dayjs.tz.guess();\n        localStorage.setItem(\"timeZone\", timeZone);\n        await this.$store.dispatch('getUserInfo');\n        setTimeout(() => {\n          this.$router.push({\n            path: '/'\n          });\n        }, 500);\n      }).catch(err => {\n        // Toast.fail(err.msg)\n        _Toast.clear();\n      });\n    },\n    // 限制表情输入\n    limitEmoji(val) {\n      this.formData.WhatsApp = val.replace(/\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F]/g, '');\n    },\n    getName(params) {\n      if (!this.pageDiaCode) {\n        this.pageDiaCode = true;\n      } else {\n        this[this.currentdialCode] = params[2];\n        localStorage.setItem(this.currentdialCode, this[this.currentdialCode]);\n      }\n    },\n    openNational(key) {\n      this.currentdialCode = key;\n      this.$refs.controlChild.open();\n    },\n    onClickLeft() {\n      this.$router.push('/');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}