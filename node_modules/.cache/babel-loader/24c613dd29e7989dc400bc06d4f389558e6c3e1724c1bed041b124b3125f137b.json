{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { isDef, isObject } from '.';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction assignKey(to, from, key) {\n  var val = from[key];\n  if (!isDef(val)) {\n    return;\n  }\n  if (!hasOwnProperty.call(to, key) || !isObject(val)) {\n    to[key] = val;\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    to[key] = deepAssign(Object(to[key]), from[key]);\n  }\n}\nexport function deepAssign(to, from) {\n  Object.keys(from).forEach(function (key) {\n    assignKey(to, from, key);\n  });\n  return to;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}