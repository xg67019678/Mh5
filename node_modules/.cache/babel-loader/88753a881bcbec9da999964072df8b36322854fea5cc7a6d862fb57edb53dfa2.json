{"ast":null,"code":"import \"vant/es/loading/style\";\nimport _loading from \"vant/es/loading\";\nimport \"vant/es/collapse-item/style\";\nimport _CollapseItem from \"vant/es/collapse-item\";\nimport \"vant/es/collapse/style\";\nimport _Collapse from \"vant/es/collapse\";\nimport \"vant/es/popup/style\";\nimport _Popup from \"vant/es/popup\";\nimport \"vant/es/pull-refresh/style\";\nimport _PullRefresh from \"vant/es/pull-refresh\";\nimport \"vant/es/list/style\";\nimport _List from \"vant/es/list\";\nimport \"vant/es/icon/style\";\nimport _Icon from \"vant/es/icon\";\nimport \"vant/es/tabs/style\";\nimport _Tabs from \"vant/es/tabs\";\nimport \"vant/es/tab/style\";\nimport _Tab from \"vant/es/tab\";\nimport \"vant/es/nav-bar/style\";\nimport _NavBar from \"vant/es/nav-bar\";\nimport \"vant/es/empty/style\";\nimport _Empty from \"vant/es/empty\";\nimport \"vant/es/skeleton/style\";\nimport _Skeleton from \"vant/es/skeleton\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { apiCategoryTree, home_sellerGoods, home_category } from \"@/API/home\";\nimport { priceFormat, deduplication, priceFormatInt } from \"@/utils/utis\";\nexport default {\n  data() {\n    return {\n      priceFormatInt,\n      itemName: process.env.VUE_APP_ITEM_NAME,\n      isShowTopBtn: false,\n      activeName: '',\n      list: [],\n      loading: false,\n      finished: false,\n      refreshing: false,\n      isLeftShow: false,\n      screenHight: document.body.clientHeight,\n      popupHeight: \"100%\",\n      searchIcon: require(\"@/assets/image/index/sousuo.png\"),\n      categoryList: [],\n      page_no: 0,\n      discount: 0,\n      categoryId: undefined,\n      secondaryCategoryId: \"\",\n      scrollValue: \"\",\n      isLoading: true,\n      filter_list: [this.$t('综合'), this.$t('销量'), this.$t('价格'), this.$t('新品')],\n      filterIndex: 0,\n      page_no: 0,\n      isPrice: 0,\n      isNew: 0,\n      isHot: 0,\n      actions: [],\n      active1: 0,\n      active2: 0,\n      active3: 0,\n      actions1: [{\n        name: this.$t('价格由高到低'),\n        value: 1\n      }, {\n        name: this.$t('价格由低到高'),\n        value: 2\n      }],\n      actions2: [{\n        name: this.$t('销售量由高到低'),\n        value: 1\n      }, {\n        name: this.$t('销售量由低到高'),\n        value: 2\n      }],\n      actions3: [{\n        name: this.$t('时间由远到近'),\n        value: 1\n      }, {\n        name: this.$t('时间由近到远'),\n        value: 2\n      }],\n      shopLoading: true,\n      highLow: 1,\n      itemName: process.env.VUE_APP_ITEM_NAME,\n      mainColor: process.env.VUE_APP_MAIN_COLOR,\n      isChristmas: process.env?.VUE_APP_IS_CHRISTMAS\n    };\n  },\n  components: {\n    [_Skeleton.name]: _Skeleton,\n    [_Empty.name]: _Empty,\n    [_NavBar.name]: _NavBar,\n    [_Tab.name]: _Tab,\n    [_Tabs.name]: _Tabs,\n    [_Icon.name]: _Icon,\n    [_List.name]: _List,\n    [_PullRefresh.name]: _PullRefresh,\n    [_Popup.name]: _Popup,\n    [_Collapse.name]: _Collapse,\n    [_CollapseItem.name]: _CollapseItem,\n    [_loading.name]: _loading\n  },\n  computed: {\n    langIsAr() {\n      return localStorage.getItem('lang') == 'ar';\n    },\n    filterIcons() {\n      const suffix = this.$store.state.multiItem[process.env.VUE_APP_ITEM_NAME].iconSuffix || 'jpg';\n      return {\n        icon1: require(\"@/assets/image/shop/1.jpg\"),\n        icon2: require(`@/assets/${process.env.VUE_APP_ITEM_NAME}/2.${suffix}`),\n        icon3: require(`@/assets/${process.env.VUE_APP_ITEM_NAME}/3.${suffix}`)\n      };\n    }\n  },\n  mounted() {\n    this.apiCategoryTree();\n    window.addEventListener(\"scroll\", () => {\n      this.isShowTopBtn = document.documentElement.scrollTop || document.body.scrollTop > 500;\n    });\n  },\n  created() {\n    const tempObj = JSON.parse(sessionStorage.getItem(\"commodityState\"));\n    if (['Argos', 'ArgosShop'].includes(this.itemName)) {\n      this.filter_list = ['', this.$t('销量'), this.$t('价格'), ''];\n      this.selectIndex({}, 1, 3);\n    } else if (this.itemName == 'INT Overstock') {\n      this.selectIndex({}, 1, 3);\n    } else if (tempObj?.filterIndex) {\n      this.filterIndex = tempObj.filterIndex;\n      this.highLow = tempObj.highLow;\n      this.selectIndex({}, tempObj.filterIndex, tempObj.highLow);\n    } else {\n      this.onLoad();\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    if (from.meta.keepAlive) {\n      this.scrollValue = window.scrollY;\n      localStorage.setItem(\"position\", this.scrollValue);\n    }\n    next();\n  },\n  activated() {\n    let position = localStorage.getItem(\"position\");\n    this.$nextTick(() => {\n      //必须使用nextTick（在下次 DOM 更新循环结束之后执行延迟回调）\n      if (position !== undefined) {\n        window.scroll(0, position);\n      }\n    });\n  },\n  methods: {\n    priceFormat(num) {\n      return priceFormat(num);\n    },\n    toggleTabs() {\n      this.list = [];\n      scrollTo(0, 0);\n      // sessionStorage.removeItem(\"commodity_list\")\n    },\n    onRefresh() {\n      this.isLoading = true;\n      // 清空列表数据\n      this.finished = false;\n      this.page_no = 0;\n      // 重新加载数据\n      // 将 loading 设置为 true，表示处于加载状态\n      // this.loading = true;\n      this.onLoad();\n    },\n    //获取分类\n    apiCategoryTree() {\n      apiCategoryTree().then(res => {\n        this.categoryList = res;\n        // .filter(item => {\n        //     if (item.name && item.subList.length > 0) {\n        //         item.subList = item.subList.filter(subItem => subItem.name);\n        //     }\n        //     return item.name;\n        // });\n        this.categoryList.unshift({\n          name: this.$t('全部商品'),\n          subList: []\n        });\n      });\n      // home_category().then((res) => {\n      //     this.categoryList = res.pageList\n      //     this.categoryList.unshift({ name: this.$t('全部商品'), subList: [] })\n      //     this.categoryList.push({name: '', subList: []})\n      //     this.categoryList.push({name: '', subList: []})\n      // });\n    },\n    selectCategory(item, sub) {\n      if (item.name == this.$t('全部商品')) {\n        this.activeName = '';\n      }\n      this.isLoading = true;\n      this.page_no = 0;\n      this.list = [];\n      this.categoryId = item?.categoryId;\n      if (sub) this.secondaryCategoryId = sub.categoryId;else this.secondaryCategoryId = '';\n      this.isLeftShow = false;\n      this.onLoad();\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n    },\n    onLoad() {\n      this.shopLoading = true;\n      if (this.refreshing) {\n        this.list = [];\n        this.refreshing = false;\n      }\n      this.tuanduimingxi_post();\n    },\n    tuanduimingxi_post() {\n      // if (sessionStorage.getItem('commodity_list') && this.page_no == 0 && this.discount != 1) {\n      //     this.list = JSON.parse(sessionStorage.getItem('commodity_list'))\n      //     this.shopLoading = this.loading = false;\n      //     this.loading = this.isLoading = false;\n      // }\n      this.page_no++;\n      var data = {\n        'pageNum': this.page_no,\n        'pageSize': 10,\n        'categoryId': this.$route.query.categoryId,\n        'isPrice': this.isPrice,\n        'isNew': this.isNew,\n        'isHot': this.isHot,\n        discount: this.discount\n      };\n      !data.categoryId && delete data.categoryId;\n      !data.discount && delete data.discount;\n      !data.isHot && delete data.isHot;\n      !data.isPrice && delete data.isPrice;\n      !data.isNew && delete data.isNew;\n      if (this.categoryId) {\n        data.categoryId = this.categoryId;\n      }\n      if (this.secondaryCategoryId) {\n        data.categoryId = this.secondaryCategoryId;\n      }\n      home_sellerGoods(data).then(res => {\n        for (let i = 0; i < res.pageList.length; i++) {\n          this.list.push(res.pageList[i]);\n        }\n        // if (this.page_no == 1 && this.discount != 1) {\n        //     sessionStorage.setItem(\"commodity_list\", JSON.stringify(this.list))\n        // }\n        this.list = deduplication(this.list, 'id');\n        this.shopLoading = this.loading = false;\n        this.loading = this.isLoading = false;\n        if (res.pageList.length == 0) {\n          this.finished = true;\n        }\n      });\n    },\n    openDetails(item) {\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n      this.$router.push(\"/CommodityDetails?sellerGoodsId=\" + item.id);\n    },\n    selectIndex(item, index, highLow) {\n      // sessionStorage.removeItem(\"commodity_list\")\n      this.shopLoading = this.isLoading = true;\n      if (!highLow) {\n        if (this.filterIndex === index) {\n          this.highLow = this.highLow === 2 ? 3 : this.highLow === 3 ? 2 : 2;\n        } else {\n          this.highLow = 2;\n        }\n      } else {\n        this.highLow = highLow;\n      }\n      this.filterIndex = index;\n      if (index == 1) {\n        // this.isPrice = 0\n        // this.isNew = ''\n        this.actions = this.actions2;\n        this.onSelect({\n          value: this.highLow - 1\n        });\n      } else if (index == 2) {\n        this.actions = this.actions1;\n        // this.isPrice = 1\n        // this.isNew = ''\n        this.onSelect({\n          value: this.highLow - 1\n        });\n      } else if (index == 3) {\n        // this.isPrice = 0\n        // this.isNew = 'new'\n        this.actions = this.actions3;\n        this.onSelect({\n          value: this.highLow - 1\n        });\n      } else {\n        this.isPrice = 0;\n        this.isNew = '';\n        this.isPrice = 0;\n        this.isNew = 0;\n        this.isHot = 0;\n        this.page_no = 0;\n        this.list = [];\n        this.onLoad();\n        document.body.scrollTop = 0;\n        document.documentElement.scrollTop = 0;\n      }\n      this.filterIndex = index;\n      sessionStorage.setItem(\"commodityState\", JSON.stringify({\n        filterIndex: this.filterIndex,\n        highLow: this.highLow\n      }));\n    },\n    onSelect(item) {\n      if (this.filterIndex == 1) {\n        this.isPrice = 0;\n        this.isHot = item.value;\n        this.isNew = 0;\n        this.actions2.map(info => {\n          info.color = '';\n          if (info.value == item.value) {\n            info.color = this.mainColor;\n          }\n        });\n      } else if (this.filterIndex == 2) {\n        this.isPrice = item.value;\n        this.isHot = 0;\n        this.isNew = 0;\n        this.actions1.map(info => {\n          info.color = '';\n          if (info.value == item.value) {\n            info.color = this.mainColor;\n          }\n        });\n      } else {\n        this.isPrice = 0;\n        this.isHot = 0;\n        this.isNew = item.value;\n        this.actions3.map(info => {\n          info.color = '';\n          if (info.value == item.value) {\n            info.color = this.mainColor;\n          }\n        });\n      }\n      this.page_no = 0;\n      this.list = [];\n      this.onLoad();\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n    },\n    handleToTop() {\n      scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n  },\n  watch: {\n    discount(val) {\n      this.page_no = 0;\n      this.isLoading = true;\n      this.onLoad();\n    },\n    isLeftShow(val) {\n      if (val) {\n        this.$nextTick(() => {\n          const el = document.getElementById(\"pop-center\");\n          el.style.height = Math.floor(this.screenHight / 23) + \"rem\";\n        });\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}